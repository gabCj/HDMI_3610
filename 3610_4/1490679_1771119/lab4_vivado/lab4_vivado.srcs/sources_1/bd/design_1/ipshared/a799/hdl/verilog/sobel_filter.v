// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sobel_filter,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.920770,HLS_SYN_LAT=10453207,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=6,HLS_SYN_FF=2341,HLS_SYN_LUT=4036}" *)

module sobel_filter (
        ap_clk,
        ap_rst_n,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_state3 = 40'd4;
parameter    ap_ST_fsm_state4 = 40'd8;
parameter    ap_ST_fsm_state5 = 40'd16;
parameter    ap_ST_fsm_state6 = 40'd32;
parameter    ap_ST_fsm_state7 = 40'd64;
parameter    ap_ST_fsm_state8 = 40'd128;
parameter    ap_ST_fsm_state9 = 40'd256;
parameter    ap_ST_fsm_pp0_stage0 = 40'd512;
parameter    ap_ST_fsm_pp0_stage1 = 40'd1024;
parameter    ap_ST_fsm_pp0_stage2 = 40'd2048;
parameter    ap_ST_fsm_pp0_stage3 = 40'd4096;
parameter    ap_ST_fsm_pp0_stage4 = 40'd8192;
parameter    ap_ST_fsm_state28 = 40'd16384;
parameter    ap_ST_fsm_state29 = 40'd32768;
parameter    ap_ST_fsm_state30 = 40'd65536;
parameter    ap_ST_fsm_state31 = 40'd131072;
parameter    ap_ST_fsm_state32 = 40'd262144;
parameter    ap_ST_fsm_state33 = 40'd524288;
parameter    ap_ST_fsm_state34 = 40'd1048576;
parameter    ap_ST_fsm_state35 = 40'd2097152;
parameter    ap_ST_fsm_state36 = 40'd4194304;
parameter    ap_ST_fsm_state37 = 40'd8388608;
parameter    ap_ST_fsm_state38 = 40'd16777216;
parameter    ap_ST_fsm_state39 = 40'd33554432;
parameter    ap_ST_fsm_state40 = 40'd67108864;
parameter    ap_ST_fsm_state41 = 40'd134217728;
parameter    ap_ST_fsm_state42 = 40'd268435456;
parameter    ap_ST_fsm_state43 = 40'd536870912;
parameter    ap_ST_fsm_state44 = 40'd1073741824;
parameter    ap_ST_fsm_state45 = 40'd2147483648;
parameter    ap_ST_fsm_state46 = 40'd4294967296;
parameter    ap_ST_fsm_state47 = 40'd8589934592;
parameter    ap_ST_fsm_state48 = 40'd17179869184;
parameter    ap_ST_fsm_state49 = 40'd34359738368;
parameter    ap_ST_fsm_state50 = 40'd68719476736;
parameter    ap_ST_fsm_state51 = 40'd137438953472;
parameter    ap_ST_fsm_state52 = 40'd274877906944;
parameter    ap_ST_fsm_state53 = 40'd549755813888;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM1_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_USER_VALUE = 0;
parameter    C_M_AXI_GMEM1_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM1_CACHE_VALUE = 3;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM1_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_AWADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_AWID;
output  [7:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [C_M_AXI_GMEM1_AWUSER_WIDTH - 1:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_WDATA;
output  [C_M_AXI_GMEM1_WSTRB_WIDTH - 1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_WID;
output  [C_M_AXI_GMEM1_WUSER_WIDTH - 1:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_ARADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_ARID;
output  [7:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [C_M_AXI_GMEM1_ARUSER_WIDTH - 1:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_RID;
input  [C_M_AXI_GMEM1_RUSER_WIDTH - 1:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_BID;
input  [C_M_AXI_GMEM1_BUSER_WIDTH - 1:0] m_axi_gmem1_BUSER;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] inter_pix;
wire   [31:0] out_pix;
reg    gmem0_blk_n_AR;
wire    ap_CS_fsm_state3;
reg    gmem0_blk_n_R;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] tmp_17_reg_1937;
reg    gmem1_blk_n_AW;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] tmp_5_reg_1857;
reg    gmem1_blk_n_W;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg    gmem1_blk_n_B;
reg    ap_enable_reg_pp0_iter3;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state49;
wire    gmem0_AWREADY;
wire    gmem0_WREADY;
reg    gmem0_ARVALID;
wire    gmem0_ARREADY;
wire    gmem0_RVALID;
reg    gmem0_RREADY;
wire   [7:0] gmem0_RDATA;
wire    gmem0_RLAST;
wire   [0:0] gmem0_RID;
wire   [0:0] gmem0_RUSER;
wire   [1:0] gmem0_RRESP;
wire    gmem0_BVALID;
wire   [1:0] gmem0_BRESP;
wire   [0:0] gmem0_BID;
wire   [0:0] gmem0_BUSER;
reg    gmem1_AWVALID;
wire    gmem1_AWREADY;
reg   [31:0] gmem1_AWADDR;
reg   [31:0] gmem1_AWLEN;
reg    gmem1_WVALID;
wire    gmem1_WREADY;
reg   [31:0] gmem1_WDATA;
wire    gmem1_ARREADY;
wire    gmem1_RVALID;
wire   [31:0] gmem1_RDATA;
wire    gmem1_RLAST;
wire   [0:0] gmem1_RID;
wire   [0:0] gmem1_RUSER;
wire   [1:0] gmem1_RRESP;
wire    gmem1_BVALID;
reg    gmem1_BREADY;
wire   [1:0] gmem1_BRESP;
wire   [0:0] gmem1_BID;
wire   [0:0] gmem1_BUSER;
reg   [10:0] j_reg_389;
wire   [7:0] cache1_q0;
reg   [7:0] reg_586;
reg    ap_block_state11_pp0_stage1_iter0;
wire    ap_block_state16_pp0_stage1_iter1;
wire    ap_block_state21_pp0_stage1_iter2;
reg    ap_sig_ioackin_gmem1_AWREADY;
reg    ap_block_state21_io;
wire    ap_block_state26_pp0_stage1_iter3;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] tmp_6_reg_1861;
reg   [0:0] tmp_110_reg_1946;
reg   [7:0] reg_586_pp0_iter1_reg;
wire    ap_CS_fsm_state31;
wire   [7:0] cache1_q1;
reg   [7:0] reg_593;
reg   [7:0] reg_593_pp0_iter1_reg;
wire    ap_CS_fsm_state32;
reg   [7:0] reg_600;
wire    ap_block_state12_pp0_stage2_iter0;
wire    ap_block_state17_pp0_stage2_iter1;
wire    ap_block_state22_pp0_stage2_iter2;
reg    ap_sig_ioackin_gmem1_WREADY;
reg    ap_block_state22_io;
reg    ap_block_state27_pp0_stage2_iter3;
reg    ap_block_pp0_stage2_11001;
reg   [7:0] reg_600_pp0_iter1_reg;
reg   [7:0] reg_607;
reg   [7:0] reg_607_pp0_iter1_reg;
wire    ap_CS_fsm_state33;
reg   [7:0] reg_614;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state13_pp0_stage3_iter0;
wire    ap_block_state18_pp0_stage3_iter1;
wire    ap_block_state23_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
reg   [7:0] reg_614_pp0_iter1_reg;
reg   [7:0] reg_622;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state14_pp0_stage4_iter0;
wire    ap_block_state19_pp0_stage4_iter1;
wire    ap_block_state24_pp0_stage4_iter2;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_state34;
reg   [7:0] reg_630;
reg   [7:0] reg_638;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state10_pp0_stage0_iter0;
wire    ap_block_state15_pp0_stage0_iter1;
wire    ap_block_state20_pp0_stage0_iter2;
wire    ap_block_state25_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_state35;
reg   [7:0] reg_646;
wire   [7:0] grp_getVal_fu_544_ap_return;
reg   [7:0] reg_653;
reg   [0:0] tmp_17_reg_1937_pp0_iter1_reg;
reg   [0:0] tmp_110_reg_1946_pp0_iter1_reg;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state46;
wire   [32:0] tmp_8_cast6_fu_667_p1;
reg   [32:0] tmp_8_cast6_reg_1820;
wire   [30:0] tmp_8_cast_fu_671_p1;
reg   [30:0] tmp_8_cast_reg_1825;
wire  signed [33:0] tmp_10_cast_fu_675_p1;
reg  signed [33:0] tmp_10_cast_reg_1830;
wire   [1:0] tmp_10_fu_679_p1;
reg   [1:0] tmp_10_reg_1835;
wire    ap_CS_fsm_state2;
wire   [10:0] i_1_fu_689_p2;
reg   [10:0] i_1_reg_1847;
wire  signed [22:0] tmp_2_fu_719_p2;
reg  signed [22:0] tmp_2_reg_1852;
wire   [0:0] tmp_1_fu_683_p2;
wire   [0:0] tmp_5_fu_725_p2;
wire   [0:0] tmp_6_fu_731_p2;
reg   [31:0] gmem0_addr_reg_1865;
wire   [30:0] tmp_13_fu_760_p2;
reg   [30:0] tmp_13_reg_1871;
wire   [13:0] tmp_4_fu_787_p2;
reg   [13:0] tmp_4_reg_1876;
wire    ap_CS_fsm_state9;
wire  signed [13:0] tmp_9_fu_822_p2;
reg  signed [13:0] tmp_9_reg_1881;
wire   [31:0] tmp_s_fu_832_p2;
reg   [31:0] tmp_s_reg_1887;
wire  signed [13:0] tmp_11_fu_867_p2;
reg  signed [13:0] tmp_11_reg_1892;
wire   [31:0] tmp_12_fu_877_p2;
reg   [31:0] tmp_12_reg_1898;
wire  signed [13:0] tmp_14_fu_912_p2;
reg  signed [13:0] tmp_14_reg_1903;
wire   [31:0] tmp_15_fu_922_p2;
reg   [31:0] tmp_15_reg_1909;
wire   [12:0] j_cast1_fu_928_p1;
reg   [12:0] j_cast1_reg_1914;
reg   [12:0] j_cast1_reg_1914_pp0_iter1_reg;
wire   [31:0] j_cast2_fu_932_p1;
reg   [31:0] j_cast2_reg_1919;
wire   [13:0] j_cast3_fu_936_p1;
reg   [13:0] j_cast3_reg_1925;
wire   [11:0] j_cast_fu_940_p1;
reg   [11:0] j_cast_reg_1932;
wire   [0:0] tmp_17_fu_944_p2;
reg   [0:0] tmp_17_reg_1937_pp0_iter2_reg;
wire   [10:0] j_1_fu_950_p2;
reg   [10:0] j_1_reg_1941;
wire   [0:0] tmp_110_fu_968_p2;
reg   [0:0] tmp_110_reg_1946_pp0_iter2_reg;
reg   [7:0] gmem0_addr_read_reg_1960;
wire  signed [13:0] tmp_cast_fu_1003_p1;
reg  signed [13:0] tmp_cast_reg_1965;
wire   [31:0] tmp_65_fu_1056_p2;
reg   [31:0] tmp_65_reg_1986;
wire   [13:0] tmp_31_fu_1060_p2;
reg   [13:0] tmp_31_reg_1991;
wire   [7:0] grp_getVal_fu_561_ap_return;
reg   [7:0] tmp_68_reg_2016;
wire   [10:0] x_weight_1_1_1_fu_1143_p2;
reg   [10:0] x_weight_1_1_1_reg_2021;
wire   [9:0] y_weight_1_1_2_fu_1159_p2;
reg   [9:0] y_weight_1_1_2_reg_2026;
wire   [10:0] x_weight_1_2_fu_1189_p2;
reg   [10:0] x_weight_1_2_reg_2031;
wire   [10:0] y_weight_1_2_fu_1195_p2;
reg   [10:0] y_weight_1_2_reg_2036;
wire   [7:0] tmp_111_fu_1201_p1;
reg   [7:0] tmp_111_reg_2041;
wire   [0:0] tmp_76_fu_1237_p2;
reg   [0:0] tmp_76_reg_2046;
wire   [7:0] tmp_77_fu_1243_p2;
reg   [7:0] tmp_77_reg_2051;
wire   [0:0] tmp_80_fu_1248_p2;
reg   [0:0] tmp_80_reg_2057;
wire   [7:0] tmp_112_fu_1254_p1;
reg   [7:0] tmp_112_reg_2062;
reg   [31:0] gmem1_addr_reg_2068;
wire   [0:0] tmp_85_fu_1329_p2;
wire   [7:0] p_i_fu_1341_p3;
wire   [12:0] j2_cast1_fu_1372_p1;
reg   [12:0] j2_cast1_reg_2089;
wire    ap_CS_fsm_state30;
wire   [11:0] j2_cast_fu_1376_p1;
reg   [11:0] j2_cast_reg_2099;
wire   [10:0] j_3_fu_1386_p2;
reg   [10:0] j_3_reg_2108;
wire   [0:0] tmp_16_fu_1380_p2;
wire   [0:0] tmp_99_fu_1404_p2;
wire   [1:0] j_s_fu_1507_p2;
reg   [1:0] j_s_reg_2164;
wire    ap_CS_fsm_state36;
wire   [1:0] tmp_50_fu_1513_p2;
reg   [1:0] tmp_50_reg_2169;
wire   [0:0] exitcond_i1_fu_1501_p2;
wire  signed [18:0] x_weight_1_i1_cast_fu_1519_p1;
wire  signed [18:0] y_weight_1_i1_cast_fu_1523_p1;
wire  signed [17:0] grp_fu_1772_p3;
wire    ap_CS_fsm_state39;
wire  signed [17:0] grp_fu_1780_p3;
wire   [1:0] j_1_0_1_fu_1569_p2;
reg   [1:0] j_1_0_1_reg_2197;
wire    ap_CS_fsm_state40;
wire   [1:0] tmp_99_0_1_fu_1575_p2;
reg   [1:0] tmp_99_0_1_reg_2202;
wire   [0:0] exitcond_i1_0_1_fu_1563_p2;
wire  signed [19:0] x_weight_1_i1_0_1_ca_fu_1581_p1;
wire  signed [19:0] y_weight_1_i1_0_1_ca_fu_1585_p1;
wire  signed [18:0] grp_fu_1788_p3;
wire    ap_CS_fsm_state43;
wire  signed [18:0] grp_fu_1796_p3;
wire   [1:0] j_1_0_2_fu_1631_p2;
reg   [1:0] j_1_0_2_reg_2230;
wire    ap_CS_fsm_state44;
wire   [1:0] tmp_99_0_2_fu_1637_p2;
reg   [1:0] tmp_99_0_2_reg_2235;
wire   [0:0] exitcond_i1_0_2_fu_1625_p2;
wire   [7:0] p_i1_fu_1715_p3;
reg   [7:0] p_i1_reg_2243;
wire   [0:0] tmp_104_fu_1703_p2;
wire  signed [19:0] grp_fu_1804_p3;
wire    ap_CS_fsm_state47;
wire  signed [19:0] grp_fu_1812_p3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state10;
wire    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage2_subdone;
reg   [12:0] cache1_address0;
reg    cache1_ce0;
reg    cache1_we0;
reg   [12:0] cache1_address1;
reg    cache1_ce1;
reg   [1:0] grp_getVal_fu_544_xDiff;
reg   [1:0] grp_getVal_fu_544_yDiff;
reg   [7:0] grp_getVal_fu_544_Y_0_read;
reg   [7:0] grp_getVal_fu_544_Y_1_read;
reg   [7:0] grp_getVal_fu_544_Y_2_read;
reg   [7:0] grp_getVal_fu_544_Y_3_read;
reg   [7:0] grp_getVal_fu_544_Y_4_read;
reg   [7:0] grp_getVal_fu_544_Y_5_read;
reg   [7:0] grp_getVal_fu_544_Y_6_read;
reg   [7:0] grp_getVal_fu_544_Y_7_read;
reg    grp_getVal_fu_544_ap_ce;
reg    ap_predicate_op207_call_state16;
reg    ap_predicate_op209_call_state17;
reg    ap_predicate_op216_call_state18;
reg    ap_predicate_op229_call_state19;
reg    ap_predicate_op241_call_state20;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state45;
reg   [1:0] grp_getVal_fu_561_xDiff;
reg   [1:0] grp_getVal_fu_561_yDiff;
reg   [7:0] grp_getVal_fu_561_Y_1_read;
reg   [7:0] grp_getVal_fu_561_Y_2_read;
reg   [7:0] grp_getVal_fu_561_Y_3_read;
reg   [7:0] grp_getVal_fu_561_Y_4_read;
reg   [7:0] grp_getVal_fu_561_Y_5_read;
reg    grp_getVal_fu_561_ap_ce;
reg   [10:0] i_reg_378;
wire    ap_CS_fsm_state28;
reg   [10:0] ap_phi_mux_j_phi_fu_393_p4;
wire    ap_block_pp0_stage0;
wire   [7:0] ap_phi_reg_pp0_iter1_val_reg_400;
reg   [7:0] ap_phi_reg_pp0_iter2_val_reg_400;
reg   [10:0] j2_reg_418;
reg  signed [17:0] x_weight_1_i1_reg_429;
reg  signed [17:0] y_weight_1_i1_reg_441;
reg   [1:0] j_0_i1_reg_453;
reg  signed [18:0] x_weight_1_i1_0_1_reg_465;
reg  signed [18:0] y_weight_1_i1_0_1_reg_475;
reg   [1:0] j_0_i1_0_1_reg_485;
reg   [19:0] x_weight_1_i1_0_2_reg_497;
reg   [19:0] y_weight_1_i1_0_2_reg_507;
reg   [1:0] j_0_i1_0_2_reg_517;
reg   [7:0] val_1_reg_529;
wire    ap_CS_fsm_state48;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire   [63:0] tmp_35_fu_983_p1;
wire   [63:0] tmp_49_fu_993_p1;
wire   [63:0] tmp_56_fu_1016_p1;
wire   [63:0] tmp_58_fu_1029_p1;
wire   [63:0] tmp_22_fu_1042_p1;
wire   [63:0] tmp_60_fu_1051_p1;
wire   [63:0] tmp_62_fu_1072_p1;
wire   [63:0] tmp_64_fu_1085_p1;
wire   [63:0] tmp_32_fu_1093_p1;
wire   [63:0] tmp_66_fu_1098_p1;
wire   [63:0] tmp_24_fu_1416_p1;
wire   [63:0] tmp_29_fu_1426_p1;
wire   [63:0] tmp_34_fu_1436_p1;
wire   [63:0] tmp_37_fu_1446_p1;
wire   [63:0] tmp_39_fu_1456_p1;
wire   [63:0] tmp_41_fu_1466_p1;
wire   [63:0] tmp_44_fu_1476_p1;
wire   [63:0] tmp_46_fu_1486_p1;
wire   [63:0] tmp_48_fu_1496_p1;
wire  signed [63:0] tmp_91_fu_750_p1;
wire   [63:0] out_pix4_sum_cast_fu_1285_p1;
wire   [63:0] tmp_19_fu_1362_p1;
reg    ap_reg_ioackin_gmem0_ARREADY;
reg    ap_sig_ioackin_gmem0_ARREADY;
reg    ap_reg_ioackin_gmem1_AWREADY;
reg    ap_block_pp0_stage1_01001;
reg    ap_reg_ioackin_gmem1_WREADY;
reg    ap_block_pp0_stage2_01001;
wire   [31:0] fourWide_fu_1349_p5;
wire   [31:0] fourWide_1_fu_1759_p5;
wire   [29:0] tmp_8_fu_657_p4;
wire   [21:0] p_shl1_fu_695_p3;
wire   [17:0] p_shl2_fu_707_p3;
wire   [22:0] p_shl1_cast_fu_703_p1;
wire   [22:0] p_shl2_cast_fu_715_p1;
wire  signed [31:0] tmp_20_fu_737_p1;
wire   [33:0] tmp_75_fu_741_p1;
wire   [33:0] tmp_81_fu_745_p2;
wire   [12:0] p_shl3_fu_765_p3;
wire   [8:0] p_shl4_fu_776_p3;
wire   [13:0] p_shl3_cast_fu_772_p1;
wire   [13:0] p_shl4_cast_fu_783_p1;
wire   [1:0] i_1_cast_fu_793_p2;
wire   [12:0] p_shl5_fu_798_p3;
wire   [8:0] p_shl6_fu_810_p3;
wire   [13:0] p_shl5_cast_fu_806_p1;
wire   [13:0] p_shl6_cast_fu_818_p1;
wire  signed [31:0] tmp_9_cast_fu_828_p1;
wire   [1:0] tmp_7_cast_fu_838_p2;
wire   [12:0] p_shl7_fu_843_p3;
wire   [8:0] p_shl8_fu_855_p3;
wire   [13:0] p_shl7_cast_fu_851_p1;
wire   [13:0] p_shl8_cast_fu_863_p1;
wire  signed [31:0] tmp_11_cast_fu_873_p1;
wire   [1:0] tmp_13_cast_fu_883_p2;
wire   [12:0] p_shl_fu_888_p3;
wire   [8:0] p_shl9_fu_900_p3;
wire   [13:0] p_shl_cast_fu_896_p1;
wire   [13:0] p_shl9_cast_fu_908_p1;
wire  signed [31:0] tmp_15_cast_fu_918_p1;
wire   [0:0] tmp_109_fu_962_p2;
wire   [0:0] tmp_108_fu_956_p2;
wire   [13:0] tmp_33_fu_974_p2;
wire  signed [31:0] tmp_33_cast_fu_979_p1;
wire   [31:0] tmp_42_fu_988_p2;
wire   [11:0] tmp_fu_998_p2;
wire   [13:0] tmp_55_fu_1007_p2;
wire  signed [31:0] tmp_57_cast_fu_1012_p1;
wire   [13:0] tmp_57_fu_1021_p2;
wire  signed [31:0] tmp_59_cast_fu_1025_p1;
wire   [13:0] tmp_21_fu_1034_p2;
wire  signed [31:0] tmp_23_cast_fu_1038_p1;
wire   [31:0] tmp_59_fu_1047_p2;
wire   [13:0] tmp_61_fu_1064_p2;
wire  signed [31:0] tmp_64_cast_fu_1068_p1;
wire   [13:0] tmp_63_fu_1077_p2;
wire  signed [31:0] tmp_66_cast_fu_1081_p1;
wire  signed [31:0] tmp_31_cast_fu_1090_p1;
wire   [8:0] tmp_118_0_1_fu_1106_p3;
wire   [8:0] tmp_111_0_2_cast_fu_1117_p1;
wire   [8:0] tmp_111_cast_fu_1102_p1;
wire   [8:0] x_weight_1_0_2_fu_1121_p2;
wire   [8:0] p_shl10_fu_1131_p3;
wire  signed [10:0] x_weight_1_0_2_cast_fu_1127_p1;
wire   [10:0] p_shl10_cast_fu_1139_p1;
wire   [8:0] tmp56_fu_1149_p2;
wire   [9:0] tmp123_cast_fu_1155_p1;
wire   [9:0] tmp_118_0_1_cast_fu_1113_p1;
wire   [8:0] tmp_114_1_2_fu_1165_p3;
wire   [10:0] tmp_114_1_2_cast_fu_1173_p1;
wire   [10:0] x_weight_1_1_2_fu_1177_p2;
wire   [10:0] tmp_111_2_cast_fu_1185_p1;
wire   [10:0] y_weight_1_1_2_cast_fu_1182_p1;
wire   [8:0] p_shl11_fu_1205_p3;
wire   [10:0] p_shl11_cast_fu_1213_p1;
wire   [10:0] tmp_111_2_2_cast_fu_1222_p1;
wire   [10:0] y_weight_1_2_1_fu_1217_p2;
wire   [10:0] x_weight_1_2_2_fu_1226_p2;
wire   [10:0] y_weight_1_2_2_fu_1231_p2;
wire   [12:0] tmp92_fu_1258_p2;
wire  signed [22:0] tmp127_cast_fu_1263_p1;
wire   [22:0] tmp_92_fu_1267_p2;
wire  signed [31:0] tmp_95_cast_fu_1272_p1;
wire   [32:0] tmp_93_cast_fu_1276_p1;
wire   [32:0] out_pix4_sum_fu_1280_p2;
wire   [7:0] tmp_78_fu_1295_p2;
wire   [7:0] tmp_82_fu_1306_p2;
wire   [7:0] tmp_79_fu_1300_p3;
wire   [7:0] tmp_83_fu_1311_p3;
wire   [7:0] tmp_84_fu_1317_p2;
wire   [0:0] tmp_86_fu_1335_p2;
wire   [7:0] edge_val_fu_1323_p2;
wire   [0:0] tmp_95_fu_1398_p2;
wire   [0:0] tmp_93_fu_1392_p2;
wire   [11:0] tmp_23_fu_1410_p2;
wire   [11:0] tmp_28_fu_1421_p2;
wire   [11:0] tmp_30_fu_1431_p2;
wire   [12:0] tmp_36_fu_1441_p2;
wire   [12:0] tmp_38_fu_1451_p2;
wire   [12:0] tmp_40_fu_1461_p2;
wire   [12:0] tmp_43_fu_1471_p2;
wire   [12:0] tmp_45_fu_1481_p2;
wire   [12:0] tmp_47_fu_1491_p2;
wire  signed [7:0] tmp_51_fu_1531_p5;
wire  signed [7:0] tmp_53_fu_1547_p5;
wire  signed [7:0] tmp_89_fu_1593_p5;
wire  signed [7:0] tmp_90_fu_1609_p5;
wire   [7:0] tmp_113_fu_1649_p1;
wire   [0:0] tmp_94_fu_1643_p2;
wire   [7:0] tmp_96_fu_1653_p2;
wire   [7:0] tmp_114_fu_1673_p1;
wire   [0:0] tmp_98_fu_1667_p2;
wire   [7:0] tmp_100_fu_1677_p2;
wire   [7:0] tmp_97_fu_1659_p3;
wire   [7:0] tmp_101_fu_1683_p3;
wire   [7:0] tmp_102_fu_1691_p2;
wire   [0:0] tmp_107_fu_1709_p2;
wire   [7:0] edge_val1_fu_1697_p2;
wire  signed [7:0] tmp_105_fu_1727_p5;
wire  signed [7:0] tmp_106_fu_1743_p5;
wire   [7:0] grp_fu_1772_p0;
wire   [15:0] tmp_1011_cast_fu_1527_p1;
wire   [7:0] grp_fu_1780_p0;
wire   [7:0] grp_fu_1788_p0;
wire   [15:0] tmp_101_0_1_cast_fu_1589_p1;
wire   [7:0] grp_fu_1796_p0;
wire   [7:0] grp_fu_1804_p0;
wire   [15:0] tmp_101_0_2_cast_fu_1723_p1;
wire   [7:0] grp_fu_1812_p0;
reg   [39:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1127;
reg    ap_condition_1141;

// power-on initialization
initial begin
#0 ap_CS_fsm = 40'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_reg_ioackin_gmem0_ARREADY = 1'b0;
#0 ap_reg_ioackin_gmem1_AWREADY = 1'b0;
#0 ap_reg_ioackin_gmem1_WREADY = 1'b0;
end

sobel_filter_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
sobel_filter_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .inter_pix(inter_pix),
    .out_pix(out_pix)
);

sobel_filter_gmem0_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ))
sobel_filter_gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem0_ARVALID),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(gmem0_addr_reg_1865),
    .I_ARID(1'd0),
    .I_ARLEN(32'd1920),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(gmem0_RREADY),
    .I_RDATA(gmem0_RDATA),
    .I_RID(gmem0_RID),
    .I_RUSER(gmem0_RUSER),
    .I_RRESP(gmem0_RRESP),
    .I_RLAST(gmem0_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(8'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(1'd0),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem0_BRESP),
    .I_BID(gmem0_BID),
    .I_BUSER(gmem0_BUSER)
);

sobel_filter_gmem1_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM1_CACHE_VALUE ))
sobel_filter_gmem1_m_axi_U(
    .AWVALID(m_axi_gmem1_AWVALID),
    .AWREADY(m_axi_gmem1_AWREADY),
    .AWADDR(m_axi_gmem1_AWADDR),
    .AWID(m_axi_gmem1_AWID),
    .AWLEN(m_axi_gmem1_AWLEN),
    .AWSIZE(m_axi_gmem1_AWSIZE),
    .AWBURST(m_axi_gmem1_AWBURST),
    .AWLOCK(m_axi_gmem1_AWLOCK),
    .AWCACHE(m_axi_gmem1_AWCACHE),
    .AWPROT(m_axi_gmem1_AWPROT),
    .AWQOS(m_axi_gmem1_AWQOS),
    .AWREGION(m_axi_gmem1_AWREGION),
    .AWUSER(m_axi_gmem1_AWUSER),
    .WVALID(m_axi_gmem1_WVALID),
    .WREADY(m_axi_gmem1_WREADY),
    .WDATA(m_axi_gmem1_WDATA),
    .WSTRB(m_axi_gmem1_WSTRB),
    .WLAST(m_axi_gmem1_WLAST),
    .WID(m_axi_gmem1_WID),
    .WUSER(m_axi_gmem1_WUSER),
    .ARVALID(m_axi_gmem1_ARVALID),
    .ARREADY(m_axi_gmem1_ARREADY),
    .ARADDR(m_axi_gmem1_ARADDR),
    .ARID(m_axi_gmem1_ARID),
    .ARLEN(m_axi_gmem1_ARLEN),
    .ARSIZE(m_axi_gmem1_ARSIZE),
    .ARBURST(m_axi_gmem1_ARBURST),
    .ARLOCK(m_axi_gmem1_ARLOCK),
    .ARCACHE(m_axi_gmem1_ARCACHE),
    .ARPROT(m_axi_gmem1_ARPROT),
    .ARQOS(m_axi_gmem1_ARQOS),
    .ARREGION(m_axi_gmem1_ARREGION),
    .ARUSER(m_axi_gmem1_ARUSER),
    .RVALID(m_axi_gmem1_RVALID),
    .RREADY(m_axi_gmem1_RREADY),
    .RDATA(m_axi_gmem1_RDATA),
    .RLAST(m_axi_gmem1_RLAST),
    .RID(m_axi_gmem1_RID),
    .RUSER(m_axi_gmem1_RUSER),
    .RRESP(m_axi_gmem1_RRESP),
    .BVALID(m_axi_gmem1_BVALID),
    .BREADY(m_axi_gmem1_BREADY),
    .BRESP(m_axi_gmem1_BRESP),
    .BID(m_axi_gmem1_BID),
    .BUSER(m_axi_gmem1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem1_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem1_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem1_RDATA),
    .I_RID(gmem1_RID),
    .I_RUSER(gmem1_RUSER),
    .I_RRESP(gmem1_RRESP),
    .I_RLAST(gmem1_RLAST),
    .I_AWVALID(gmem1_AWVALID),
    .I_AWREADY(gmem1_AWREADY),
    .I_AWADDR(gmem1_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(gmem1_AWLEN),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem1_WVALID),
    .I_WREADY(gmem1_WREADY),
    .I_WDATA(gmem1_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(gmem1_BVALID),
    .I_BREADY(gmem1_BREADY),
    .I_BRESP(gmem1_BRESP),
    .I_BID(gmem1_BID),
    .I_BUSER(gmem1_BUSER)
);

sobel_filter_cache1 #(
    .DataWidth( 8 ),
    .AddressRange( 7680 ),
    .AddressWidth( 13 ))
cache1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(cache1_address0),
    .ce0(cache1_ce0),
    .we0(cache1_we0),
    .d0(gmem0_addr_read_reg_1960),
    .q0(cache1_q0),
    .address1(cache1_address1),
    .ce1(cache1_ce1),
    .q1(cache1_q1)
);

getVal grp_getVal_fu_544(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .xDiff(grp_getVal_fu_544_xDiff),
    .yDiff(grp_getVal_fu_544_yDiff),
    .Y_0_read(grp_getVal_fu_544_Y_0_read),
    .Y_1_read(grp_getVal_fu_544_Y_1_read),
    .Y_2_read(grp_getVal_fu_544_Y_2_read),
    .Y_3_read(grp_getVal_fu_544_Y_3_read),
    .Y_4_read(grp_getVal_fu_544_Y_4_read),
    .Y_5_read(grp_getVal_fu_544_Y_5_read),
    .Y_6_read(grp_getVal_fu_544_Y_6_read),
    .Y_7_read(grp_getVal_fu_544_Y_7_read),
    .Y_8_read(reg_646),
    .ap_return(grp_getVal_fu_544_ap_return),
    .ap_ce(grp_getVal_fu_544_ap_ce)
);

getVal grp_getVal_fu_561(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .xDiff(grp_getVal_fu_561_xDiff),
    .yDiff(grp_getVal_fu_561_yDiff),
    .Y_0_read(reg_638),
    .Y_1_read(grp_getVal_fu_561_Y_1_read),
    .Y_2_read(grp_getVal_fu_561_Y_2_read),
    .Y_3_read(grp_getVal_fu_561_Y_3_read),
    .Y_4_read(grp_getVal_fu_561_Y_4_read),
    .Y_5_read(grp_getVal_fu_561_Y_5_read),
    .Y_6_read(reg_622),
    .Y_7_read(reg_630),
    .Y_8_read(reg_646),
    .ap_return(grp_getVal_fu_561_ap_return),
    .ap_ce(grp_getVal_fu_561_ap_ce)
);

sobel_filter_mux_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_filter_mux_cud_U14(
    .din0(8'd255),
    .din1(8'd0),
    .din2(8'd1),
    .din3(j_0_i1_reg_453),
    .dout(tmp_51_fu_1531_p5)
);

sobel_filter_mux_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_filter_mux_cud_U15(
    .din0(8'd1),
    .din1(8'd2),
    .din2(8'd1),
    .din3(j_0_i1_reg_453),
    .dout(tmp_53_fu_1547_p5)
);

sobel_filter_mux_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_filter_mux_cud_U16(
    .din0(8'd254),
    .din1(8'd0),
    .din2(8'd2),
    .din3(j_0_i1_0_1_reg_485),
    .dout(tmp_89_fu_1593_p5)
);

sobel_filter_mux_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_filter_mux_cud_U17(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(j_0_i1_0_1_reg_485),
    .dout(tmp_90_fu_1609_p5)
);

sobel_filter_mux_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_filter_mux_cud_U18(
    .din0(8'd255),
    .din1(8'd0),
    .din2(8'd1),
    .din3(j_0_i1_0_2_reg_517),
    .dout(tmp_105_fu_1727_p5)
);

sobel_filter_mux_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_filter_mux_cud_U19(
    .din0(8'd255),
    .din1(8'd254),
    .din2(8'd255),
    .din3(j_0_i1_0_2_reg_517),
    .dout(tmp_106_fu_1743_p5)
);

sobel_filter_mac_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
sobel_filter_mac_dEe_U20(
    .din0(grp_fu_1772_p0),
    .din1(tmp_51_fu_1531_p5),
    .din2(x_weight_1_i1_reg_429),
    .dout(grp_fu_1772_p3)
);

sobel_filter_mac_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
sobel_filter_mac_dEe_U21(
    .din0(grp_fu_1780_p0),
    .din1(tmp_53_fu_1547_p5),
    .din2(y_weight_1_i1_reg_441),
    .dout(grp_fu_1780_p3)
);

sobel_filter_mac_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 19 ))
sobel_filter_mac_eOg_U22(
    .din0(grp_fu_1788_p0),
    .din1(tmp_89_fu_1593_p5),
    .din2(x_weight_1_i1_0_1_reg_465),
    .dout(grp_fu_1788_p3)
);

sobel_filter_mac_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 19 ))
sobel_filter_mac_eOg_U23(
    .din0(grp_fu_1796_p0),
    .din1(tmp_90_fu_1609_p5),
    .din2(y_weight_1_i1_0_1_reg_475),
    .dout(grp_fu_1796_p3)
);

sobel_filter_mac_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 20 ))
sobel_filter_mac_fYi_U24(
    .din0(grp_fu_1804_p0),
    .din1(tmp_105_fu_1727_p5),
    .din2(x_weight_1_i1_0_2_reg_497),
    .dout(grp_fu_1804_p3)
);

sobel_filter_mac_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 20 ))
sobel_filter_mac_fYi_U25(
    .din0(grp_fu_1812_p0),
    .din1(tmp_106_fu_1743_p5),
    .din2(y_weight_1_i1_0_2_reg_507),
    .dout(grp_fu_1812_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state10)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state10);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem0_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            if ((ap_sig_ioackin_gmem0_ARREADY == 1'b1)) begin
                ap_reg_ioackin_gmem0_ARREADY <= 1'b0;
            end else if ((gmem0_ARREADY == 1'b1)) begin
                ap_reg_ioackin_gmem0_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem1_AWREADY <= 1'b0;
    end else begin
        if ((((ap_sig_ioackin_gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state29)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_5_reg_1857 == 1'd1)))) begin
            ap_reg_ioackin_gmem1_AWREADY <= 1'b0;
        end else if ((((gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state29)) | ((gmem1_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_5_reg_1857 == 1'd1) & (1'b0 == ap_block_pp0_stage1_01001)))) begin
            ap_reg_ioackin_gmem1_AWREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem1_WREADY <= 1'b0;
    end else begin
        if ((((ap_sig_ioackin_gmem1_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state49)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_5_reg_1857 == 1'd1)))) begin
            ap_reg_ioackin_gmem1_WREADY <= 1'b0;
        end else if ((((gmem1_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state49)) | ((gmem1_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_5_reg_1857 == 1'd1) & (1'b0 == ap_block_pp0_stage2_01001)))) begin
            ap_reg_ioackin_gmem1_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_85_fu_1329_p2 == 1'd1) & (tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946_pp0_iter2_reg == 1'd0) & (tmp_17_reg_1937_pp0_iter2_reg == 1'd0) & (tmp_6_reg_1861 == 1'd0))) begin
        ap_phi_reg_pp0_iter2_val_reg_400 <= 8'd255;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_5_reg_1857 == 1'd1) & (tmp_85_fu_1329_p2 == 1'd0) & (tmp_110_reg_1946_pp0_iter2_reg == 1'd0) & (tmp_17_reg_1937_pp0_iter2_reg == 1'd0) & (tmp_6_reg_1861 == 1'd0))) begin
        ap_phi_reg_pp0_iter2_val_reg_400 <= p_i_fu_1341_p3;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter2_val_reg_400 <= ap_phi_reg_pp0_iter1_val_reg_400;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        i_reg_378 <= i_1_reg_1847;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_378 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sig_ioackin_gmem1_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
        j2_reg_418 <= j_3_reg_2108;
    end else if (((ap_sig_ioackin_gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
        j2_reg_418 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        j_0_i1_0_1_reg_485 <= j_1_0_1_reg_2197;
    end else if (((1'b1 == ap_CS_fsm_state36) & (exitcond_i1_fu_1501_p2 == 1'd1))) begin
        j_0_i1_0_1_reg_485 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        j_0_i1_0_2_reg_517 <= j_1_0_2_reg_2230;
    end else if (((1'b1 == ap_CS_fsm_state40) & (exitcond_i1_0_1_fu_1563_p2 == 1'd1))) begin
        j_0_i1_0_2_reg_517 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        j_0_i1_reg_453 <= j_s_reg_2164;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        j_0_i1_reg_453 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_17_reg_1937 == 1'd0))) begin
        j_reg_389 <= j_1_reg_1941;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        j_reg_389 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        reg_614 <= cache1_q0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946 == 1'd0) & (tmp_6_reg_1861 == 1'd0) & (tmp_17_reg_1937 == 1'd0))) begin
        reg_614 <= cache1_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        reg_622 <= cache1_q1;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946 == 1'd0) & (tmp_6_reg_1861 == 1'd0) & (tmp_17_reg_1937 == 1'd0))) begin
        reg_622 <= cache1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        reg_630 <= cache1_q0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946 == 1'd0) & (tmp_6_reg_1861 == 1'd0) & (tmp_17_reg_1937 == 1'd0))) begin
        reg_630 <= cache1_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        reg_638 <= cache1_q1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946 == 1'd0) & (tmp_6_reg_1861 == 1'd0) & (tmp_17_reg_1937 == 1'd0))) begin
        reg_638 <= cache1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        reg_646 <= cache1_q0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946 == 1'd0) & (tmp_6_reg_1861 == 1'd0) & (tmp_17_reg_1937 == 1'd0))) begin
        reg_646 <= cache1_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (tmp_99_fu_1404_p2 == 1'd1) & (tmp_16_fu_1380_p2 == 1'd0))) begin
        val_1_reg_529 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state44) & (tmp_104_fu_1703_p2 == 1'd1) & (exitcond_i1_0_2_fu_1625_p2 == 1'd1))) begin
        val_1_reg_529 <= 8'd255;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        val_1_reg_529 <= p_i1_reg_2243;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        x_weight_1_i1_0_1_reg_465 <= grp_fu_1788_p3;
    end else if (((1'b1 == ap_CS_fsm_state36) & (exitcond_i1_fu_1501_p2 == 1'd1))) begin
        x_weight_1_i1_0_1_reg_465 <= x_weight_1_i1_cast_fu_1519_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        x_weight_1_i1_0_2_reg_497 <= grp_fu_1804_p3;
    end else if (((1'b1 == ap_CS_fsm_state40) & (exitcond_i1_0_1_fu_1563_p2 == 1'd1))) begin
        x_weight_1_i1_0_2_reg_497 <= x_weight_1_i1_0_1_ca_fu_1581_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        x_weight_1_i1_reg_429 <= grp_fu_1772_p3;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        x_weight_1_i1_reg_429 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        y_weight_1_i1_0_1_reg_475 <= grp_fu_1796_p3;
    end else if (((1'b1 == ap_CS_fsm_state36) & (exitcond_i1_fu_1501_p2 == 1'd1))) begin
        y_weight_1_i1_0_1_reg_475 <= y_weight_1_i1_cast_fu_1523_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        y_weight_1_i1_0_2_reg_507 <= grp_fu_1812_p3;
    end else if (((1'b1 == ap_CS_fsm_state40) & (exitcond_i1_0_1_fu_1563_p2 == 1'd1))) begin
        y_weight_1_i1_0_2_reg_507 <= y_weight_1_i1_0_1_ca_fu_1585_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        y_weight_1_i1_reg_441 <= grp_fu_1780_p3;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        y_weight_1_i1_reg_441 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_17_reg_1937 == 1'd0))) begin
        gmem0_addr_read_reg_1960 <= gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_1_fu_683_p2 == 1'd0))) begin
        gmem0_addr_reg_1865 <= tmp_91_fu_750_p1;
        tmp_2_reg_1852[22 : 7] <= tmp_2_fu_719_p2[22 : 7];
        tmp_5_reg_1857 <= tmp_5_fu_725_p2;
        tmp_6_reg_1861 <= tmp_6_fu_731_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_5_reg_1857 == 1'd1))) begin
        gmem1_addr_reg_2068 <= out_pix4_sum_cast_fu_1285_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_1_reg_1847 <= i_1_fu_689_p2;
        tmp_10_reg_1835 <= tmp_10_fu_679_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        j2_cast1_reg_2089[10 : 0] <= j2_cast1_fu_1372_p1[10 : 0];
        j2_cast_reg_2099[10 : 0] <= j2_cast_fu_1376_p1[10 : 0];
        j_3_reg_2108 <= j_3_fu_1386_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        j_1_0_1_reg_2197 <= j_1_0_1_fu_1569_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        j_1_0_2_reg_2230 <= j_1_0_2_fu_1631_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j_1_reg_1941 <= j_1_fu_950_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_cast1_reg_1914[10 : 0] <= j_cast1_fu_928_p1[10 : 0];
        j_cast1_reg_1914_pp0_iter1_reg[10 : 0] <= j_cast1_reg_1914[10 : 0];
        j_cast2_reg_1919[10 : 0] <= j_cast2_fu_932_p1[10 : 0];
        j_cast3_reg_1925[10 : 0] <= j_cast3_fu_936_p1[10 : 0];
        j_cast_reg_1932[10 : 0] <= j_cast_fu_940_p1[10 : 0];
        tmp_110_reg_1946_pp0_iter1_reg <= tmp_110_reg_1946;
        tmp_110_reg_1946_pp0_iter2_reg <= tmp_110_reg_1946_pp0_iter1_reg;
        tmp_17_reg_1937 <= tmp_17_fu_944_p2;
        tmp_17_reg_1937_pp0_iter1_reg <= tmp_17_reg_1937;
        tmp_17_reg_1937_pp0_iter2_reg <= tmp_17_reg_1937_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        j_s_reg_2164 <= j_s_fu_1507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (exitcond_i1_0_2_fu_1625_p2 == 1'd1) & (tmp_104_fu_1703_p2 == 1'd0))) begin
        p_i1_reg_2243 <= p_i1_fu_1715_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946 == 1'd0) & (tmp_6_reg_1861 == 1'd0) & (tmp_17_reg_1937 == 1'd0)))) begin
        reg_586 <= cache1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        reg_586_pp0_iter1_reg <= reg_586;
        reg_593_pp0_iter1_reg <= reg_593;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946 == 1'd0) & (tmp_6_reg_1861 == 1'd0) & (tmp_17_reg_1937 == 1'd0)))) begin
        reg_593 <= cache1_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946 == 1'd0) & (tmp_6_reg_1861 == 1'd0) & (tmp_17_reg_1937 == 1'd0)))) begin
        reg_600 <= cache1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        reg_600_pp0_iter1_reg <= reg_600;
        reg_607_pp0_iter1_reg <= reg_607;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946 == 1'd0) & (tmp_6_reg_1861 == 1'd0) & (tmp_17_reg_1937 == 1'd0)))) begin
        reg_607 <= cache1_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        reg_614_pp0_iter1_reg <= reg_614;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state38) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946_pp0_iter1_reg == 1'd0) & (tmp_17_reg_1937_pp0_iter1_reg == 1'd0) & (tmp_6_reg_1861 == 1'd0)))) begin
        reg_653 <= grp_getVal_fu_544_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_10_cast_reg_1830 <= tmp_10_cast_fu_675_p1;
        tmp_8_cast6_reg_1820[29 : 0] <= tmp_8_cast6_fu_667_p1[29 : 0];
        tmp_8_cast_reg_1825[29 : 0] <= tmp_8_cast_fu_671_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_5_reg_1857 == 1'd1) & (tmp_17_fu_944_p2 == 1'd0) & (tmp_6_reg_1861 == 1'd0))) begin
        tmp_110_reg_1946 <= tmp_110_fu_968_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946_pp0_iter1_reg == 1'd0) & (tmp_17_reg_1937_pp0_iter1_reg == 1'd0) & (tmp_6_reg_1861 == 1'd0))) begin
        tmp_111_reg_2041 <= tmp_111_fu_1201_p1;
        x_weight_1_2_reg_2031 <= x_weight_1_2_fu_1189_p2;
        y_weight_1_2_reg_2036 <= y_weight_1_2_fu_1195_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946_pp0_iter1_reg == 1'd0) & (tmp_17_reg_1937_pp0_iter1_reg == 1'd0) & (tmp_6_reg_1861 == 1'd0))) begin
        tmp_112_reg_2062 <= tmp_112_fu_1254_p1;
        tmp_76_reg_2046 <= tmp_76_fu_1237_p2;
        tmp_77_reg_2051 <= tmp_77_fu_1243_p2;
        tmp_80_reg_2057 <= tmp_80_fu_1248_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_11_reg_1892[13 : 7] <= tmp_11_fu_867_p2[13 : 7];
        tmp_12_reg_1898[31 : 7] <= tmp_12_fu_877_p2[31 : 7];
        tmp_14_reg_1903[13 : 7] <= tmp_14_fu_912_p2[13 : 7];
        tmp_15_reg_1909[31 : 7] <= tmp_15_fu_922_p2[31 : 7];
        tmp_4_reg_1876[13 : 7] <= tmp_4_fu_787_p2[13 : 7];
        tmp_9_reg_1881[13 : 7] <= tmp_9_fu_822_p2[13 : 7];
        tmp_s_reg_1887[31 : 7] <= tmp_s_fu_832_p2[31 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_1_fu_683_p2 == 1'd1))) begin
        tmp_13_reg_1871 <= tmp_13_fu_760_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946 == 1'd0) & (tmp_6_reg_1861 == 1'd0) & (tmp_17_reg_1937 == 1'd0))) begin
        tmp_31_reg_1991 <= tmp_31_fu_1060_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & (exitcond_i1_fu_1501_p2 == 1'd0))) begin
        tmp_50_reg_2169 <= tmp_50_fu_1513_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946 == 1'd0) & (tmp_6_reg_1861 == 1'd0) & (tmp_17_reg_1937 == 1'd0))) begin
        tmp_65_reg_1986 <= tmp_65_fu_1056_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946_pp0_iter1_reg == 1'd0) & (tmp_17_reg_1937_pp0_iter1_reg == 1'd0) & (tmp_6_reg_1861 == 1'd0))) begin
        tmp_68_reg_2016 <= grp_getVal_fu_561_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (exitcond_i1_0_1_fu_1563_p2 == 1'd0))) begin
        tmp_99_0_1_reg_2202 <= tmp_99_0_1_fu_1575_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (exitcond_i1_0_2_fu_1625_p2 == 1'd0))) begin
        tmp_99_0_2_reg_2235 <= tmp_99_0_2_fu_1637_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946 == 1'd0) & (tmp_6_reg_1861 == 1'd0) & (tmp_17_reg_1937 == 1'd0))) begin
        tmp_cast_reg_1965 <= tmp_cast_fu_1003_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946_pp0_iter1_reg == 1'd0) & (tmp_17_reg_1937_pp0_iter1_reg == 1'd0) & (tmp_6_reg_1861 == 1'd0))) begin
        x_weight_1_1_1_reg_2021 <= x_weight_1_1_1_fu_1143_p2;
        y_weight_1_1_2_reg_2026 <= y_weight_1_1_2_fu_1159_p2;
    end
end

always @ (*) begin
    if ((tmp_17_fu_944_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_17_reg_1937 == 1'd0))) begin
        ap_phi_mux_j_phi_fu_393_p4 = j_1_reg_1941;
    end else begin
        ap_phi_mux_j_phi_fu_393_p4 = j_reg_389;
    end
end

always @ (*) begin
    if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem0_ARREADY == 1'b0)) begin
        ap_sig_ioackin_gmem0_ARREADY = gmem0_ARREADY;
    end else begin
        ap_sig_ioackin_gmem0_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem1_AWREADY == 1'b0)) begin
        ap_sig_ioackin_gmem1_AWREADY = gmem1_AWREADY;
    end else begin
        ap_sig_ioackin_gmem1_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem1_WREADY == 1'b0)) begin
        ap_sig_ioackin_gmem1_WREADY = gmem1_WREADY;
    end else begin
        ap_sig_ioackin_gmem1_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        cache1_address0 = tmp_48_fu_1496_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        cache1_address0 = tmp_44_fu_1476_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        cache1_address0 = tmp_39_fu_1456_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        cache1_address0 = tmp_34_fu_1436_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        cache1_address0 = tmp_24_fu_1416_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        cache1_address0 = tmp_32_fu_1093_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        cache1_address0 = tmp_62_fu_1072_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        cache1_address0 = tmp_22_fu_1042_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        cache1_address0 = tmp_56_fu_1016_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        cache1_address0 = tmp_35_fu_983_p1;
    end else begin
        cache1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        cache1_address1 = tmp_46_fu_1486_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        cache1_address1 = tmp_41_fu_1466_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        cache1_address1 = tmp_37_fu_1446_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        cache1_address1 = tmp_29_fu_1426_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        cache1_address1 = tmp_66_fu_1098_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        cache1_address1 = tmp_64_fu_1085_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        cache1_address1 = tmp_60_fu_1051_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        cache1_address1 = tmp_58_fu_1029_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        cache1_address1 = tmp_49_fu_993_p1;
    end else begin
        cache1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        cache1_ce0 = 1'b1;
    end else begin
        cache1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        cache1_ce1 = 1'b1;
    end else begin
        cache1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_17_reg_1937 == 1'd0))) begin
        cache1_we0 = 1'b1;
    end else begin
        cache1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_gmem0_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state3))) begin
        gmem0_ARVALID = 1'b1;
    end else begin
        gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_17_reg_1937 == 1'd0))) begin
        gmem0_RREADY = 1'b1;
    end else begin
        gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        gmem0_blk_n_AR = m_axi_gmem0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_17_reg_1937 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem1_AWREADY == 1'b0)) begin
        if ((1'b1 == ap_CS_fsm_state29)) begin
            gmem1_AWADDR = tmp_19_fu_1362_p1;
        end else if ((1'b1 == ap_condition_1127)) begin
            gmem1_AWADDR = gmem1_addr_reg_2068;
        end else begin
            gmem1_AWADDR = 'bx;
        end
    end else begin
        gmem1_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem1_AWREADY == 1'b0)) begin
        if ((1'b1 == ap_CS_fsm_state29)) begin
            gmem1_AWLEN = 32'd1920;
        end else if ((1'b1 == ap_condition_1127)) begin
            gmem1_AWLEN = 32'd1;
        end else begin
            gmem1_AWLEN = 'bx;
        end
    end else begin
        gmem1_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_gmem1_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state29)) | ((ap_reg_ioackin_gmem1_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_5_reg_1857 == 1'd1) & (1'b0 == ap_block_pp0_stage1_01001)))) begin
        gmem1_AWVALID = 1'b1;
    end else begin
        gmem1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state53)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_5_reg_1857 == 1'd1)))) begin
        gmem1_BREADY = 1'b1;
    end else begin
        gmem1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem1_WREADY == 1'b0)) begin
        if ((1'b1 == ap_CS_fsm_state49)) begin
            gmem1_WDATA = fourWide_1_fu_1759_p5;
        end else if ((1'b1 == ap_condition_1141)) begin
            gmem1_WDATA = fourWide_fu_1349_p5;
        end else begin
            gmem1_WDATA = 'bx;
        end
    end else begin
        gmem1_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_gmem1_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state49)) | ((ap_reg_ioackin_gmem1_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_5_reg_1857 == 1'd1) & (1'b0 == ap_block_pp0_stage2_01001)))) begin
        gmem1_WVALID = 1'b1;
    end else begin
        gmem1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_5_reg_1857 == 1'd1) & (1'b0 == ap_block_pp0_stage1)))) begin
        gmem1_blk_n_AW = m_axi_gmem1_AWREADY;
    end else begin
        gmem1_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_5_reg_1857 == 1'd1)))) begin
        gmem1_blk_n_B = m_axi_gmem1_BVALID;
    end else begin
        gmem1_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_5_reg_1857 == 1'd1)))) begin
        gmem1_blk_n_W = m_axi_gmem1_WREADY;
    end else begin
        gmem1_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_getVal_fu_544_Y_0_read = reg_586;
    end else if ((((ap_predicate_op229_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_predicate_op216_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_predicate_op209_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_predicate_op207_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_getVal_fu_544_Y_0_read = reg_638;
    end else begin
        grp_getVal_fu_544_Y_0_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_getVal_fu_544_Y_1_read = reg_593;
    end else if ((((ap_predicate_op229_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_predicate_op216_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_predicate_op209_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_getVal_fu_544_Y_1_read = reg_586_pp0_iter1_reg;
    end else if (((ap_predicate_op207_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_getVal_fu_544_Y_1_read = reg_586;
    end else begin
        grp_getVal_fu_544_Y_1_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_getVal_fu_544_Y_2_read = reg_600;
    end else if ((((ap_predicate_op229_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_predicate_op216_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_predicate_op209_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_getVal_fu_544_Y_2_read = reg_593_pp0_iter1_reg;
    end else if (((ap_predicate_op207_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_getVal_fu_544_Y_2_read = reg_593;
    end else begin
        grp_getVal_fu_544_Y_2_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_getVal_fu_544_Y_3_read = reg_607;
    end else if ((((ap_predicate_op229_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_predicate_op216_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)))) begin
        grp_getVal_fu_544_Y_3_read = reg_600_pp0_iter1_reg;
    end else if ((((ap_predicate_op209_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_predicate_op207_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_getVal_fu_544_Y_3_read = reg_600;
    end else begin
        grp_getVal_fu_544_Y_3_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_getVal_fu_544_Y_4_read = reg_614;
    end else if ((((ap_predicate_op229_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_predicate_op216_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)))) begin
        grp_getVal_fu_544_Y_4_read = reg_607_pp0_iter1_reg;
    end else if ((((ap_predicate_op209_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_predicate_op207_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_getVal_fu_544_Y_4_read = reg_607;
    end else begin
        grp_getVal_fu_544_Y_4_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_getVal_fu_544_Y_5_read = reg_622;
    end else if (((ap_predicate_op229_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_getVal_fu_544_Y_5_read = reg_614_pp0_iter1_reg;
    end else if ((((ap_predicate_op216_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_predicate_op209_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_predicate_op207_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_getVal_fu_544_Y_5_read = reg_614;
    end else begin
        grp_getVal_fu_544_Y_5_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_getVal_fu_544_Y_6_read = reg_630;
    end else if ((((ap_predicate_op229_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_predicate_op216_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_predicate_op209_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_predicate_op207_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_getVal_fu_544_Y_6_read = reg_622;
    end else begin
        grp_getVal_fu_544_Y_6_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_getVal_fu_544_Y_7_read = reg_638;
    end else if ((((ap_predicate_op229_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_predicate_op216_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_predicate_op209_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_predicate_op207_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_getVal_fu_544_Y_7_read = reg_630;
    end else begin
        grp_getVal_fu_544_Y_7_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state38) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_getVal_fu_544_ap_ce = 1'b1;
    end else begin
        grp_getVal_fu_544_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | ((ap_predicate_op229_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)))) begin
        grp_getVal_fu_544_xDiff = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state41) | ((ap_predicate_op216_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)))) begin
        grp_getVal_fu_544_xDiff = 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state37) | ((ap_predicate_op209_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_predicate_op207_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_getVal_fu_544_xDiff = 2'd3;
    end else begin
        grp_getVal_fu_544_xDiff = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_getVal_fu_544_yDiff = tmp_99_0_2_reg_2235;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_getVal_fu_544_yDiff = tmp_99_0_1_reg_2202;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_getVal_fu_544_yDiff = tmp_50_reg_2169;
    end else if (((ap_predicate_op229_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_getVal_fu_544_yDiff = 2'd0;
    end else if ((((ap_predicate_op216_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_predicate_op209_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_getVal_fu_544_yDiff = 2'd1;
    end else if (((ap_predicate_op207_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_getVal_fu_544_yDiff = 2'd3;
    end else begin
        grp_getVal_fu_544_yDiff = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op229_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_predicate_op216_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_predicate_op209_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_getVal_fu_561_Y_1_read = reg_586_pp0_iter1_reg;
    end else if (((ap_predicate_op207_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_getVal_fu_561_Y_1_read = reg_586;
    end else begin
        grp_getVal_fu_561_Y_1_read = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op229_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_predicate_op216_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_predicate_op209_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_getVal_fu_561_Y_2_read = reg_593_pp0_iter1_reg;
    end else if (((ap_predicate_op207_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_getVal_fu_561_Y_2_read = reg_593;
    end else begin
        grp_getVal_fu_561_Y_2_read = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op229_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_predicate_op216_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)))) begin
        grp_getVal_fu_561_Y_3_read = reg_600_pp0_iter1_reg;
    end else if ((((ap_predicate_op209_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_predicate_op207_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_getVal_fu_561_Y_3_read = reg_600;
    end else begin
        grp_getVal_fu_561_Y_3_read = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op229_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_predicate_op216_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)))) begin
        grp_getVal_fu_561_Y_4_read = reg_607_pp0_iter1_reg;
    end else if ((((ap_predicate_op209_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_predicate_op207_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_getVal_fu_561_Y_4_read = reg_607;
    end else begin
        grp_getVal_fu_561_Y_4_read = 'bx;
    end
end

always @ (*) begin
    if (((ap_predicate_op229_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_getVal_fu_561_Y_5_read = reg_614_pp0_iter1_reg;
    end else if ((((ap_predicate_op216_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_predicate_op209_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_predicate_op207_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_getVal_fu_561_Y_5_read = reg_614;
    end else begin
        grp_getVal_fu_561_Y_5_read = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_getVal_fu_561_ap_ce = 1'b1;
    end else begin
        grp_getVal_fu_561_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op229_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_predicate_op216_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)))) begin
        grp_getVal_fu_561_xDiff = 2'd1;
    end else if (((ap_predicate_op209_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_getVal_fu_561_xDiff = 2'd0;
    end else if (((ap_predicate_op207_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_getVal_fu_561_xDiff = 2'd3;
    end else begin
        grp_getVal_fu_561_xDiff = 'bx;
    end
end

always @ (*) begin
    if (((ap_predicate_op229_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_getVal_fu_561_yDiff = 2'd1;
    end else if ((((ap_predicate_op216_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_predicate_op209_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_getVal_fu_561_yDiff = 2'd3;
    end else if (((ap_predicate_op207_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_getVal_fu_561_yDiff = 2'd0;
    end else begin
        grp_getVal_fu_561_yDiff = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_1_fu_683_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (ap_sig_ioackin_gmem0_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_17_fu_944_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_17_fu_944_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b0)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state29 : begin
            if (((ap_sig_ioackin_gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (tmp_99_fu_1404_p2 == 1'd1) & (tmp_16_fu_1380_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else if (((1'b1 == ap_CS_fsm_state30) & (tmp_99_fu_1404_p2 == 1'd0) & (tmp_16_fu_1380_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((1'b1 == ap_CS_fsm_state36) & (exitcond_i1_fu_1501_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (exitcond_i1_0_1_fu_1563_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state44 : begin
            if (((1'b1 == ap_CS_fsm_state44) & (tmp_104_fu_1703_p2 == 1'd1) & (exitcond_i1_0_2_fu_1625_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else if (((1'b1 == ap_CS_fsm_state44) & (exitcond_i1_0_2_fu_1625_p2 == 1'd1) & (tmp_104_fu_1703_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            if (((ap_sig_ioackin_gmem1_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_17_reg_1937 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((1'b1 == ap_block_state21_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_17_reg_1937 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((1'b1 == ap_block_state21_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_17_reg_1937 == 1'd0)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((gmem1_BVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_5_reg_1857 == 1'd1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((gmem1_BVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_5_reg_1857 == 1'd1)) | ((1'b1 == ap_block_state22_io) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((gmem1_BVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_5_reg_1857 == 1'd1)) | ((1'b1 == ap_block_state22_io) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage1_iter0 = ((gmem0_RVALID == 1'b0) & (tmp_17_reg_1937 == 1'd0));
end

assign ap_block_state12_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state21_io = ((ap_sig_ioackin_gmem1_AWREADY == 1'b0) & (tmp_5_reg_1857 == 1'd1));
end

assign ap_block_state21_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_io = ((ap_sig_ioackin_gmem1_WREADY == 1'b0) & (tmp_5_reg_1857 == 1'd1));
end

assign ap_block_state22_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state27_pp0_stage2_iter3 = ((gmem1_BVALID == 1'b0) & (tmp_5_reg_1857 == 1'd1));
end

always @ (*) begin
    ap_condition_1127 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_5_reg_1857 == 1'd1) & (1'b0 == ap_block_pp0_stage1_01001));
end

always @ (*) begin
    ap_condition_1141 = ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_5_reg_1857 == 1'd1) & (1'b0 == ap_block_pp0_stage2_01001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter1_val_reg_400 = 8'd0;

always @ (*) begin
    ap_predicate_op207_call_state16 = ((tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946_pp0_iter1_reg == 1'd0) & (tmp_17_reg_1937_pp0_iter1_reg == 1'd0) & (tmp_6_reg_1861 == 1'd0));
end

always @ (*) begin
    ap_predicate_op209_call_state17 = ((tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946_pp0_iter1_reg == 1'd0) & (tmp_17_reg_1937_pp0_iter1_reg == 1'd0) & (tmp_6_reg_1861 == 1'd0));
end

always @ (*) begin
    ap_predicate_op216_call_state18 = ((tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946_pp0_iter1_reg == 1'd0) & (tmp_17_reg_1937_pp0_iter1_reg == 1'd0) & (tmp_6_reg_1861 == 1'd0));
end

always @ (*) begin
    ap_predicate_op229_call_state19 = ((tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946_pp0_iter1_reg == 1'd0) & (tmp_17_reg_1937_pp0_iter1_reg == 1'd0) & (tmp_6_reg_1861 == 1'd0));
end

always @ (*) begin
    ap_predicate_op241_call_state20 = ((tmp_5_reg_1857 == 1'd1) & (tmp_110_reg_1946_pp0_iter1_reg == 1'd0) & (tmp_17_reg_1937_pp0_iter1_reg == 1'd0) & (tmp_6_reg_1861 == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign edge_val1_fu_1697_p2 = (tmp_102_fu_1691_p2 ^ 8'd255);

assign edge_val_fu_1323_p2 = (tmp_84_fu_1317_p2 ^ 8'd255);

assign exitcond_i1_0_1_fu_1563_p2 = ((j_0_i1_0_1_reg_485 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond_i1_0_2_fu_1625_p2 = ((j_0_i1_0_2_reg_517 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond_i1_fu_1501_p2 = ((j_0_i1_reg_453 == 2'd3) ? 1'b1 : 1'b0);

assign fourWide_1_fu_1759_p5 = {{{{val_1_reg_529}, {val_1_reg_529}}, {val_1_reg_529}}, {val_1_reg_529}};

assign fourWide_fu_1349_p5 = {{{{ap_phi_reg_pp0_iter2_val_reg_400}, {ap_phi_reg_pp0_iter2_val_reg_400}}, {ap_phi_reg_pp0_iter2_val_reg_400}}, {ap_phi_reg_pp0_iter2_val_reg_400}};

assign grp_fu_1772_p0 = tmp_1011_cast_fu_1527_p1;

assign grp_fu_1780_p0 = tmp_1011_cast_fu_1527_p1;

assign grp_fu_1788_p0 = tmp_101_0_1_cast_fu_1589_p1;

assign grp_fu_1796_p0 = tmp_101_0_1_cast_fu_1589_p1;

assign grp_fu_1804_p0 = tmp_101_0_2_cast_fu_1723_p1;

assign grp_fu_1812_p0 = tmp_101_0_2_cast_fu_1723_p1;

assign i_1_cast_fu_793_p2 = (tmp_10_reg_1835 + 2'd1);

assign i_1_fu_689_p2 = (11'd1 + i_reg_378);

assign j2_cast1_fu_1372_p1 = j2_reg_418;

assign j2_cast_fu_1376_p1 = j2_reg_418;

assign j_1_0_1_fu_1569_p2 = (j_0_i1_0_1_reg_485 + 2'd1);

assign j_1_0_2_fu_1631_p2 = (j_0_i1_0_2_reg_517 + 2'd1);

assign j_1_fu_950_p2 = (ap_phi_mux_j_phi_fu_393_p4 + 11'd1);

assign j_3_fu_1386_p2 = (j2_reg_418 + 11'd1);

assign j_cast1_fu_928_p1 = ap_phi_mux_j_phi_fu_393_p4;

assign j_cast2_fu_932_p1 = ap_phi_mux_j_phi_fu_393_p4;

assign j_cast3_fu_936_p1 = ap_phi_mux_j_phi_fu_393_p4;

assign j_cast_fu_940_p1 = ap_phi_mux_j_phi_fu_393_p4;

assign j_s_fu_1507_p2 = (j_0_i1_reg_453 + 2'd1);

assign out_pix4_sum_cast_fu_1285_p1 = out_pix4_sum_fu_1280_p2;

assign out_pix4_sum_fu_1280_p2 = (tmp_93_cast_fu_1276_p1 + tmp_8_cast6_reg_1820);

assign p_i1_fu_1715_p3 = ((tmp_107_fu_1709_p2[0:0] === 1'b1) ? 8'd0 : edge_val1_fu_1697_p2);

assign p_i_fu_1341_p3 = ((tmp_86_fu_1335_p2[0:0] === 1'b1) ? 8'd0 : edge_val_fu_1323_p2);

assign p_shl10_cast_fu_1139_p1 = p_shl10_fu_1131_p3;

assign p_shl10_fu_1131_p3 = {{grp_getVal_fu_561_ap_return}, {1'd0}};

assign p_shl11_cast_fu_1213_p1 = p_shl11_fu_1205_p3;

assign p_shl11_fu_1205_p3 = {{grp_getVal_fu_544_ap_return}, {1'd0}};

assign p_shl1_cast_fu_703_p1 = p_shl1_fu_695_p3;

assign p_shl1_fu_695_p3 = {{i_reg_378}, {11'd0}};

assign p_shl2_cast_fu_715_p1 = p_shl2_fu_707_p3;

assign p_shl2_fu_707_p3 = {{i_reg_378}, {7'd0}};

assign p_shl3_cast_fu_772_p1 = p_shl3_fu_765_p3;

assign p_shl3_fu_765_p3 = {{tmp_10_reg_1835}, {11'd0}};

assign p_shl4_cast_fu_783_p1 = p_shl4_fu_776_p3;

assign p_shl4_fu_776_p3 = {{tmp_10_reg_1835}, {7'd0}};

assign p_shl5_cast_fu_806_p1 = p_shl5_fu_798_p3;

assign p_shl5_fu_798_p3 = {{i_1_cast_fu_793_p2}, {11'd0}};

assign p_shl6_cast_fu_818_p1 = p_shl6_fu_810_p3;

assign p_shl6_fu_810_p3 = {{i_1_cast_fu_793_p2}, {7'd0}};

assign p_shl7_cast_fu_851_p1 = p_shl7_fu_843_p3;

assign p_shl7_fu_843_p3 = {{tmp_7_cast_fu_838_p2}, {11'd0}};

assign p_shl8_cast_fu_863_p1 = p_shl8_fu_855_p3;

assign p_shl8_fu_855_p3 = {{tmp_7_cast_fu_838_p2}, {7'd0}};

assign p_shl9_cast_fu_908_p1 = p_shl9_fu_900_p3;

assign p_shl9_fu_900_p3 = {{tmp_13_cast_fu_883_p2}, {7'd0}};

assign p_shl_cast_fu_896_p1 = p_shl_fu_888_p3;

assign p_shl_fu_888_p3 = {{tmp_13_cast_fu_883_p2}, {11'd0}};

assign tmp123_cast_fu_1155_p1 = tmp56_fu_1149_p2;

assign tmp127_cast_fu_1263_p1 = $signed(tmp92_fu_1258_p2);

assign tmp56_fu_1149_p2 = (tmp_111_cast_fu_1102_p1 + tmp_111_0_2_cast_fu_1117_p1);

assign tmp92_fu_1258_p2 = ($signed(j_cast1_reg_1914_pp0_iter1_reg) + $signed(13'd4352));

assign tmp_100_fu_1677_p2 = (8'd0 - tmp_114_fu_1673_p1);

assign tmp_1011_cast_fu_1527_p1 = reg_653;

assign tmp_101_0_1_cast_fu_1589_p1 = reg_653;

assign tmp_101_0_2_cast_fu_1723_p1 = reg_653;

assign tmp_101_fu_1683_p3 = ((tmp_98_fu_1667_p2[0:0] === 1'b1) ? tmp_114_fu_1673_p1 : tmp_100_fu_1677_p2);

assign tmp_102_fu_1691_p2 = (tmp_97_fu_1659_p3 + tmp_101_fu_1683_p3);

assign tmp_104_fu_1703_p2 = ((tmp_102_fu_1691_p2 < 8'd55) ? 1'b1 : 1'b0);

assign tmp_107_fu_1709_p2 = ((tmp_102_fu_1691_p2 > 8'd155) ? 1'b1 : 1'b0);

assign tmp_108_fu_956_p2 = ((ap_phi_mux_j_phi_fu_393_p4 == 11'd1919) ? 1'b1 : 1'b0);

assign tmp_109_fu_962_p2 = ((ap_phi_mux_j_phi_fu_393_p4 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_10_cast_fu_675_p1 = $signed(inter_pix);

assign tmp_10_fu_679_p1 = i_reg_378[1:0];

assign tmp_110_fu_968_p2 = (tmp_109_fu_962_p2 | tmp_108_fu_956_p2);

assign tmp_111_0_2_cast_fu_1117_p1 = grp_getVal_fu_544_ap_return;

assign tmp_111_2_2_cast_fu_1222_p1 = grp_getVal_fu_561_ap_return;

assign tmp_111_2_cast_fu_1185_p1 = grp_getVal_fu_561_ap_return;

assign tmp_111_cast_fu_1102_p1 = reg_653;

assign tmp_111_fu_1201_p1 = x_weight_1_2_fu_1189_p2[7:0];

assign tmp_112_fu_1254_p1 = y_weight_1_2_2_fu_1231_p2[7:0];

assign tmp_113_fu_1649_p1 = x_weight_1_i1_0_2_reg_497[7:0];

assign tmp_114_1_2_cast_fu_1173_p1 = tmp_114_1_2_fu_1165_p3;

assign tmp_114_1_2_fu_1165_p3 = {{grp_getVal_fu_544_ap_return}, {1'd0}};

assign tmp_114_fu_1673_p1 = y_weight_1_i1_0_2_reg_507[7:0];

assign tmp_118_0_1_cast_fu_1113_p1 = tmp_118_0_1_fu_1106_p3;

assign tmp_118_0_1_fu_1106_p3 = {{tmp_68_reg_2016}, {1'd0}};

assign tmp_11_cast_fu_873_p1 = tmp_11_fu_867_p2;

assign tmp_11_fu_867_p2 = (p_shl7_cast_fu_851_p1 - p_shl8_cast_fu_863_p1);

assign tmp_12_fu_877_p2 = (tmp_11_cast_fu_873_p1 | 32'd1);

assign tmp_13_cast_fu_883_p2 = ($signed(tmp_10_reg_1835) + $signed(2'd3));

assign tmp_13_fu_760_p2 = (tmp_8_cast_reg_1825 + 31'd2069760);

assign tmp_14_fu_912_p2 = (p_shl_cast_fu_896_p1 - p_shl9_cast_fu_908_p1);

assign tmp_15_cast_fu_918_p1 = tmp_14_fu_912_p2;

assign tmp_15_fu_922_p2 = (tmp_15_cast_fu_918_p1 | 32'd1);

assign tmp_16_fu_1380_p2 = ((j2_reg_418 == 11'd1920) ? 1'b1 : 1'b0);

assign tmp_17_fu_944_p2 = ((ap_phi_mux_j_phi_fu_393_p4 == 11'd1920) ? 1'b1 : 1'b0);

assign tmp_19_fu_1362_p1 = tmp_13_reg_1871;

assign tmp_1_fu_683_p2 = ((i_reg_378 == 11'd1080) ? 1'b1 : 1'b0);

assign tmp_20_fu_737_p1 = tmp_2_fu_719_p2;

assign tmp_21_fu_1034_p2 = (j_cast3_reg_1925 + tmp_4_reg_1876);

assign tmp_22_fu_1042_p1 = $unsigned(tmp_23_cast_fu_1038_p1);

assign tmp_23_cast_fu_1038_p1 = $signed(tmp_21_fu_1034_p2);

assign tmp_23_fu_1410_p2 = (j2_cast_fu_1376_p1 + 12'd1919);

assign tmp_24_fu_1416_p1 = tmp_23_fu_1410_p2;

assign tmp_28_fu_1421_p2 = (j2_cast_reg_2099 + 12'd1920);

assign tmp_29_fu_1426_p1 = tmp_28_fu_1421_p2;

assign tmp_2_fu_719_p2 = (p_shl1_cast_fu_703_p1 - p_shl2_cast_fu_715_p1);

assign tmp_30_fu_1431_p2 = (j2_cast_reg_2099 + 12'd1921);

assign tmp_31_cast_fu_1090_p1 = $signed(tmp_31_reg_1991);

assign tmp_31_fu_1060_p2 = ($signed(tmp_cast_reg_1965) + $signed(tmp_9_reg_1881));

assign tmp_32_fu_1093_p1 = $unsigned(tmp_31_cast_fu_1090_p1);

assign tmp_33_cast_fu_979_p1 = $signed(tmp_33_fu_974_p2);

assign tmp_33_fu_974_p2 = ($signed(j_cast3_fu_936_p1) + $signed(tmp_9_reg_1881));

assign tmp_34_fu_1436_p1 = tmp_30_fu_1431_p2;

assign tmp_35_fu_983_p1 = $unsigned(tmp_33_cast_fu_979_p1);

assign tmp_36_fu_1441_p2 = (j2_cast1_reg_2089 + 13'd3839);

assign tmp_37_fu_1446_p1 = tmp_36_fu_1441_p2;

assign tmp_38_fu_1451_p2 = (j2_cast1_reg_2089 + 13'd3840);

assign tmp_39_fu_1456_p1 = tmp_38_fu_1451_p2;

assign tmp_40_fu_1461_p2 = (j2_cast1_reg_2089 + 13'd3841);

assign tmp_41_fu_1466_p1 = tmp_40_fu_1461_p2;

assign tmp_42_fu_988_p2 = (j_cast2_fu_932_p1 + tmp_s_reg_1887);

assign tmp_43_fu_1471_p2 = ($signed(j2_cast1_reg_2089) + $signed(13'd5759));

assign tmp_44_fu_1476_p1 = tmp_43_fu_1471_p2;

assign tmp_45_fu_1481_p2 = ($signed(j2_cast1_reg_2089) + $signed(13'd5760));

assign tmp_46_fu_1486_p1 = tmp_45_fu_1481_p2;

assign tmp_47_fu_1491_p2 = ($signed(j2_cast1_reg_2089) + $signed(13'd5761));

assign tmp_48_fu_1496_p1 = tmp_47_fu_1491_p2;

assign tmp_49_fu_993_p1 = tmp_42_fu_988_p2;

assign tmp_4_fu_787_p2 = (p_shl3_cast_fu_772_p1 - p_shl4_cast_fu_783_p1);

assign tmp_50_fu_1513_p2 = ($signed(j_0_i1_reg_453) + $signed(2'd3));

assign tmp_55_fu_1007_p2 = ($signed(tmp_cast_fu_1003_p1) + $signed(tmp_11_reg_1892));

assign tmp_56_fu_1016_p1 = $unsigned(tmp_57_cast_fu_1012_p1);

assign tmp_57_cast_fu_1012_p1 = $signed(tmp_55_fu_1007_p2);

assign tmp_57_fu_1021_p2 = ($signed(j_cast3_reg_1925) + $signed(tmp_11_reg_1892));

assign tmp_58_fu_1029_p1 = $unsigned(tmp_59_cast_fu_1025_p1);

assign tmp_59_cast_fu_1025_p1 = $signed(tmp_57_fu_1021_p2);

assign tmp_59_fu_1047_p2 = (j_cast2_reg_1919 + tmp_12_reg_1898);

assign tmp_5_fu_725_p2 = ((i_reg_378 > 11'd2) ? 1'b1 : 1'b0);

assign tmp_60_fu_1051_p1 = tmp_59_fu_1047_p2;

assign tmp_61_fu_1064_p2 = ($signed(tmp_cast_reg_1965) + $signed(tmp_14_reg_1903));

assign tmp_62_fu_1072_p1 = $unsigned(tmp_64_cast_fu_1068_p1);

assign tmp_63_fu_1077_p2 = ($signed(j_cast3_reg_1925) + $signed(tmp_14_reg_1903));

assign tmp_64_cast_fu_1068_p1 = $signed(tmp_61_fu_1064_p2);

assign tmp_64_fu_1085_p1 = $unsigned(tmp_66_cast_fu_1081_p1);

assign tmp_65_fu_1056_p2 = (j_cast2_reg_1919 + tmp_15_reg_1909);

assign tmp_66_cast_fu_1081_p1 = $signed(tmp_63_fu_1077_p2);

assign tmp_66_fu_1098_p1 = tmp_65_reg_1986;

assign tmp_6_fu_731_p2 = ((i_reg_378 == 11'd2) ? 1'b1 : 1'b0);

assign tmp_75_fu_741_p1 = $unsigned(tmp_20_fu_737_p1);

assign tmp_76_fu_1237_p2 = (($signed(x_weight_1_2_2_fu_1226_p2) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign tmp_77_fu_1243_p2 = (grp_getVal_fu_561_ap_return + tmp_111_reg_2041);

assign tmp_78_fu_1295_p2 = (8'd0 - tmp_77_reg_2051);

assign tmp_79_fu_1300_p3 = ((tmp_76_reg_2046[0:0] === 1'b1) ? tmp_77_reg_2051 : tmp_78_fu_1295_p2);

assign tmp_7_cast_fu_838_p2 = (tmp_10_reg_1835 ^ 2'd2);

assign tmp_80_fu_1248_p2 = (($signed(y_weight_1_2_2_fu_1231_p2) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign tmp_81_fu_745_p2 = ($signed(tmp_75_fu_741_p1) + $signed(tmp_10_cast_reg_1830));

assign tmp_82_fu_1306_p2 = (8'd0 - tmp_112_reg_2062);

assign tmp_83_fu_1311_p3 = ((tmp_80_reg_2057[0:0] === 1'b1) ? tmp_112_reg_2062 : tmp_82_fu_1306_p2);

assign tmp_84_fu_1317_p2 = (tmp_79_fu_1300_p3 + tmp_83_fu_1311_p3);

assign tmp_85_fu_1329_p2 = ((tmp_84_fu_1317_p2 < 8'd55) ? 1'b1 : 1'b0);

assign tmp_86_fu_1335_p2 = ((tmp_84_fu_1317_p2 > 8'd155) ? 1'b1 : 1'b0);

assign tmp_8_cast6_fu_667_p1 = tmp_8_fu_657_p4;

assign tmp_8_cast_fu_671_p1 = tmp_8_fu_657_p4;

assign tmp_8_fu_657_p4 = {{out_pix[31:2]}};

assign tmp_91_fu_750_p1 = $signed(tmp_81_fu_745_p2);

assign tmp_92_fu_1267_p2 = ($signed(tmp_2_reg_1852) + $signed(tmp127_cast_fu_1263_p1));

assign tmp_93_cast_fu_1276_p1 = $unsigned(tmp_95_cast_fu_1272_p1);

assign tmp_93_fu_1392_p2 = ((j2_reg_418 == 11'd1919) ? 1'b1 : 1'b0);

assign tmp_94_fu_1643_p2 = (($signed(x_weight_1_i1_0_2_reg_497) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign tmp_95_cast_fu_1272_p1 = $signed(tmp_92_fu_1267_p2);

assign tmp_95_fu_1398_p2 = ((j2_reg_418 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_96_fu_1653_p2 = (8'd0 - tmp_113_fu_1649_p1);

assign tmp_97_fu_1659_p3 = ((tmp_94_fu_1643_p2[0:0] === 1'b1) ? tmp_113_fu_1649_p1 : tmp_96_fu_1653_p2);

assign tmp_98_fu_1667_p2 = (($signed(y_weight_1_i1_0_2_reg_507) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign tmp_99_0_1_fu_1575_p2 = ($signed(j_0_i1_0_1_reg_485) + $signed(2'd3));

assign tmp_99_0_2_fu_1637_p2 = ($signed(j_0_i1_0_2_reg_517) + $signed(2'd3));

assign tmp_99_fu_1404_p2 = (tmp_95_fu_1398_p2 | tmp_93_fu_1392_p2);

assign tmp_9_cast_fu_828_p1 = tmp_9_fu_822_p2;

assign tmp_9_fu_822_p2 = (p_shl5_cast_fu_806_p1 - p_shl6_cast_fu_818_p1);

assign tmp_cast_fu_1003_p1 = $signed(tmp_fu_998_p2);

assign tmp_fu_998_p2 = ($signed(12'd4095) + $signed(j_cast_reg_1932));

assign tmp_s_fu_832_p2 = (tmp_9_cast_fu_828_p1 | 32'd1);

assign x_weight_1_0_2_cast_fu_1127_p1 = $signed(x_weight_1_0_2_fu_1121_p2);

assign x_weight_1_0_2_fu_1121_p2 = (tmp_111_0_2_cast_fu_1117_p1 - tmp_111_cast_fu_1102_p1);

assign x_weight_1_1_1_fu_1143_p2 = ($signed(x_weight_1_0_2_cast_fu_1127_p1) - $signed(p_shl10_cast_fu_1139_p1));

assign x_weight_1_1_2_fu_1177_p2 = (x_weight_1_1_1_reg_2021 + tmp_114_1_2_cast_fu_1173_p1);

assign x_weight_1_2_2_fu_1226_p2 = (x_weight_1_2_reg_2031 + tmp_111_2_2_cast_fu_1222_p1);

assign x_weight_1_2_fu_1189_p2 = (x_weight_1_1_2_fu_1177_p2 - tmp_111_2_cast_fu_1185_p1);

assign x_weight_1_i1_0_1_ca_fu_1581_p1 = x_weight_1_i1_0_1_reg_465;

assign x_weight_1_i1_cast_fu_1519_p1 = x_weight_1_i1_reg_429;

assign y_weight_1_1_2_cast_fu_1182_p1 = y_weight_1_1_2_reg_2026;

assign y_weight_1_1_2_fu_1159_p2 = (tmp123_cast_fu_1155_p1 + tmp_118_0_1_cast_fu_1113_p1);

assign y_weight_1_2_1_fu_1217_p2 = (y_weight_1_2_reg_2036 - p_shl11_cast_fu_1213_p1);

assign y_weight_1_2_2_fu_1231_p2 = (y_weight_1_2_1_fu_1217_p2 - tmp_111_2_2_cast_fu_1222_p1);

assign y_weight_1_2_fu_1195_p2 = (y_weight_1_1_2_cast_fu_1182_p1 - tmp_111_2_cast_fu_1185_p1);

assign y_weight_1_i1_0_1_ca_fu_1585_p1 = y_weight_1_i1_0_1_reg_475;

assign y_weight_1_i1_cast_fu_1523_p1 = y_weight_1_i1_reg_441;

always @ (posedge ap_clk) begin
    tmp_8_cast6_reg_1820[32:30] <= 3'b000;
    tmp_8_cast_reg_1825[30] <= 1'b0;
    tmp_2_reg_1852[6:0] <= 7'b0000000;
    tmp_4_reg_1876[6:0] <= 7'b0000000;
    tmp_9_reg_1881[6:0] <= 7'b0000000;
    tmp_s_reg_1887[6:0] <= 7'b0000001;
    tmp_11_reg_1892[6:0] <= 7'b0000000;
    tmp_12_reg_1898[6:0] <= 7'b0000001;
    tmp_14_reg_1903[6:0] <= 7'b0000000;
    tmp_15_reg_1909[6:0] <= 7'b0000001;
    j_cast1_reg_1914[12:11] <= 2'b00;
    j_cast1_reg_1914_pp0_iter1_reg[12:11] <= 2'b00;
    j_cast2_reg_1919[31:11] <= 21'b000000000000000000000;
    j_cast3_reg_1925[13:11] <= 3'b000;
    j_cast_reg_1932[11] <= 1'b0;
    j2_cast1_reg_2089[12:11] <= 2'b00;
    j2_cast_reg_2099[11] <= 1'b0;
end

endmodule //sobel_filter
