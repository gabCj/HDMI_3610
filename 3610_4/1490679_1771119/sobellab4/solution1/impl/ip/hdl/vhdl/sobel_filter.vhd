-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sobel_filter is
generic (
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_BUSER_WIDTH-1 downto 0);
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of sobel_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "sobel_filter,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.811400,HLS_SYN_LAT=53967659,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=2373,HLS_SYN_LUT=3908}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_pp0_stage20 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_pp0_stage21 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_pp0_stage22 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_pp0_stage23 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_pp0_stage24 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (54 downto 0) := "0000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (54 downto 0) := "0000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (54 downto 0) := "0000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (54 downto 0) := "0000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage0 : STD_LOGIC_VECTOR (54 downto 0) := "0000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (54 downto 0) := "0000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (54 downto 0) := "0001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (54 downto 0) := "0010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (54 downto 0) := "0100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (54 downto 0) := "1000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv16_9C80 : STD_LOGIC_VECTOR (15 downto 0) := "1001110010000000";
    constant ap_const_lv21_77F : STD_LOGIC_VECTOR (20 downto 0) := "000000000011101111111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_780 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000011110000000";
    constant ap_const_lv32_1FA400 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000111111010010000000000";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv21_1FAB80 : STD_LOGIC_VECTOR (20 downto 0) := "111111010101110000000";
    constant ap_const_lv21_1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_const_lv11_780 : STD_LOGIC_VECTOR (10 downto 0) := "11110000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv23_7FF100 : STD_LOGIC_VECTOR (22 downto 0) := "11111111111000100000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_37 : STD_LOGIC_VECTOR (7 downto 0) := "00110111";
    constant ap_const_lv8_9B : STD_LOGIC_VECTOR (7 downto 0) := "10011011";
    constant ap_const_lv31_1F9C80 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000111111001110010000000";
    constant ap_const_lv16_A400 : STD_LOGIC_VECTOR (15 downto 0) := "1010010000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv21_1FA400 : STD_LOGIC_VECTOR (20 downto 0) := "111111010010000000000";
    constant ap_const_lv21_780 : STD_LOGIC_VECTOR (20 downto 0) := "000000000011110000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal inter_pix : STD_LOGIC_VECTOR (31 downto 0);
    signal out_pix : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal exitcond_flatten_reg_1587 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_mid2_reg_1603 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal or_cond_mid2_reg_1613 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal gmem1_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal gmem1_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal tmp_10_reg_1818 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal tmp_1_mid2_reg_1603_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_1613_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal exitcond2_reg_1838 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal tmp_20_reg_1847 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal tmp_20_reg_1847_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp3_iter7 : STD_LOGIC := '0';
    signal tmp_20_reg_1847_pp3_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal gmem1_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp5_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage0 : signal is "none";
    signal ap_enable_reg_pp5_iter1 : STD_LOGIC := '0';
    signal ap_block_pp5_stage0 : BOOLEAN;
    signal exitcond1_reg_1894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp5_iter2 : STD_LOGIC := '0';
    signal exitcond1_reg_1894_pp5_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal tmp_31_reg_1867 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp4_iter2 : STD_LOGIC := '0';
    signal tmp_31_reg_1867_pp4_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp4_iter7 : STD_LOGIC := '0';
    signal tmp_31_reg_1867_pp4_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_AWREADY : STD_LOGIC;
    signal gmem0_WREADY : STD_LOGIC;
    signal gmem0_ARVALID : STD_LOGIC;
    signal gmem0_ARREADY : STD_LOGIC;
    signal gmem0_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_RVALID : STD_LOGIC;
    signal gmem0_RREADY : STD_LOGIC;
    signal gmem0_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem0_RLAST : STD_LOGIC;
    signal gmem0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem0_BVALID : STD_LOGIC;
    signal gmem0_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem0_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_AWVALID : STD_LOGIC;
    signal gmem1_AWREADY : STD_LOGIC;
    signal gmem1_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_WVALID : STD_LOGIC;
    signal gmem1_WREADY : STD_LOGIC;
    signal gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_ARVALID : STD_LOGIC;
    signal gmem1_ARREADY : STD_LOGIC;
    signal gmem1_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_RVALID : STD_LOGIC;
    signal gmem1_RREADY : STD_LOGIC;
    signal gmem1_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_RLAST : STD_LOGIC;
    signal gmem1_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_BVALID : STD_LOGIC;
    signal gmem1_BREADY : STD_LOGIC;
    signal gmem1_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_356 : STD_LOGIC_VECTOR (20 downto 0);
    signal i_reg_367 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_reg_378 : STD_LOGIC_VECTOR (10 downto 0);
    signal i1_reg_389 : STD_LOGIC_VECTOR (10 downto 0);
    signal i2_reg_400 : STD_LOGIC_VECTOR (15 downto 0);
    signal i3_reg_411 : STD_LOGIC_VECTOR (20 downto 0);
    signal i4_reg_422 : STD_LOGIC_VECTOR (20 downto 0);
    signal i5_reg_433 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_466_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal reg_470 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_predicate_op215_read_state11 : BOOLEAN;
    signal ap_predicate_op218_read_state11 : BOOLEAN;
    signal ap_block_state11_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_state36_pp0_stage9_iter1 : BOOLEAN;
    signal ap_sig_ioackin_gmem1_AWREADY : STD_LOGIC;
    signal ap_predicate_op326_writereq_state36 : BOOLEAN;
    signal ap_block_state36_io : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal grp_getVal_fu_444_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_475 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_state14_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_state39_pp0_stage12_iter1 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state10_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state35_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal out_pix3_fu_479_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal out_pix3_reg_1557 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_cast1_fu_493_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_cast1_reg_1562 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_cast_fu_497_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_cast_reg_1569 : STD_LOGIC_VECTOR (32 downto 0);
    signal gmem1_addr_reg_1575 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_cast_fu_507_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_5_cast_reg_1581 : STD_LOGIC_VECTOR (33 downto 0);
    signal exitcond_flatten_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next_fu_641_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal indvar_flatten_next_reg_1591 : STD_LOGIC_VECTOR (20 downto 0);
    signal j_mid2_fu_653_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_mid2_reg_1596 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1_mid2_fu_677_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_mid2_fu_715_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_2_mid2_reg_1607 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_cond_mid2_fu_741_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_mid2_fu_779_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_6_mid2_reg_1617 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_9_mid2_fu_823_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_9_mid2_reg_1622 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_mid2_fu_831_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_mid2_reg_1627 : STD_LOGIC_VECTOR (10 downto 0);
    signal gmem1_addr_3_reg_1632 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state28_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal gmem1_addr_3_reg_1632_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_addr_1_reg_1638 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_addr_2_reg_1644 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_addr_2_reg_1644_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_cast_fu_919_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_cast_reg_1650 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_addr_reg_1655 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_addr_1_read_reg_1661 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_946_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_15_reg_1666 : STD_LOGIC_VECTOR (13 downto 0);
    signal gmem0_addr_read_reg_1671 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_1_fu_951_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_1_reg_1676 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_reg_1681 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_state15_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_state40_pp0_stage13_iter1 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal tmp_51_reg_1686 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state17_pp0_stage15_iter0 : BOOLEAN;
    signal ap_predicate_op373_writeresp_state42 : BOOLEAN;
    signal ap_block_state42_pp0_stage15_iter1 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal tmp_18_reg_1691 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state18_pp0_stage16_iter0 : BOOLEAN;
    signal ap_predicate_op376_writeresp_state43 : BOOLEAN;
    signal ap_block_state43_pp0_stage16_iter1 : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal tmp_52_reg_1696 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_state20_pp0_stage18_iter0 : BOOLEAN;
    signal ap_block_pp0_stage18_11001 : BOOLEAN;
    signal tmp_19_reg_1701 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_state21_pp0_stage19_iter0 : BOOLEAN;
    signal ap_block_pp0_stage19_11001 : BOOLEAN;
    signal tmp_53_reg_1706 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage21 : signal is "none";
    signal ap_block_state23_pp0_stage21_iter0 : BOOLEAN;
    signal ap_block_pp0_stage21_11001 : BOOLEAN;
    signal tmp_21_reg_1711 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage22 : signal is "none";
    signal ap_block_state24_pp0_stage22_iter0 : BOOLEAN;
    signal ap_block_pp0_stage22_11001 : BOOLEAN;
    signal tmp_54_reg_1716 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage24 : signal is "none";
    signal ap_block_state26_pp0_stage24_iter0 : BOOLEAN;
    signal ap_block_pp0_stage24_11001 : BOOLEAN;
    signal tmp_23_reg_1721 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_55_reg_1726 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_sig_ioackin_gmem0_ARREADY : STD_LOGIC;
    signal ap_predicate_op195_readreq_state4 : BOOLEAN;
    signal ap_predicate_op196_readreq_state4 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_state29_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_24_reg_1731 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state30_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal tmp_56_reg_1736 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state32_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal tmp_27_reg_1741 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state33_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal x_weight_1_1_1_fu_996_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_weight_1_1_1_reg_1746 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state34_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal tmp13_fu_1002_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp13_reg_1751 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_58_fu_1084_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_58_reg_1756 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_weight_1_2_2_fu_1094_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_weight_1_2_2_reg_1761 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_32_fu_1100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_1766 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_1106_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_64_reg_1771 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_weight_127_1_fu_1137_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_weight_127_1_reg_1777 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp8_fu_1143_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp8_reg_1782 : STD_LOGIC_VECTOR (8 downto 0);
    signal edge_val_1_i_fu_1222_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_1_i_reg_1787 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_36_fu_1306_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_36_reg_1792 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_weight_2_2_fu_1316_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_weight_2_2_reg_1797 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_fu_1322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1802 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_1328_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_42_reg_1807 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_1_i1_fu_1409_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_1_i1_reg_1813 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state12_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_state37_pp0_stage10_iter1 : BOOLEAN;
    signal ap_sig_ioackin_gmem1_WREADY : STD_LOGIC;
    signal ap_predicate_op349_write_state37 : BOOLEAN;
    signal ap_predicate_op363_writereq_state37 : BOOLEAN;
    signal ap_block_state37_io : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal tmp_10_fu_1421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state45_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state46_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state46_io : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal i_1_fu_1427_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal out_pix4_sum8_fu_1433_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal out_pix4_sum8_reg_1827 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal exitcond2_fu_1448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state52_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state53_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state53_io : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal i_2_fu_1454_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal tmp_20_fu_1460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state59_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state60_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state60_io : BOOLEAN;
    signal ap_block_state61_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_state61_io : BOOLEAN;
    signal ap_block_state62_pp3_stage0_iter3 : BOOLEAN;
    signal ap_block_state63_pp3_stage0_iter4 : BOOLEAN;
    signal ap_block_state64_pp3_stage0_iter5 : BOOLEAN;
    signal ap_block_state65_pp3_stage0_iter6 : BOOLEAN;
    signal ap_block_state66_pp3_stage0_iter7 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal tmp_20_reg_1847_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_1847_pp3_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_1847_pp3_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_1847_pp3_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_pix4_sum1_fu_1470_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal out_pix4_sum1_reg_1851 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_3_fu_1475_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal tmp_31_fu_1491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state68_pp4_stage0_iter0 : BOOLEAN;
    signal ap_block_state69_pp4_stage0_iter1 : BOOLEAN;
    signal ap_block_state69_io : BOOLEAN;
    signal ap_block_state70_pp4_stage0_iter2 : BOOLEAN;
    signal ap_block_state70_io : BOOLEAN;
    signal ap_block_state71_pp4_stage0_iter3 : BOOLEAN;
    signal ap_block_state72_pp4_stage0_iter4 : BOOLEAN;
    signal ap_block_state73_pp4_stage0_iter5 : BOOLEAN;
    signal ap_block_state74_pp4_stage0_iter6 : BOOLEAN;
    signal ap_block_state75_pp4_stage0_iter7 : BOOLEAN;
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal tmp_31_reg_1867_pp4_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_1867_pp4_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_1867_pp4_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_1867_pp4_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_pix4_sum2_fu_1501_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal out_pix4_sum2_reg_1871 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_4_fu_1506_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal gmem1_addr_6_reg_1887 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_ioackin_gmem1_ARREADY : STD_LOGIC;
    signal exitcond1_fu_1532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state83_pp5_stage0_iter0 : BOOLEAN;
    signal ap_block_state84_pp5_stage0_iter1 : BOOLEAN;
    signal ap_block_state85_pp5_stage0_iter2 : BOOLEAN;
    signal ap_block_state85_io : BOOLEAN;
    signal ap_block_pp5_stage0_11001 : BOOLEAN;
    signal i_5_fu_1538_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_enable_reg_pp5_iter0 : STD_LOGIC := '0';
    signal val_fu_1544_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal val_reg_1903 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage24_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state45 : STD_LOGIC;
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state52 : STD_LOGIC;
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state59 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter6 : STD_LOGIC := '0';
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_condition_pp4_exit_iter0_state68 : STD_LOGIC;
    signal ap_enable_reg_pp4_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter6 : STD_LOGIC := '0';
    signal ap_block_pp5_stage0_subdone : BOOLEAN;
    signal ap_condition_pp5_exit_iter0_state83 : STD_LOGIC;
    signal superCache_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal superCache_ce0 : STD_LOGIC;
    signal superCache_we0 : STD_LOGIC;
    signal superCache_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal superCache_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_getVal_fu_444_ap_start : STD_LOGIC;
    signal grp_getVal_fu_444_ap_done : STD_LOGIC;
    signal grp_getVal_fu_444_ap_idle : STD_LOGIC;
    signal grp_getVal_fu_444_ap_ready : STD_LOGIC;
    signal grp_getVal_fu_444_ap_ce : STD_LOGIC;
    signal grp_getVal_fu_444_xDiff : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getVal_fu_444_yDiff : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getVal_fu_444_Y_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_getVal_fu_444_Y_ce0 : STD_LOGIC;
    signal ap_predicate_op222_call_state12 : BOOLEAN;
    signal ap_predicate_op231_call_state13 : BOOLEAN;
    signal ap_predicate_op233_call_state14 : BOOLEAN;
    signal ap_predicate_op232_call_state13 : BOOLEAN;
    signal ap_predicate_op234_call_state14 : BOOLEAN;
    signal ap_predicate_op236_call_state15 : BOOLEAN;
    signal ap_predicate_op235_call_state15 : BOOLEAN;
    signal ap_predicate_op237_call_state16 : BOOLEAN;
    signal ap_predicate_op239_call_state17 : BOOLEAN;
    signal ap_predicate_op238_call_state16 : BOOLEAN;
    signal ap_predicate_op240_call_state17 : BOOLEAN;
    signal ap_predicate_op242_call_state18 : BOOLEAN;
    signal ap_predicate_op241_call_state18 : BOOLEAN;
    signal ap_predicate_op243_call_state19 : BOOLEAN;
    signal ap_predicate_op245_call_state20 : BOOLEAN;
    signal ap_predicate_op244_call_state19 : BOOLEAN;
    signal ap_predicate_op246_call_state20 : BOOLEAN;
    signal ap_predicate_op248_call_state21 : BOOLEAN;
    signal ap_predicate_op247_call_state21 : BOOLEAN;
    signal ap_predicate_op249_call_state22 : BOOLEAN;
    signal ap_predicate_op251_call_state23 : BOOLEAN;
    signal ap_predicate_op250_call_state22 : BOOLEAN;
    signal ap_predicate_op252_call_state23 : BOOLEAN;
    signal ap_predicate_op254_call_state24 : BOOLEAN;
    signal ap_predicate_op253_call_state24 : BOOLEAN;
    signal ap_predicate_op255_call_state25 : BOOLEAN;
    signal ap_predicate_op257_call_state26 : BOOLEAN;
    signal ap_predicate_op256_call_state25 : BOOLEAN;
    signal ap_predicate_op258_call_state26 : BOOLEAN;
    signal ap_predicate_op260_call_state27 : BOOLEAN;
    signal ap_predicate_op259_call_state27 : BOOLEAN;
    signal ap_predicate_op261_call_state28 : BOOLEAN;
    signal ap_predicate_op263_call_state29 : BOOLEAN;
    signal ap_predicate_op262_call_state28 : BOOLEAN;
    signal ap_predicate_op264_call_state29 : BOOLEAN;
    signal ap_predicate_op266_call_state30 : BOOLEAN;
    signal ap_predicate_op265_call_state30 : BOOLEAN;
    signal ap_predicate_op267_call_state31 : BOOLEAN;
    signal ap_predicate_op269_call_state32 : BOOLEAN;
    signal ap_predicate_op268_call_state31 : BOOLEAN;
    signal ap_predicate_op270_call_state32 : BOOLEAN;
    signal ap_predicate_op272_call_state33 : BOOLEAN;
    signal ap_predicate_op271_call_state33 : BOOLEAN;
    signal ap_predicate_op281_call_state34 : BOOLEAN;
    signal ap_predicate_op297_call_state35 : BOOLEAN;
    signal ap_predicate_op282_call_state34 : BOOLEAN;
    signal ap_predicate_op312_call_state35 : BOOLEAN;
    signal ap_predicate_op341_call_state36 : BOOLEAN;
    signal ap_block_state13_pp0_stage11_iter0_ignore_call1 : BOOLEAN;
    signal ap_block_state38_pp0_stage11_iter1_ignore_call1 : BOOLEAN;
    signal ap_predicate_op366_write_state38 : BOOLEAN;
    signal ap_block_state38_io : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_block_state16_pp0_stage14_iter0_ignore_call3 : BOOLEAN;
    signal ap_block_state41_pp0_stage14_iter1_ignore_call3 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_state19_pp0_stage17_iter0_ignore_call6 : BOOLEAN;
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_state22_pp0_stage20_iter0_ignore_call10 : BOOLEAN;
    signal ap_block_pp0_stage20_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage20 : signal is "none";
    signal ap_block_state25_pp0_stage23_iter0_ignore_call14 : BOOLEAN;
    signal ap_block_pp0_stage23_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage23 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0_ignore_call26 : BOOLEAN;
    signal ap_block_state31_pp0_stage4_iter1_ignore_call26 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_phi_mux_indvar_flatten_phi_fu_360_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_i_phi_fu_371_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_j_phi_fu_382_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_getVal_fu_444_ap_start_reg : STD_LOGIC := '0';
    signal ap_predicate_op222_call_state12_state11 : BOOLEAN;
    signal ap_predicate_op232_call_state13_state12 : BOOLEAN;
    signal ap_predicate_op235_call_state15_state14 : BOOLEAN;
    signal ap_predicate_op238_call_state16_state15 : BOOLEAN;
    signal ap_predicate_op241_call_state18_state17 : BOOLEAN;
    signal ap_predicate_op244_call_state19_state18 : BOOLEAN;
    signal ap_predicate_op247_call_state21_state20 : BOOLEAN;
    signal ap_predicate_op250_call_state22_state21 : BOOLEAN;
    signal ap_predicate_op253_call_state24_state23 : BOOLEAN;
    signal ap_predicate_op256_call_state25_state24 : BOOLEAN;
    signal ap_predicate_op259_call_state27_state26 : BOOLEAN;
    signal ap_predicate_op262_call_state28_state27 : BOOLEAN;
    signal ap_predicate_op265_call_state30_state29 : BOOLEAN;
    signal ap_predicate_op268_call_state31_state30 : BOOLEAN;
    signal ap_predicate_op271_call_state33_state32 : BOOLEAN;
    signal ap_predicate_op282_call_state34_state33 : BOOLEAN;
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_block_pp0_stage17 : BOOLEAN;
    signal ap_block_pp0_stage19 : BOOLEAN;
    signal ap_block_pp0_stage20 : BOOLEAN;
    signal ap_block_pp0_stage22 : BOOLEAN;
    signal ap_block_pp0_stage23 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_block_pp0_stage18 : BOOLEAN;
    signal ap_block_pp0_stage21 : BOOLEAN;
    signal ap_block_pp0_stage24 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal tmp_16_fu_959_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_964_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal out_pix4_sum_cast_fu_863_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal inter_pix2_sum_cast_fu_886_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal out_pix4_sum5_cast_fu_909_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal inter_pix2_sum6_cast_fu_932_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal out_pix4_sum8_cast_fu_1438_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal out_pix4_sum1_cast_fu_1481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal out_pix4_sum2_cast_fu_1512_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_68_fu_1522_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_gmem0_ARREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_reg_ioackin_gmem1_AWREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage9_01001 : BOOLEAN;
    signal ap_reg_ioackin_gmem1_WREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage10_01001 : BOOLEAN;
    signal tmp_60_fu_1332_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state13_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_state38_pp0_stage11_iter1 : BOOLEAN;
    signal ap_block_pp0_stage11_01001 : BOOLEAN;
    signal tmp_47_fu_1417_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal ap_block_pp2_stage0_01001 : BOOLEAN;
    signal ap_block_pp3_stage0_01001 : BOOLEAN;
    signal ap_block_pp4_stage0_01001 : BOOLEAN;
    signal ap_reg_ioackin_gmem1_ARREADY : STD_LOGIC := '0';
    signal ap_block_pp5_stage0_01001 : BOOLEAN;
    signal fourWide_fu_1548_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_mid2_fu_839_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal j_cast1_fu_845_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal j_cast_fu_942_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl1_fu_521_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_shl2_fu_533_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl1_cast_fu_529_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl2_cast_fu_541_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_3_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_511_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl3_fu_569_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl4_fu_581_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl3_cast_fu_577_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl4_cast_fu_589_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_7_cast_fu_599_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl_fu_605_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl5_fu_617_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_cast_fu_613_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl5_cast_fu_625_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_s_fu_661_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1_mid1_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl1_mid1_fu_685_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_shl2_mid1_fu_697_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl1_cast_mid1_fu_693_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl2_cast_mid1_fu_705_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_2_mid1_fu_709_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_2_fu_545_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_3_mid1_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_mid1_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid1_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_667_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl3_mid1_fu_749_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl4_mid1_fu_761_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl3_cast_mid1_fu_757_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl4_cast_mid1_fu_769_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_6_mid1_fu_773_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_6_fu_593_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_7_cast_mid1_fu_787_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl_mid1_fu_793_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl5_mid1_fu_805_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_cast_mid1_fu_801_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl5_cast_mid1_fu_813_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_9_mid1_fu_817_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_9_fu_629_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_458_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_61_cast_fu_850_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_cast_fu_854_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal out_pix4_sum_fu_858_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_462_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_16_cast_fu_873_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_cast_fu_877_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal inter_pix2_sum_fu_881_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_48_cast_fu_896_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_cast_fu_900_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal out_pix4_sum5_fu_904_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_14_cast_fu_923_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal inter_pix2_sum6_fu_927_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_18_cast_fu_956_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_0_2_cast_fu_972_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_651_cast_fu_968_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_weight_1_0_2_fu_975_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl8_fu_985_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_weight_1_0_2_cast_fu_981_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl8_cast_fu_992_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_72_0_1_fu_1008_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_68_1_2_fu_1019_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_68_1_2_cast_fu_1026_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_72_0_1_cast_fu_1015_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp13_cast_fu_1035_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_weight_1_1_2_fu_1038_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal x_weight_1_1_2_fu_1030_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_65_2_cast_fu_1048_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_weight_1_1_2_cast_fu_1044_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl9_fu_1063_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal y_weight_1_2_fu_1057_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl9_cast_fu_1070_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_weight_1_2_fu_1051_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_65_2_2_cast_fu_1080_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_weight_1_2_1_fu_1074_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_weight_1_2_2_fu_1088_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_52_0_2_cast_fu_1113_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_521_cast_fu_1110_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_weight_0_2_fu_1116_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl6_fu_1126_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_weight_0_2_cast_fu_1122_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl6_cast_fu_1133_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_59_fu_1149_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_62_fu_1154_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_fu_1167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_1172_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_63_fu_1160_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_66_fu_1177_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_38_fu_1184_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_fu_1196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_1202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_1216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i_fu_1208_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_1_fu_1190_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_59_0_1_fu_1230_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_55_1_2_fu_1241_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_55_1_2_cast_fu_1248_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_59_0_1_cast_fu_1237_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp12_cast_fu_1257_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_weight_130_2_fu_1260_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal x_weight_127_2_fu_1252_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_52_2_cast_fu_1270_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_weight_130_2_cast_fu_1266_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl7_fu_1285_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal y_weight_2_fu_1279_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl7_cast_fu_1292_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_weight_2_fu_1273_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_52_2_2_cast_fu_1302_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_weight_2_1_fu_1296_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_weight_2_2_fu_1310_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_37_fu_1336_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_40_fu_1341_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_1354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_1359_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_41_fu_1347_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_46_fu_1364_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_fu_1371_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_fu_1383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_1389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_1403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i1_fu_1395_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_fu_1377_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_cast_fu_1466_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_34_cast_fu_1497_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (54 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state31_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_state16_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_state41_pp0_stage14_iter1 : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_state19_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_block_pp0_stage19_subdone : BOOLEAN;
    signal ap_block_state22_pp0_stage20_iter0 : BOOLEAN;
    signal ap_block_pp0_stage20_subdone : BOOLEAN;
    signal ap_block_pp0_stage21_subdone : BOOLEAN;
    signal ap_block_pp0_stage22_subdone : BOOLEAN;
    signal ap_block_state25_pp0_stage23_iter0 : BOOLEAN;
    signal ap_block_pp0_stage23_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;
    signal ap_idle_pp5 : STD_LOGIC;
    signal ap_enable_pp5 : STD_LOGIC;
    signal ap_condition_3080 : BOOLEAN;
    signal ap_condition_1875 : BOOLEAN;
    signal ap_condition_1898 : BOOLEAN;
    signal ap_condition_1967 : BOOLEAN;
    signal ap_condition_1993 : BOOLEAN;
    signal ap_condition_3097 : BOOLEAN;

    component getVal IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        index : IN STD_LOGIC_VECTOR (13 downto 0);
        xDiff : IN STD_LOGIC_VECTOR (1 downto 0);
        yDiff : IN STD_LOGIC_VECTOR (1 downto 0);
        Y_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        Y_ce0 : OUT STD_LOGIC;
        Y_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sobel_filter_supebkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sobel_filter_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        inter_pix : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_pix : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sobel_filter_gmem0_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component sobel_filter_gmem1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    sobel_filter_AXILiteS_s_axi_U : component sobel_filter_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        inter_pix => inter_pix,
        out_pix => out_pix);

    sobel_filter_gmem0_m_axi_U : component sobel_filter_gmem0_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 8,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM0_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM0_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM0_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM0_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM0_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM0_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM0_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM0_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM0_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM0_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM0_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem0_AWVALID,
        AWREADY => m_axi_gmem0_AWREADY,
        AWADDR => m_axi_gmem0_AWADDR,
        AWID => m_axi_gmem0_AWID,
        AWLEN => m_axi_gmem0_AWLEN,
        AWSIZE => m_axi_gmem0_AWSIZE,
        AWBURST => m_axi_gmem0_AWBURST,
        AWLOCK => m_axi_gmem0_AWLOCK,
        AWCACHE => m_axi_gmem0_AWCACHE,
        AWPROT => m_axi_gmem0_AWPROT,
        AWQOS => m_axi_gmem0_AWQOS,
        AWREGION => m_axi_gmem0_AWREGION,
        AWUSER => m_axi_gmem0_AWUSER,
        WVALID => m_axi_gmem0_WVALID,
        WREADY => m_axi_gmem0_WREADY,
        WDATA => m_axi_gmem0_WDATA,
        WSTRB => m_axi_gmem0_WSTRB,
        WLAST => m_axi_gmem0_WLAST,
        WID => m_axi_gmem0_WID,
        WUSER => m_axi_gmem0_WUSER,
        ARVALID => m_axi_gmem0_ARVALID,
        ARREADY => m_axi_gmem0_ARREADY,
        ARADDR => m_axi_gmem0_ARADDR,
        ARID => m_axi_gmem0_ARID,
        ARLEN => m_axi_gmem0_ARLEN,
        ARSIZE => m_axi_gmem0_ARSIZE,
        ARBURST => m_axi_gmem0_ARBURST,
        ARLOCK => m_axi_gmem0_ARLOCK,
        ARCACHE => m_axi_gmem0_ARCACHE,
        ARPROT => m_axi_gmem0_ARPROT,
        ARQOS => m_axi_gmem0_ARQOS,
        ARREGION => m_axi_gmem0_ARREGION,
        ARUSER => m_axi_gmem0_ARUSER,
        RVALID => m_axi_gmem0_RVALID,
        RREADY => m_axi_gmem0_RREADY,
        RDATA => m_axi_gmem0_RDATA,
        RLAST => m_axi_gmem0_RLAST,
        RID => m_axi_gmem0_RID,
        RUSER => m_axi_gmem0_RUSER,
        RRESP => m_axi_gmem0_RRESP,
        BVALID => m_axi_gmem0_BVALID,
        BREADY => m_axi_gmem0_BREADY,
        BRESP => m_axi_gmem0_BRESP,
        BID => m_axi_gmem0_BID,
        BUSER => m_axi_gmem0_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem0_ARVALID,
        I_ARREADY => gmem0_ARREADY,
        I_ARADDR => gmem0_ARADDR,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_1,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => gmem0_RVALID,
        I_RREADY => gmem0_RREADY,
        I_RDATA => gmem0_RDATA,
        I_RID => gmem0_RID,
        I_RUSER => gmem0_RUSER,
        I_RRESP => gmem0_RRESP,
        I_RLAST => gmem0_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem0_AWREADY,
        I_AWADDR => ap_const_lv32_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem0_WREADY,
        I_WDATA => ap_const_lv8_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv1_0,
        I_BVALID => gmem0_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem0_BRESP,
        I_BID => gmem0_BID,
        I_BUSER => gmem0_BUSER);

    sobel_filter_gmem1_m_axi_U : component sobel_filter_gmem1_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 32,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM1_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem1_AWVALID,
        AWREADY => m_axi_gmem1_AWREADY,
        AWADDR => m_axi_gmem1_AWADDR,
        AWID => m_axi_gmem1_AWID,
        AWLEN => m_axi_gmem1_AWLEN,
        AWSIZE => m_axi_gmem1_AWSIZE,
        AWBURST => m_axi_gmem1_AWBURST,
        AWLOCK => m_axi_gmem1_AWLOCK,
        AWCACHE => m_axi_gmem1_AWCACHE,
        AWPROT => m_axi_gmem1_AWPROT,
        AWQOS => m_axi_gmem1_AWQOS,
        AWREGION => m_axi_gmem1_AWREGION,
        AWUSER => m_axi_gmem1_AWUSER,
        WVALID => m_axi_gmem1_WVALID,
        WREADY => m_axi_gmem1_WREADY,
        WDATA => m_axi_gmem1_WDATA,
        WSTRB => m_axi_gmem1_WSTRB,
        WLAST => m_axi_gmem1_WLAST,
        WID => m_axi_gmem1_WID,
        WUSER => m_axi_gmem1_WUSER,
        ARVALID => m_axi_gmem1_ARVALID,
        ARREADY => m_axi_gmem1_ARREADY,
        ARADDR => m_axi_gmem1_ARADDR,
        ARID => m_axi_gmem1_ARID,
        ARLEN => m_axi_gmem1_ARLEN,
        ARSIZE => m_axi_gmem1_ARSIZE,
        ARBURST => m_axi_gmem1_ARBURST,
        ARLOCK => m_axi_gmem1_ARLOCK,
        ARCACHE => m_axi_gmem1_ARCACHE,
        ARPROT => m_axi_gmem1_ARPROT,
        ARQOS => m_axi_gmem1_ARQOS,
        ARREGION => m_axi_gmem1_ARREGION,
        ARUSER => m_axi_gmem1_ARUSER,
        RVALID => m_axi_gmem1_RVALID,
        RREADY => m_axi_gmem1_RREADY,
        RDATA => m_axi_gmem1_RDATA,
        RLAST => m_axi_gmem1_RLAST,
        RID => m_axi_gmem1_RID,
        RUSER => m_axi_gmem1_RUSER,
        RRESP => m_axi_gmem1_RRESP,
        BVALID => m_axi_gmem1_BVALID,
        BREADY => m_axi_gmem1_BREADY,
        BRESP => m_axi_gmem1_BRESP,
        BID => m_axi_gmem1_BID,
        BUSER => m_axi_gmem1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem1_ARVALID,
        I_ARREADY => gmem1_ARREADY,
        I_ARADDR => gmem1_ARADDR,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_1FA400,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => gmem1_RVALID,
        I_RREADY => gmem1_RREADY,
        I_RDATA => gmem1_RDATA,
        I_RID => gmem1_RID,
        I_RUSER => gmem1_RUSER,
        I_RRESP => gmem1_RRESP,
        I_RLAST => gmem1_RLAST,
        I_AWVALID => gmem1_AWVALID,
        I_AWREADY => gmem1_AWREADY,
        I_AWADDR => gmem1_AWADDR,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => gmem1_AWLEN,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => gmem1_WVALID,
        I_WREADY => gmem1_WREADY,
        I_WDATA => gmem1_WDATA,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_F,
        I_BVALID => gmem1_BVALID,
        I_BREADY => gmem1_BREADY,
        I_BRESP => gmem1_BRESP,
        I_BID => gmem1_BID,
        I_BUSER => gmem1_BUSER);

    superCache_U : component sobel_filter_supebkb
    generic map (
        DataWidth => 8,
        AddressRange => 7680,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => superCache_address0,
        ce0 => superCache_ce0,
        we0 => superCache_we0,
        d0 => superCache_d0,
        q0 => superCache_q0);

    grp_getVal_fu_444 : component getVal
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_getVal_fu_444_ap_start,
        ap_done => grp_getVal_fu_444_ap_done,
        ap_idle => grp_getVal_fu_444_ap_idle,
        ap_ready => grp_getVal_fu_444_ap_ready,
        ap_ce => grp_getVal_fu_444_ap_ce,
        index => reg_470,
        xDiff => grp_getVal_fu_444_xDiff,
        yDiff => grp_getVal_fu_444_yDiff,
        Y_address0 => grp_getVal_fu_444_Y_address0,
        Y_ce0 => grp_getVal_fu_444_Y_ce0,
        Y_q0 => superCache_q0,
        ap_return => grp_getVal_fu_444_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_subdone))))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_subdone)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state45) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state45) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state45);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state52) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_0) or (gmem1_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state51))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state52) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state52);
                elsif ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif ((not(((ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_0) or (gmem1_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state51))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state59) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state59)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state59);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
                elsif (((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then 
                    ap_enable_reg_pp3_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_logic_1 = ap_condition_pp4_exit_iter0_state68) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp4_exit_iter0_state68)) then 
                        ap_enable_reg_pp4_iter1 <= (ap_const_logic_1 xor ap_condition_pp4_exit_iter0_state68);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp4_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp4_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp4_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp4_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp4_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter6 <= ap_enable_reg_pp4_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp4_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter7 <= ap_enable_reg_pp4_iter6;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                    ap_enable_reg_pp4_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_condition_pp5_exit_iter0_state83) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
                elsif (((ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state82))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp5_exit_iter0_state83)) then 
                        ap_enable_reg_pp5_iter1 <= (ap_const_logic_1 xor ap_condition_pp5_exit_iter0_state83);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp5_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then 
                    ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
                elsif (((ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state82))) then 
                    ap_enable_reg_pp5_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_gmem0_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem0_ARREADY <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_predicate_op196_readreq_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_predicate_op195_readreq_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                    ap_reg_ioackin_gmem0_ARREADY <= ap_const_logic_0;
                elsif ((((ap_predicate_op196_readreq_state4 = ap_const_boolean_1) and (gmem0_ARREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001)) or ((ap_predicate_op195_readreq_state4 = ap_const_boolean_1) and (gmem0_ARREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001)))) then 
                    ap_reg_ioackin_gmem0_ARREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_gmem1_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem1_ARREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state76)) then
                    if ((ap_sig_ioackin_gmem1_ARREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_gmem1_ARREADY <= ap_const_logic_0;
                    elsif ((gmem1_ARREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_gmem1_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_gmem1_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem1_AWREADY <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (tmp_31_reg_1867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state82)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (tmp_20_reg_1847 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_predicate_op363_writereq_state37 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or (not(((ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_0) or (gmem1_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state51)) or ((ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((ap_predicate_op326_writereq_state36 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)))) then 
                    ap_reg_ioackin_gmem1_AWREADY <= ap_const_logic_0;
                elsif ((((gmem1_AWREADY = ap_const_logic_1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (tmp_31_reg_1867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_01001)) or ((gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state82)) or ((gmem1_AWREADY = ap_const_logic_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (tmp_20_reg_1847 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_01001)) or ((ap_predicate_op363_writereq_state37 = ap_const_boolean_1) and (gmem1_AWREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_01001)) or ((gmem1_BVALID = ap_const_logic_1) and (gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state51)) or ((gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((ap_predicate_op326_writereq_state36 = ap_const_boolean_1) and (gmem1_AWREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_01001)))) then 
                    ap_reg_ioackin_gmem1_AWREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_gmem1_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem1_WREADY <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (tmp_31_reg_1867_pp4_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (exitcond1_reg_1894_pp5_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (tmp_20_reg_1847_pp3_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond2_reg_1838 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_predicate_op366_write_state38 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_predicate_op349_write_state37 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_10_reg_1818 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
                    ap_reg_ioackin_gmem1_WREADY <= ap_const_logic_0;
                elsif ((((gmem1_WREADY = ap_const_logic_1) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (tmp_31_reg_1867_pp4_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_01001)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_01001) and (gmem1_WREADY = ap_const_logic_1) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (exitcond1_reg_1894_pp5_iter1_reg = ap_const_lv1_0)) or ((gmem1_WREADY = ap_const_logic_1) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (tmp_20_reg_1847_pp3_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_01001)) or ((gmem1_WREADY = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond2_reg_1838 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_01001)) or ((ap_predicate_op366_write_state38 = ap_const_boolean_1) and (gmem1_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage11_01001)) or ((ap_predicate_op349_write_state37 = ap_const_boolean_1) and (gmem1_WREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_01001)) or ((gmem1_WREADY = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_10_reg_1818 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001)))) then 
                    ap_reg_ioackin_gmem1_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_getVal_fu_444_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_getVal_fu_444_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_predicate_op282_call_state34_state33 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_predicate_op271_call_state33_state32 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_predicate_op268_call_state31_state30 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_predicate_op262_call_state28_state27 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_predicate_op259_call_state27_state26 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_predicate_op256_call_state25_state24 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_predicate_op253_call_state24_state23 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_predicate_op250_call_state22_state21 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_predicate_op247_call_state21_state20 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_predicate_op238_call_state16_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_predicate_op235_call_state15_state14 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_predicate_op241_call_state18_state17 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_predicate_op244_call_state19_state18 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_predicate_op232_call_state13_state12 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_predicate_op222_call_state12_state11 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_predicate_op265_call_state30_state29 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                    grp_getVal_fu_444_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_getVal_fu_444_ap_ready = ap_const_logic_1)) then 
                    grp_getVal_fu_444_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i1_reg_389_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                i1_reg_389 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (tmp_10_fu_1421_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                i1_reg_389 <= i_1_fu_1427_p2;
            end if; 
        end if;
    end process;

    i2_reg_400_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_0) or (gmem1_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state51))) then 
                i2_reg_400 <= ap_const_lv16_9C80;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (exitcond2_fu_1448_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                i2_reg_400 <= i_2_fu_1454_p2;
            end if; 
        end if;
    end process;

    i3_reg_411_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then 
                i3_reg_411 <= ap_const_lv21_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (tmp_20_fu_1460_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                i3_reg_411 <= i_3_fu_1475_p2;
            end if; 
        end if;
    end process;

    i4_reg_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                i4_reg_422 <= ap_const_lv21_77F;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (tmp_31_fu_1491_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
                i4_reg_422 <= i_4_fu_1506_p2;
            end if; 
        end if;
    end process;

    i5_reg_433_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state82))) then 
                i5_reg_433 <= ap_const_lv21_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (exitcond1_fu_1532_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then 
                i5_reg_433 <= i_5_fu_1538_p2;
            end if; 
        end if;
    end process;

    i_reg_367_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1587 = ap_const_lv1_0))) then 
                i_reg_367 <= i_mid2_reg_1627;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_367 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_356_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1587 = ap_const_lv1_0))) then 
                indvar_flatten_reg_356 <= indvar_flatten_next_reg_1591;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_356 <= ap_const_lv21_0;
            end if; 
        end if;
    end process;

    j_reg_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1587 = ap_const_lv1_0))) then 
                j_reg_378 <= j_1_reg_1676;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_reg_378 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op363_writereq_state37 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                edge_val_1_i1_reg_1813 <= edge_val_1_i1_fu_1409_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op326_writereq_state36 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                edge_val_1_i_reg_1787 <= edge_val_1_i_fu_1222_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then
                exitcond1_reg_1894 <= exitcond1_fu_1532_p2;
                exitcond1_reg_1894_pp5_iter1_reg <= exitcond1_reg_1894;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                exitcond2_reg_1838 <= exitcond2_fu_1448_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_1587 <= exitcond_flatten_fu_635_p2;
                or_cond_mid2_reg_1613_pp0_iter1_reg <= or_cond_mid2_reg_1613;
                tmp_1_mid2_reg_1603_pp0_iter1_reg <= tmp_1_mid2_reg_1603;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op215_read_state11 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                gmem0_addr_1_read_reg_1661 <= gmem0_RDATA;
                tmp_15_reg_1666 <= tmp_15_fu_946_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0))) then
                gmem0_addr_1_reg_1638 <= inter_pix2_sum_cast_fu_886_p1(32 - 1 downto 0);
                gmem1_addr_2_reg_1644 <= out_pix4_sum5_cast_fu_909_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op218_read_state11 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                gmem0_addr_read_reg_1671 <= gmem0_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_1) and (exitcond_flatten_reg_1587 = ap_const_lv1_0))) then
                gmem0_addr_reg_1655 <= inter_pix2_sum6_cast_fu_932_p1(32 - 1 downto 0);
                tmp_13_cast_reg_1650 <= tmp_13_cast_fu_919_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                gmem1_addr_2_reg_1644_pp0_iter1_reg <= gmem1_addr_2_reg_1644;
                gmem1_addr_3_reg_1632_pp0_iter1_reg <= gmem1_addr_3_reg_1632;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0))) then
                gmem1_addr_3_reg_1632 <= out_pix4_sum_cast_fu_863_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state76) and (ap_sig_ioackin_gmem1_ARREADY = ap_const_logic_1))) then
                    gmem1_addr_6_reg_1887(29 downto 0) <= tmp_68_fu_1522_p1(32 - 1 downto 0)(29 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    gmem1_addr_reg_1575(29 downto 0) <= tmp_fu_489_p1(32 - 1 downto 0)(29 downto 0);
                out_pix3_reg_1557 <= out_pix(31 downto 2);
                tmp_5_cast_reg_1581 <= tmp_5_cast_fu_507_p1;
                    tmp_cast1_reg_1562(29 downto 0) <= tmp_cast1_fu_493_p1(29 downto 0);
                    tmp_cast_reg_1569(29 downto 0) <= tmp_cast_fu_497_p1(29 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_635_p2 = ap_const_lv1_0))) then
                i_mid2_reg_1627 <= i_mid2_fu_831_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                indvar_flatten_next_reg_1591 <= indvar_flatten_next_fu_641_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_1587 = ap_const_lv1_0))) then
                j_1_reg_1676 <= j_1_fu_951_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_635_p2 = ap_const_lv1_0))) then
                j_mid2_reg_1596 <= j_mid2_fu_653_p3;
                or_cond_mid2_reg_1613 <= or_cond_mid2_fu_741_p3;
                tmp_1_mid2_reg_1603 <= tmp_1_mid2_fu_677_p3;
                    tmp_2_mid2_reg_1607(22 downto 7) <= tmp_2_mid2_fu_715_p3(22 downto 7);
                    tmp_6_mid2_reg_1617(13 downto 7) <= tmp_6_mid2_fu_779_p3(13 downto 7);
                    tmp_9_mid2_reg_1622(13 downto 7) <= tmp_9_mid2_fu_823_p3(13 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (tmp_20_fu_1460_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                out_pix4_sum1_reg_1851 <= out_pix4_sum1_fu_1470_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (tmp_31_fu_1491_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                out_pix4_sum2_reg_1871 <= out_pix4_sum2_fu_1501_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                out_pix4_sum8_reg_1827 <= out_pix4_sum8_fu_1433_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_predicate_op215_read_state11 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0)))) then
                reg_470 <= grp_fu_466_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0)))) then
                reg_475 <= grp_getVal_fu_444_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp13_reg_1751 <= tmp13_fu_1002_p2;
                x_weight_1_1_1_reg_1746 <= x_weight_1_1_1_fu_996_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp8_reg_1782 <= tmp8_fu_1143_p2;
                x_weight_127_1_reg_1777 <= x_weight_127_1_fu_1137_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_10_reg_1818 <= tmp_10_fu_1421_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0))) then
                tmp_17_reg_1681 <= grp_getVal_fu_444_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0))) then
                tmp_18_reg_1691 <= grp_getVal_fu_444_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0))) then
                tmp_19_reg_1701 <= grp_getVal_fu_444_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                tmp_20_reg_1847 <= tmp_20_fu_1460_p2;
                tmp_20_reg_1847_pp3_iter1_reg <= tmp_20_reg_1847;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp3_stage0_11001)) then
                tmp_20_reg_1847_pp3_iter2_reg <= tmp_20_reg_1847_pp3_iter1_reg;
                tmp_20_reg_1847_pp3_iter3_reg <= tmp_20_reg_1847_pp3_iter2_reg;
                tmp_20_reg_1847_pp3_iter4_reg <= tmp_20_reg_1847_pp3_iter3_reg;
                tmp_20_reg_1847_pp3_iter5_reg <= tmp_20_reg_1847_pp3_iter4_reg;
                tmp_20_reg_1847_pp3_iter6_reg <= tmp_20_reg_1847_pp3_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0))) then
                tmp_21_reg_1711 <= grp_getVal_fu_444_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_22_reg_1802 <= tmp_22_fu_1322_p2;
                tmp_36_reg_1792 <= tmp_36_fu_1306_p1;
                tmp_42_reg_1807 <= tmp_42_fu_1328_p1;
                y_weight_2_2_reg_1797 <= y_weight_2_2_fu_1316_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0))) then
                tmp_23_reg_1721 <= grp_getVal_fu_444_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_24_reg_1731 <= grp_getVal_fu_444_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_27_reg_1741 <= grp_getVal_fu_444_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                tmp_31_reg_1867 <= tmp_31_fu_1491_p2;
                tmp_31_reg_1867_pp4_iter1_reg <= tmp_31_reg_1867;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp4_stage0_11001)) then
                tmp_31_reg_1867_pp4_iter2_reg <= tmp_31_reg_1867_pp4_iter1_reg;
                tmp_31_reg_1867_pp4_iter3_reg <= tmp_31_reg_1867_pp4_iter2_reg;
                tmp_31_reg_1867_pp4_iter4_reg <= tmp_31_reg_1867_pp4_iter3_reg;
                tmp_31_reg_1867_pp4_iter5_reg <= tmp_31_reg_1867_pp4_iter4_reg;
                tmp_31_reg_1867_pp4_iter6_reg <= tmp_31_reg_1867_pp4_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_32_reg_1766 <= tmp_32_fu_1100_p2;
                tmp_58_reg_1756 <= tmp_58_fu_1084_p1;
                tmp_64_reg_1771 <= tmp_64_fu_1106_p1;
                y_weight_1_2_2_reg_1761 <= y_weight_1_2_2_fu_1094_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0))) then
                tmp_51_reg_1686 <= grp_getVal_fu_444_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0))) then
                tmp_52_reg_1696 <= grp_getVal_fu_444_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0))) then
                tmp_53_reg_1706 <= grp_getVal_fu_444_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0))) then
                tmp_54_reg_1716 <= grp_getVal_fu_444_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_55_reg_1726 <= grp_getVal_fu_444_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_56_reg_1736 <= grp_getVal_fu_444_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond1_reg_1894 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then
                val_reg_1903 <= val_fu_1544_p1;
            end if;
        end if;
    end process;
    tmp_cast1_reg_1562(30) <= '0';
    tmp_cast_reg_1569(32 downto 30) <= "000";
    gmem1_addr_reg_1575(31 downto 30) <= "00";
    tmp_2_mid2_reg_1607(6 downto 0) <= "0000000";
    tmp_6_mid2_reg_1617(6 downto 0) <= "0000000";
    tmp_9_mid2_reg_1622(6 downto 0) <= "0000000";
    gmem1_addr_6_reg_1887(31 downto 30) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_state44, ap_CS_fsm_state51, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage16, ap_CS_fsm_state58, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter7, ap_CS_fsm_state76, ap_CS_fsm_state82, ap_enable_reg_pp5_iter1, ap_enable_reg_pp5_iter2, ap_CS_fsm_state90, ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter7, gmem1_BVALID, ap_sig_ioackin_gmem1_AWREADY, exitcond_flatten_fu_635_p2, tmp_10_fu_1421_p2, ap_enable_reg_pp1_iter0, exitcond2_fu_1448_p2, ap_enable_reg_pp2_iter0, tmp_20_fu_1460_p2, ap_enable_reg_pp3_iter0, tmp_31_fu_1491_p2, ap_enable_reg_pp4_iter0, ap_sig_ioackin_gmem1_ARREADY, exitcond1_fu_1532_p2, ap_enable_reg_pp5_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage24_subdone, ap_block_pp0_stage16_subdone, ap_block_pp1_stage0_subdone, ap_block_pp2_stage0_subdone, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter6, ap_block_pp4_stage0_subdone, ap_enable_reg_pp4_iter6, ap_block_pp5_stage0_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage17_subdone, ap_block_pp0_stage18_subdone, ap_block_pp0_stage19_subdone, ap_block_pp0_stage20_subdone, ap_block_pp0_stage21_subdone, ap_block_pp0_stage22_subdone, ap_block_pp0_stage23_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_635_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_635_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((not(((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage16_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage16_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage16_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when ap_ST_fsm_pp0_stage20 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage20_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                end if;
            when ap_ST_fsm_pp0_stage21 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage21_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                end if;
            when ap_ST_fsm_pp0_stage22 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage22_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                end if;
            when ap_ST_fsm_pp0_stage23 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage23_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                end if;
            when ap_ST_fsm_pp0_stage24 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage24_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                end if;
            when ap_ST_fsm_state44 => 
                if (((ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (tmp_10_fu_1421_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (tmp_10_fu_1421_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                if ((not(((ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_0) or (gmem1_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state51))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state51;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (exitcond2_fu_1448_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (exitcond2_fu_1448_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                if (((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (tmp_20_fu_1460_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) and not(((ap_enable_reg_pp3_iter7 = ap_const_logic_1) and (ap_enable_reg_pp3_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_enable_reg_pp3_iter7 = ap_const_logic_1) and (ap_enable_reg_pp3_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (tmp_20_fu_1460_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state67;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
            when ap_ST_fsm_pp4_stage0 => 
                if ((not(((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (tmp_31_fu_1491_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) and not(((ap_enable_reg_pp4_iter7 = ap_const_logic_1) and (ap_enable_reg_pp4_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif ((((ap_enable_reg_pp4_iter7 = ap_const_logic_1) and (ap_enable_reg_pp4_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) or ((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (tmp_31_fu_1491_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state76;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_state76 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state76) and (ap_sig_ioackin_gmem1_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state77;
                else
                    ap_NS_fsm <= ap_ST_fsm_state76;
                end if;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                if (((ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state82))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state82;
                end if;
            when ap_ST_fsm_pp5_stage0 => 
                if ((not(((ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (exitcond1_fu_1532_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone))) and not(((ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                elsif ((((ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) or ((ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (exitcond1_fu_1532_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state86;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                end if;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                if (((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state90))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state90;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(20);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage20 <= ap_CS_fsm(21);
    ap_CS_fsm_pp0_stage21 <= ap_CS_fsm(22);
    ap_CS_fsm_pp0_stage22 <= ap_CS_fsm(23);
    ap_CS_fsm_pp0_stage23 <= ap_CS_fsm(24);
    ap_CS_fsm_pp0_stage24 <= ap_CS_fsm(25);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(10);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(27);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(33);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(39);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(41);
    ap_CS_fsm_pp5_stage0 <= ap_CS_fsm(49);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state44 <= ap_CS_fsm(26);
    ap_CS_fsm_state50 <= ap_CS_fsm(31);
    ap_CS_fsm_state51 <= ap_CS_fsm(32);
    ap_CS_fsm_state58 <= ap_CS_fsm(38);
    ap_CS_fsm_state67 <= ap_CS_fsm(40);
    ap_CS_fsm_state76 <= ap_CS_fsm(42);
    ap_CS_fsm_state82 <= ap_CS_fsm(48);
    ap_CS_fsm_state90 <= ap_CS_fsm(54);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state37_io)
    begin
                ap_block_pp0_stage10_11001 <= ((ap_const_boolean_1 = ap_block_state37_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage10_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state37_io)
    begin
                ap_block_pp0_stage10_subdone <= ((ap_const_boolean_1 = ap_block_state37_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state38_io)
    begin
                ap_block_pp0_stage11_11001 <= ((ap_const_boolean_1 = ap_block_state38_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state38_io)
    begin
                ap_block_pp0_stage11_subdone <= ((ap_const_boolean_1 = ap_block_state38_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_11001_assign_proc : process(ap_enable_reg_pp0_iter1, gmem1_BVALID, ap_predicate_op373_writeresp_state42)
    begin
                ap_block_pp0_stage15_11001 <= ((ap_predicate_op373_writeresp_state42 = ap_const_boolean_1) and (gmem1_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage15_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, gmem1_BVALID, ap_predicate_op373_writeresp_state42)
    begin
                ap_block_pp0_stage15_subdone <= ((ap_predicate_op373_writeresp_state42 = ap_const_boolean_1) and (gmem1_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage16_11001_assign_proc : process(ap_enable_reg_pp0_iter1, gmem1_BVALID, ap_predicate_op376_writeresp_state43)
    begin
                ap_block_pp0_stage16_11001 <= ((ap_predicate_op376_writeresp_state43 = ap_const_boolean_1) and (gmem1_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage16_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, gmem1_BVALID, ap_predicate_op376_writeresp_state43)
    begin
                ap_block_pp0_stage16_subdone <= ((ap_predicate_op376_writeresp_state43 = ap_const_boolean_1) and (gmem1_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state4_io)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_const_boolean_1 = ap_block_state4_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state4_io)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_const_boolean_1 = ap_block_state4_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_01001_assign_proc : process(ap_enable_reg_pp0_iter0, gmem0_RVALID, ap_predicate_op215_read_state11, ap_predicate_op218_read_state11)
    begin
                ap_block_pp0_stage9_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((ap_predicate_op218_read_state11 = ap_const_boolean_1) and (gmem0_RVALID = ap_const_logic_0)) or ((ap_predicate_op215_read_state11 = ap_const_boolean_1) and (gmem0_RVALID = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage9_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, gmem0_RVALID, ap_predicate_op215_read_state11, ap_predicate_op218_read_state11, ap_block_state36_io)
    begin
                ap_block_pp0_stage9_11001 <= (((ap_const_boolean_1 = ap_block_state36_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((ap_predicate_op218_read_state11 = ap_const_boolean_1) and (gmem0_RVALID = ap_const_logic_0)) or ((ap_predicate_op215_read_state11 = ap_const_boolean_1) and (gmem0_RVALID = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, gmem0_RVALID, ap_predicate_op215_read_state11, ap_predicate_op218_read_state11, ap_block_state36_io)
    begin
                ap_block_pp0_stage9_subdone <= (((ap_const_boolean_1 = ap_block_state36_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((ap_predicate_op218_read_state11 = ap_const_boolean_1) and (gmem0_RVALID = ap_const_logic_0)) or ((ap_predicate_op215_read_state11 = ap_const_boolean_1) and (gmem0_RVALID = ap_const_logic_0)))));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(ap_enable_reg_pp1_iter1, ap_block_state46_io)
    begin
                ap_block_pp1_stage0_11001 <= ((ap_const_boolean_1 = ap_block_state46_io) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(ap_enable_reg_pp1_iter1, ap_block_state46_io)
    begin
                ap_block_pp1_stage0_subdone <= ((ap_const_boolean_1 = ap_block_state46_io) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_11001_assign_proc : process(ap_enable_reg_pp2_iter1, ap_block_state53_io)
    begin
                ap_block_pp2_stage0_11001 <= ((ap_const_boolean_1 = ap_block_state53_io) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(ap_enable_reg_pp2_iter1, ap_block_state53_io)
    begin
                ap_block_pp2_stage0_subdone <= ((ap_const_boolean_1 = ap_block_state53_io) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_01001_assign_proc : process(ap_enable_reg_pp3_iter7, tmp_20_reg_1847_pp3_iter6_reg, gmem1_BVALID)
    begin
                ap_block_pp3_stage0_01001 <= ((gmem1_BVALID = ap_const_logic_0) and (ap_enable_reg_pp3_iter7 = ap_const_logic_1) and (tmp_20_reg_1847_pp3_iter6_reg = ap_const_lv1_1));
    end process;


    ap_block_pp3_stage0_11001_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter7, tmp_20_reg_1847_pp3_iter6_reg, gmem1_BVALID, ap_block_state60_io, ap_block_state61_io)
    begin
                ap_block_pp3_stage0_11001 <= (((gmem1_BVALID = ap_const_logic_0) and (ap_enable_reg_pp3_iter7 = ap_const_logic_1) and (tmp_20_reg_1847_pp3_iter6_reg = ap_const_lv1_1)) or ((ap_const_boolean_1 = ap_block_state61_io) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state60_io) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp3_stage0_subdone_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter7, tmp_20_reg_1847_pp3_iter6_reg, gmem1_BVALID, ap_block_state60_io, ap_block_state61_io)
    begin
                ap_block_pp3_stage0_subdone <= (((gmem1_BVALID = ap_const_logic_0) and (ap_enable_reg_pp3_iter7 = ap_const_logic_1) and (tmp_20_reg_1847_pp3_iter6_reg = ap_const_lv1_1)) or ((ap_const_boolean_1 = ap_block_state61_io) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state60_io) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp4_stage0_01001_assign_proc : process(ap_enable_reg_pp4_iter7, tmp_31_reg_1867_pp4_iter6_reg, gmem1_BVALID)
    begin
                ap_block_pp4_stage0_01001 <= ((gmem1_BVALID = ap_const_logic_0) and (ap_enable_reg_pp4_iter7 = ap_const_logic_1) and (tmp_31_reg_1867_pp4_iter6_reg = ap_const_lv1_1));
    end process;


    ap_block_pp4_stage0_11001_assign_proc : process(ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter2, ap_enable_reg_pp4_iter7, tmp_31_reg_1867_pp4_iter6_reg, gmem1_BVALID, ap_block_state69_io, ap_block_state70_io)
    begin
                ap_block_pp4_stage0_11001 <= (((gmem1_BVALID = ap_const_logic_0) and (ap_enable_reg_pp4_iter7 = ap_const_logic_1) and (tmp_31_reg_1867_pp4_iter6_reg = ap_const_lv1_1)) or ((ap_const_boolean_1 = ap_block_state70_io) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state69_io) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp4_stage0_subdone_assign_proc : process(ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter2, ap_enable_reg_pp4_iter7, tmp_31_reg_1867_pp4_iter6_reg, gmem1_BVALID, ap_block_state69_io, ap_block_state70_io)
    begin
                ap_block_pp4_stage0_subdone <= (((gmem1_BVALID = ap_const_logic_0) and (ap_enable_reg_pp4_iter7 = ap_const_logic_1) and (tmp_31_reg_1867_pp4_iter6_reg = ap_const_lv1_1)) or ((ap_const_boolean_1 = ap_block_state70_io) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state69_io) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp5_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp5_stage0_01001_assign_proc : process(ap_enable_reg_pp5_iter1, exitcond1_reg_1894, gmem1_RVALID)
    begin
                ap_block_pp5_stage0_01001 <= ((gmem1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (exitcond1_reg_1894 = ap_const_lv1_0));
    end process;


    ap_block_pp5_stage0_11001_assign_proc : process(ap_enable_reg_pp5_iter1, exitcond1_reg_1894, ap_enable_reg_pp5_iter2, gmem1_RVALID, ap_block_state85_io)
    begin
                ap_block_pp5_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state85_io) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1)) or ((gmem1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (exitcond1_reg_1894 = ap_const_lv1_0)));
    end process;


    ap_block_pp5_stage0_subdone_assign_proc : process(ap_enable_reg_pp5_iter1, exitcond1_reg_1894, ap_enable_reg_pp5_iter2, gmem1_RVALID, ap_block_state85_io)
    begin
                ap_block_pp5_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state85_io) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1)) or ((gmem1_RVALID = ap_const_logic_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (exitcond1_reg_1894 = ap_const_lv1_0)));
    end process;

        ap_block_state10_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage9_iter0_assign_proc : process(gmem0_RVALID, ap_predicate_op215_read_state11, ap_predicate_op218_read_state11)
    begin
                ap_block_state11_pp0_stage9_iter0 <= (((ap_predicate_op218_read_state11 = ap_const_boolean_1) and (gmem0_RVALID = ap_const_logic_0)) or ((ap_predicate_op215_read_state11 = ap_const_boolean_1) and (gmem0_RVALID = ap_const_logic_0)));
    end process;

        ap_block_state12_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage11_iter0_ignore_call1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage13_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage14_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage14_iter0_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage15_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage16_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage17_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage17_iter0_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage18_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage19_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage20_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage20_iter0_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage21_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage22_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage23_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage23_iter0_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage24_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage4_iter1_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage8_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state36_io_assign_proc : process(ap_sig_ioackin_gmem1_AWREADY, ap_predicate_op326_writereq_state36)
    begin
                ap_block_state36_io <= ((ap_predicate_op326_writereq_state36 = ap_const_boolean_1) and (ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_0));
    end process;

        ap_block_state36_pp0_stage9_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state37_io_assign_proc : process(ap_sig_ioackin_gmem1_AWREADY, ap_sig_ioackin_gmem1_WREADY, ap_predicate_op349_write_state37, ap_predicate_op363_writereq_state37)
    begin
                ap_block_state37_io <= (((ap_predicate_op363_writereq_state37 = ap_const_boolean_1) and (ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_0)) or ((ap_predicate_op349_write_state37 = ap_const_boolean_1) and (ap_sig_ioackin_gmem1_WREADY = ap_const_logic_0)));
    end process;

        ap_block_state37_pp0_stage10_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state38_io_assign_proc : process(ap_sig_ioackin_gmem1_WREADY, ap_predicate_op366_write_state38)
    begin
                ap_block_state38_io <= ((ap_predicate_op366_write_state38 = ap_const_boolean_1) and (ap_sig_ioackin_gmem1_WREADY = ap_const_logic_0));
    end process;

        ap_block_state38_pp0_stage11_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage11_iter1_ignore_call1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage12_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage13_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage14_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage14_iter1_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state42_pp0_stage15_iter1_assign_proc : process(gmem1_BVALID, ap_predicate_op373_writeresp_state42)
    begin
                ap_block_state42_pp0_stage15_iter1 <= ((ap_predicate_op373_writeresp_state42 = ap_const_boolean_1) and (gmem1_BVALID = ap_const_logic_0));
    end process;


    ap_block_state43_pp0_stage16_iter1_assign_proc : process(gmem1_BVALID, ap_predicate_op376_writeresp_state43)
    begin
                ap_block_state43_pp0_stage16_iter1 <= ((ap_predicate_op376_writeresp_state43 = ap_const_boolean_1) and (gmem1_BVALID = ap_const_logic_0));
    end process;

        ap_block_state45_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state46_io_assign_proc : process(tmp_10_reg_1818, ap_sig_ioackin_gmem1_WREADY)
    begin
                ap_block_state46_io <= ((ap_sig_ioackin_gmem1_WREADY = ap_const_logic_0) and (tmp_10_reg_1818 = ap_const_lv1_0));
    end process;

        ap_block_state46_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(ap_sig_ioackin_gmem0_ARREADY, ap_predicate_op195_readreq_state4, ap_predicate_op196_readreq_state4)
    begin
                ap_block_state4_io <= (((ap_predicate_op196_readreq_state4 = ap_const_boolean_1) and (ap_sig_ioackin_gmem0_ARREADY = ap_const_logic_0)) or ((ap_predicate_op195_readreq_state4 = ap_const_boolean_1) and (ap_sig_ioackin_gmem0_ARREADY = ap_const_logic_0)));
    end process;

        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state53_io_assign_proc : process(exitcond2_reg_1838, ap_sig_ioackin_gmem1_WREADY)
    begin
                ap_block_state53_io <= ((ap_sig_ioackin_gmem1_WREADY = ap_const_logic_0) and (exitcond2_reg_1838 = ap_const_lv1_0));
    end process;

        ap_block_state53_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state60_io_assign_proc : process(tmp_20_reg_1847, ap_sig_ioackin_gmem1_AWREADY)
    begin
                ap_block_state60_io <= ((ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_0) and (tmp_20_reg_1847 = ap_const_lv1_1));
    end process;

        ap_block_state60_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state61_io_assign_proc : process(tmp_20_reg_1847_pp3_iter1_reg, ap_sig_ioackin_gmem1_WREADY)
    begin
                ap_block_state61_io <= ((ap_sig_ioackin_gmem1_WREADY = ap_const_logic_0) and (tmp_20_reg_1847_pp3_iter1_reg = ap_const_lv1_1));
    end process;

        ap_block_state61_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp3_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp3_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp3_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp3_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state66_pp3_stage0_iter7_assign_proc : process(tmp_20_reg_1847_pp3_iter6_reg, gmem1_BVALID)
    begin
                ap_block_state66_pp3_stage0_iter7 <= ((gmem1_BVALID = ap_const_logic_0) and (tmp_20_reg_1847_pp3_iter6_reg = ap_const_lv1_1));
    end process;

        ap_block_state68_pp4_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state69_io_assign_proc : process(tmp_31_reg_1867, ap_sig_ioackin_gmem1_AWREADY)
    begin
                ap_block_state69_io <= ((ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_0) and (tmp_31_reg_1867 = ap_const_lv1_1));
    end process;

        ap_block_state69_pp4_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state70_io_assign_proc : process(tmp_31_reg_1867_pp4_iter1_reg, ap_sig_ioackin_gmem1_WREADY)
    begin
                ap_block_state70_io <= ((ap_sig_ioackin_gmem1_WREADY = ap_const_logic_0) and (tmp_31_reg_1867_pp4_iter1_reg = ap_const_lv1_1));
    end process;

        ap_block_state70_pp4_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp4_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp4_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp4_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp4_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state75_pp4_stage0_iter7_assign_proc : process(tmp_31_reg_1867_pp4_iter6_reg, gmem1_BVALID)
    begin
                ap_block_state75_pp4_stage0_iter7 <= ((gmem1_BVALID = ap_const_logic_0) and (tmp_31_reg_1867_pp4_iter6_reg = ap_const_lv1_1));
    end process;

        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state83_pp5_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state84_pp5_stage0_iter1_assign_proc : process(exitcond1_reg_1894, gmem1_RVALID)
    begin
                ap_block_state84_pp5_stage0_iter1 <= ((gmem1_RVALID = ap_const_logic_0) and (exitcond1_reg_1894 = ap_const_lv1_0));
    end process;


    ap_block_state85_io_assign_proc : process(exitcond1_reg_1894_pp5_iter1_reg, ap_sig_ioackin_gmem1_WREADY)
    begin
                ap_block_state85_io <= ((ap_sig_ioackin_gmem1_WREADY = ap_const_logic_0) and (exitcond1_reg_1894_pp5_iter1_reg = ap_const_lv1_0));
    end process;

        ap_block_state85_pp5_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1875_assign_proc : process(ap_CS_fsm_pp0_stage9, ap_enable_reg_pp0_iter1, ap_predicate_op326_writereq_state36, ap_block_pp0_stage9_01001)
    begin
                ap_condition_1875 <= ((ap_predicate_op326_writereq_state36 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_01001));
    end process;


    ap_condition_1898_assign_proc : process(ap_CS_fsm_pp0_stage10, ap_enable_reg_pp0_iter1, ap_predicate_op363_writereq_state37, ap_block_pp0_stage10_01001)
    begin
                ap_condition_1898 <= ((ap_predicate_op363_writereq_state37 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_01001));
    end process;


    ap_condition_1967_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, tmp_20_reg_1847, ap_block_pp3_stage0_01001)
    begin
                ap_condition_1967 <= ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (tmp_20_reg_1847 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_01001));
    end process;


    ap_condition_1993_assign_proc : process(ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, tmp_31_reg_1867, ap_block_pp4_stage0_01001)
    begin
                ap_condition_1993 <= ((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (tmp_31_reg_1867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_01001));
    end process;


    ap_condition_3080_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_reg_ioackin_gmem0_ARREADY, ap_block_pp0_stage2_01001)
    begin
                ap_condition_3080 <= ((ap_reg_ioackin_gmem0_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001));
    end process;


    ap_condition_3097_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1587, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10)
    begin
                ap_condition_3097 <= ((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_635_p2)
    begin
        if ((exitcond_flatten_fu_635_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state45_assign_proc : process(tmp_10_fu_1421_p2)
    begin
        if ((tmp_10_fu_1421_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state45 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state45 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state52_assign_proc : process(exitcond2_fu_1448_p2)
    begin
        if ((exitcond2_fu_1448_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state52 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state52 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state59_assign_proc : process(tmp_20_fu_1460_p2)
    begin
        if ((tmp_20_fu_1460_p2 = ap_const_lv1_0)) then 
            ap_condition_pp3_exit_iter0_state59 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state59 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter0_state68_assign_proc : process(tmp_31_fu_1491_p2)
    begin
        if ((tmp_31_fu_1491_p2 = ap_const_lv1_0)) then 
            ap_condition_pp4_exit_iter0_state68 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter0_state68 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp5_exit_iter0_state83_assign_proc : process(exitcond1_fu_1532_p2)
    begin
        if ((exitcond1_fu_1532_p2 = ap_const_lv1_1)) then 
            ap_condition_pp5_exit_iter0_state83 <= ap_const_logic_1;
        else 
            ap_condition_pp5_exit_iter0_state83 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state90, gmem1_BVALID)
    begin
        if (((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state90))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);
    ap_enable_pp5 <= (ap_idle_pp5 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter7, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter3, ap_enable_reg_pp3_iter4, ap_enable_reg_pp3_iter5, ap_enable_reg_pp3_iter6)
    begin
        if (((ap_enable_reg_pp3_iter7 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter6 = ap_const_logic_0) and (ap_enable_reg_pp3_iter5 = ap_const_logic_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter2, ap_enable_reg_pp4_iter7, ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter3, ap_enable_reg_pp4_iter4, ap_enable_reg_pp4_iter5, ap_enable_reg_pp4_iter6)
    begin
        if (((ap_enable_reg_pp4_iter7 = ap_const_logic_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter6 = ap_const_logic_0) and (ap_enable_reg_pp4_iter5 = ap_const_logic_0) and (ap_enable_reg_pp4_iter4 = ap_const_logic_0) and (ap_enable_reg_pp4_iter3 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp5_assign_proc : process(ap_enable_reg_pp5_iter1, ap_enable_reg_pp5_iter2, ap_enable_reg_pp5_iter0)
    begin
        if (((ap_enable_reg_pp5_iter2 = ap_const_logic_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_0))) then 
            ap_idle_pp5 <= ap_const_logic_1;
        else 
            ap_idle_pp5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_371_p4_assign_proc : process(exitcond_flatten_reg_1587, ap_enable_reg_pp0_iter1, i_reg_367, ap_CS_fsm_pp0_stage0, i_mid2_reg_1627, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1587 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_371_p4 <= i_mid2_reg_1627;
        else 
            ap_phi_mux_i_phi_fu_371_p4 <= i_reg_367;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_360_p4_assign_proc : process(exitcond_flatten_reg_1587, ap_enable_reg_pp0_iter1, indvar_flatten_reg_356, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_1591, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1587 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_360_p4 <= indvar_flatten_next_reg_1591;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_360_p4 <= indvar_flatten_reg_356;
        end if; 
    end process;


    ap_phi_mux_j_phi_fu_382_p4_assign_proc : process(exitcond_flatten_reg_1587, ap_enable_reg_pp0_iter1, j_reg_378, ap_CS_fsm_pp0_stage0, j_1_reg_1676, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1587 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_j_phi_fu_382_p4 <= j_1_reg_1676;
        else 
            ap_phi_mux_j_phi_fu_382_p4 <= j_reg_378;
        end if; 
    end process;


    ap_predicate_op195_readreq_state4_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op195_readreq_state4 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op196_readreq_state4_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603)
    begin
                ap_predicate_op196_readreq_state4 <= ((tmp_1_mid2_reg_1603 = ap_const_lv1_1) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op215_read_state11_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op215_read_state11 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op218_read_state11_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603)
    begin
                ap_predicate_op218_read_state11 <= ((tmp_1_mid2_reg_1603 = ap_const_lv1_1) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op222_call_state12_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op222_call_state12 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op222_call_state12_state11_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op222_call_state12_state11 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op231_call_state13_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op231_call_state13 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op232_call_state13_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op232_call_state13 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op232_call_state13_state12_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op232_call_state13_state12 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op233_call_state14_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op233_call_state14 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op234_call_state14_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op234_call_state14 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op235_call_state15_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op235_call_state15 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op235_call_state15_state14_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op235_call_state15_state14 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op236_call_state15_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op236_call_state15 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op237_call_state16_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op237_call_state16 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op238_call_state16_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op238_call_state16 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op238_call_state16_state15_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op238_call_state16_state15 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op239_call_state17_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op239_call_state17 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op240_call_state17_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op240_call_state17 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op241_call_state18_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op241_call_state18 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op241_call_state18_state17_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op241_call_state18_state17 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op242_call_state18_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op242_call_state18 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op243_call_state19_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op243_call_state19 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op244_call_state19_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op244_call_state19 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op244_call_state19_state18_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op244_call_state19_state18 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op245_call_state20_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op245_call_state20 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op246_call_state20_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op246_call_state20 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op247_call_state21_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op247_call_state21 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op247_call_state21_state20_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op247_call_state21_state20 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op248_call_state21_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op248_call_state21 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op249_call_state22_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op249_call_state22 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op250_call_state22_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op250_call_state22 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op250_call_state22_state21_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op250_call_state22_state21 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op251_call_state23_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op251_call_state23 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op252_call_state23_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op252_call_state23 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op253_call_state24_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op253_call_state24 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op253_call_state24_state23_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op253_call_state24_state23 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op254_call_state24_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op254_call_state24 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op255_call_state25_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op255_call_state25 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op256_call_state25_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op256_call_state25 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op256_call_state25_state24_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op256_call_state25_state24 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op257_call_state26_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op257_call_state26 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op258_call_state26_assign_proc : process(exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op258_call_state26 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0));
    end process;


    ap_predicate_op259_call_state27_assign_proc : process(tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op259_call_state27 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0));
    end process;


    ap_predicate_op259_call_state27_state26_assign_proc : process(tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op259_call_state27_state26 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_0) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0));
    end process;


    ap_predicate_op260_call_state27_assign_proc : process(tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op260_call_state27 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0));
    end process;


    ap_predicate_op261_call_state28_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op261_call_state28 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op262_call_state28_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op262_call_state28 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op262_call_state28_state27_assign_proc : process(tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
                ap_predicate_op262_call_state28_state27 <= ((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0));
    end process;


    ap_predicate_op263_call_state29_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op263_call_state29 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op264_call_state29_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op264_call_state29 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op265_call_state30_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op265_call_state30 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op265_call_state30_state29_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op265_call_state30_state29 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op266_call_state30_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op266_call_state30 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op267_call_state31_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op267_call_state31 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op268_call_state31_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op268_call_state31 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op268_call_state31_state30_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op268_call_state31_state30 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op269_call_state32_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op269_call_state32 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op270_call_state32_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op270_call_state32 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op271_call_state33_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op271_call_state33 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op271_call_state33_state32_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op271_call_state33_state32 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op272_call_state33_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op272_call_state33 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op281_call_state34_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op281_call_state34 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op282_call_state34_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op282_call_state34 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op282_call_state34_state33_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op282_call_state34_state33 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op297_call_state35_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op297_call_state35 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op312_call_state35_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op312_call_state35 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op326_writereq_state36_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op326_writereq_state36 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op341_call_state36_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op341_call_state36 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op349_write_state37_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op349_write_state37 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op363_writereq_state37_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op363_writereq_state37 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op366_write_state38_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op366_write_state38 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op373_writeresp_state42_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op373_writeresp_state42 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op376_writeresp_state43_assign_proc : process(tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg)
    begin
                ap_predicate_op376_writeresp_state43 <= ((or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state90, gmem1_BVALID)
    begin
        if (((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state90))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_ioackin_gmem0_ARREADY_assign_proc : process(gmem0_ARREADY, ap_reg_ioackin_gmem0_ARREADY)
    begin
        if ((ap_reg_ioackin_gmem0_ARREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_gmem0_ARREADY <= gmem0_ARREADY;
        else 
            ap_sig_ioackin_gmem0_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_gmem1_ARREADY_assign_proc : process(gmem1_ARREADY, ap_reg_ioackin_gmem1_ARREADY)
    begin
        if ((ap_reg_ioackin_gmem1_ARREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_gmem1_ARREADY <= gmem1_ARREADY;
        else 
            ap_sig_ioackin_gmem1_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_gmem1_AWREADY_assign_proc : process(gmem1_AWREADY, ap_reg_ioackin_gmem1_AWREADY)
    begin
        if ((ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_gmem1_AWREADY <= gmem1_AWREADY;
        else 
            ap_sig_ioackin_gmem1_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_gmem1_WREADY_assign_proc : process(gmem1_WREADY, ap_reg_ioackin_gmem1_WREADY)
    begin
        if ((ap_reg_ioackin_gmem1_WREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_gmem1_WREADY <= gmem1_WREADY;
        else 
            ap_sig_ioackin_gmem1_WREADY <= ap_const_logic_1;
        end if; 
    end process;

    edge_val_1_fu_1190_p2 <= (tmp_38_fu_1184_p2 xor ap_const_lv8_FF);
    edge_val_1_i1_fu_1409_p3 <= 
        p_i1_fu_1395_p3 when (tmp_49_fu_1403_p2(0) = '1') else 
        edge_val_fu_1377_p2;
    edge_val_1_i_fu_1222_p3 <= 
        p_i_fu_1208_p3 when (tmp_67_fu_1216_p2(0) = '1') else 
        edge_val_1_fu_1190_p2;
    edge_val_fu_1377_p2 <= (tmp_28_fu_1371_p2 xor ap_const_lv8_FF);
    exitcond1_fu_1532_p2 <= "1" when (i5_reg_433 = ap_const_lv21_1FA400) else "0";
    exitcond2_fu_1448_p2 <= "1" when (i2_reg_400 = ap_const_lv16_A400) else "0";
    exitcond_flatten_fu_635_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_360_p4 = ap_const_lv21_1FAB80) else "0";
    fourWide_fu_1548_p5 <= (((val_reg_1903 & val_reg_1903) & val_reg_1903) & val_reg_1903);

    gmem0_ARADDR_assign_proc : process(gmem0_addr_1_reg_1638, gmem0_addr_reg_1655, ap_predicate_op195_readreq_state4, ap_predicate_op196_readreq_state4, ap_condition_3080)
    begin
        if ((ap_const_boolean_1 = ap_condition_3080)) then
            if ((ap_predicate_op196_readreq_state4 = ap_const_boolean_1)) then 
                gmem0_ARADDR <= gmem0_addr_reg_1655;
            elsif ((ap_predicate_op195_readreq_state4 = ap_const_boolean_1)) then 
                gmem0_ARADDR <= gmem0_addr_1_reg_1638;
            else 
                gmem0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            gmem0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_predicate_op195_readreq_state4, ap_predicate_op196_readreq_state4, ap_reg_ioackin_gmem0_ARREADY, ap_block_pp0_stage2_01001)
    begin
        if ((((ap_predicate_op196_readreq_state4 = ap_const_boolean_1) and (ap_reg_ioackin_gmem0_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001)) or ((ap_predicate_op195_readreq_state4 = ap_const_boolean_1) and (ap_reg_ioackin_gmem0_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001)))) then 
            gmem0_ARVALID <= ap_const_logic_1;
        else 
            gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_RREADY_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_predicate_op215_read_state11, ap_predicate_op218_read_state11, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_predicate_op218_read_state11 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_predicate_op215_read_state11 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            gmem0_RREADY <= ap_const_logic_1;
        else 
            gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_blk_n_AR_assign_proc : process(m_axi_gmem0_ARREADY, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2, exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_1_mid2_reg_1603 = ap_const_lv1_1) and (exitcond_flatten_reg_1587 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            gmem0_blk_n_AR <= m_axi_gmem0_ARREADY;
        else 
            gmem0_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_R_assign_proc : process(m_axi_gmem0_RVALID, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, or_cond_mid2_reg_1613)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_1) and (exitcond_flatten_reg_1587 = ap_const_lv1_0)))) then 
            gmem0_blk_n_R <= m_axi_gmem0_RVALID;
        else 
            gmem0_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    gmem1_ARADDR <= tmp_68_fu_1522_p1(32 - 1 downto 0);

    gmem1_ARVALID_assign_proc : process(ap_CS_fsm_state76, ap_reg_ioackin_gmem1_ARREADY)
    begin
        if (((ap_reg_ioackin_gmem1_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            gmem1_ARVALID <= ap_const_logic_1;
        else 
            gmem1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_AWADDR_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state51, ap_CS_fsm_state82, gmem1_BVALID, gmem1_addr_reg_1575, gmem1_addr_3_reg_1632_pp0_iter1_reg, gmem1_addr_2_reg_1644_pp0_iter1_reg, gmem1_addr_6_reg_1887, out_pix4_sum8_cast_fu_1438_p1, out_pix4_sum1_cast_fu_1481_p1, out_pix4_sum2_cast_fu_1512_p1, ap_reg_ioackin_gmem1_AWREADY, ap_condition_1875, ap_condition_1898, ap_condition_1967, ap_condition_1993)
    begin
        if ((ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_0)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
                gmem1_AWADDR <= gmem1_addr_6_reg_1887;
            elsif ((ap_const_boolean_1 = ap_condition_1993)) then 
                gmem1_AWADDR <= out_pix4_sum2_cast_fu_1512_p1(32 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1967)) then 
                gmem1_AWADDR <= out_pix4_sum1_cast_fu_1481_p1(32 - 1 downto 0);
            elsif (((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state51))) then 
                gmem1_AWADDR <= out_pix4_sum8_cast_fu_1438_p1(32 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                gmem1_AWADDR <= gmem1_addr_reg_1575;
            elsif ((ap_const_boolean_1 = ap_condition_1898)) then 
                gmem1_AWADDR <= gmem1_addr_2_reg_1644_pp0_iter1_reg;
            elsif ((ap_const_boolean_1 = ap_condition_1875)) then 
                gmem1_AWADDR <= gmem1_addr_3_reg_1632_pp0_iter1_reg;
            else 
                gmem1_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            gmem1_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem1_AWLEN_assign_proc : process(ap_CS_fsm_pp0_stage9, ap_CS_fsm_state44, ap_CS_fsm_state51, ap_CS_fsm_pp0_stage10, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, tmp_20_reg_1847, ap_CS_fsm_state82, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, tmp_31_reg_1867, gmem1_BVALID, ap_predicate_op326_writereq_state36, ap_predicate_op363_writereq_state37, ap_reg_ioackin_gmem1_AWREADY, ap_block_pp0_stage9_01001, ap_block_pp0_stage10_01001, ap_block_pp3_stage0_01001, ap_block_pp4_stage0_01001)
    begin
        if (((ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state82))) then 
            gmem1_AWLEN <= ap_const_lv32_1FA400;
        elsif ((((gmem1_BVALID = ap_const_logic_1) and (ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state51)) or ((ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state44)))) then 
            gmem1_AWLEN <= ap_const_lv32_780;
        elsif ((((ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (tmp_31_reg_1867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_01001)) or ((ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (tmp_20_reg_1847 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_01001)) or ((ap_predicate_op363_writereq_state37 = ap_const_boolean_1) and (ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_01001)) or ((ap_predicate_op326_writereq_state36 = ap_const_boolean_1) and (ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_01001)))) then 
            gmem1_AWLEN <= ap_const_lv32_1;
        else 
            gmem1_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem1_AWVALID_assign_proc : process(ap_CS_fsm_pp0_stage9, ap_CS_fsm_state44, ap_CS_fsm_state51, ap_CS_fsm_pp0_stage10, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, tmp_20_reg_1847, ap_CS_fsm_state82, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, tmp_31_reg_1867, gmem1_BVALID, ap_predicate_op326_writereq_state36, ap_predicate_op363_writereq_state37, ap_reg_ioackin_gmem1_AWREADY, ap_block_pp0_stage9_01001, ap_block_pp0_stage10_01001, ap_block_pp3_stage0_01001, ap_block_pp4_stage0_01001)
    begin
        if ((((ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (tmp_31_reg_1867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_01001)) or ((ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state82)) or ((ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (tmp_20_reg_1847 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_01001)) or ((ap_predicate_op363_writereq_state37 = ap_const_boolean_1) and (ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_01001)) or ((gmem1_BVALID = ap_const_logic_1) and (ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state51)) or ((ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((ap_predicate_op326_writereq_state36 = ap_const_boolean_1) and (ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_01001)))) then 
            gmem1_AWVALID <= ap_const_logic_1;
        else 
            gmem1_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_BREADY_assign_proc : process(ap_CS_fsm_state51, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage15, ap_CS_fsm_state58, ap_enable_reg_pp3_iter7, tmp_20_reg_1847_pp3_iter6_reg, ap_CS_fsm_state90, ap_enable_reg_pp4_iter7, tmp_31_reg_1867_pp4_iter6_reg, gmem1_BVALID, ap_sig_ioackin_gmem1_AWREADY, ap_predicate_op373_writeresp_state42, ap_block_pp0_stage15_11001, ap_predicate_op376_writeresp_state43, ap_block_pp0_stage16_11001, ap_block_pp3_stage0_11001, ap_block_pp4_stage0_11001)
    begin
        if ((((ap_enable_reg_pp4_iter7 = ap_const_logic_1) and (tmp_31_reg_1867_pp4_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state90)) or ((ap_enable_reg_pp3_iter7 = ap_const_logic_1) and (tmp_20_reg_1847_pp3_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_predicate_op373_writeresp_state42 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_predicate_op376_writeresp_state43 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or (not(((ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_0) or (gmem1_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state51)))) then 
            gmem1_BREADY <= ap_const_logic_1;
        else 
            gmem1_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_RREADY_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter1, exitcond1_reg_1894, ap_block_pp5_stage0_11001)
    begin
        if (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond1_reg_1894 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then 
            gmem1_RREADY <= ap_const_logic_1;
        else 
            gmem1_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_WDATA_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_10_reg_1818, ap_CS_fsm_pp0_stage10, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, exitcond2_reg_1838, ap_enable_reg_pp3_iter2, tmp_20_reg_1847_pp3_iter1_reg, ap_enable_reg_pp5_iter2, exitcond1_reg_1894_pp5_iter1_reg, ap_enable_reg_pp4_iter2, tmp_31_reg_1867_pp4_iter1_reg, ap_predicate_op349_write_state37, ap_predicate_op366_write_state38, ap_reg_ioackin_gmem1_WREADY, ap_block_pp0_stage10_01001, tmp_60_fu_1332_p1, ap_block_pp0_stage11_01001, tmp_47_fu_1417_p1, ap_block_pp1_stage0_01001, ap_block_pp2_stage0_01001, ap_block_pp3_stage0_01001, ap_block_pp4_stage0_01001, ap_block_pp5_stage0_01001, fourWide_fu_1548_p5)
    begin
        if (((ap_reg_ioackin_gmem1_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_01001) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (exitcond1_reg_1894_pp5_iter1_reg = ap_const_lv1_0))) then 
            gmem1_WDATA <= fourWide_fu_1548_p5;
        elsif ((((ap_reg_ioackin_gmem1_WREADY = ap_const_logic_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (tmp_31_reg_1867_pp4_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_01001)) or ((ap_reg_ioackin_gmem1_WREADY = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (tmp_20_reg_1847_pp3_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_01001)) or ((ap_reg_ioackin_gmem1_WREADY = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond2_reg_1838 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_01001)) or ((ap_reg_ioackin_gmem1_WREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_10_reg_1818 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001)))) then 
            gmem1_WDATA <= ap_const_lv32_0;
        elsif (((ap_predicate_op366_write_state38 = ap_const_boolean_1) and (ap_reg_ioackin_gmem1_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage11_01001))) then 
            gmem1_WDATA <= tmp_47_fu_1417_p1;
        elsif (((ap_predicate_op349_write_state37 = ap_const_boolean_1) and (ap_reg_ioackin_gmem1_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_01001))) then 
            gmem1_WDATA <= tmp_60_fu_1332_p1;
        else 
            gmem1_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem1_WVALID_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_10_reg_1818, ap_CS_fsm_pp0_stage10, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, exitcond2_reg_1838, ap_enable_reg_pp3_iter2, tmp_20_reg_1847_pp3_iter1_reg, ap_enable_reg_pp5_iter2, exitcond1_reg_1894_pp5_iter1_reg, ap_enable_reg_pp4_iter2, tmp_31_reg_1867_pp4_iter1_reg, ap_predicate_op349_write_state37, ap_predicate_op366_write_state38, ap_reg_ioackin_gmem1_WREADY, ap_block_pp0_stage10_01001, ap_block_pp0_stage11_01001, ap_block_pp1_stage0_01001, ap_block_pp2_stage0_01001, ap_block_pp3_stage0_01001, ap_block_pp4_stage0_01001, ap_block_pp5_stage0_01001)
    begin
        if ((((ap_reg_ioackin_gmem1_WREADY = ap_const_logic_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (tmp_31_reg_1867_pp4_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_01001)) or ((ap_reg_ioackin_gmem1_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_01001) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (exitcond1_reg_1894_pp5_iter1_reg = ap_const_lv1_0)) or ((ap_reg_ioackin_gmem1_WREADY = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (tmp_20_reg_1847_pp3_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_01001)) or ((ap_reg_ioackin_gmem1_WREADY = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond2_reg_1838 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_01001)) or ((ap_predicate_op366_write_state38 = ap_const_boolean_1) and (ap_reg_ioackin_gmem1_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage11_01001)) or ((ap_predicate_op349_write_state37 = ap_const_boolean_1) and (ap_reg_ioackin_gmem1_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_01001)) or ((ap_reg_ioackin_gmem1_WREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_10_reg_1818 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001)))) then 
            gmem1_WVALID <= ap_const_logic_1;
        else 
            gmem1_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_blk_n_AR_assign_proc : process(m_axi_gmem1_ARREADY, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            gmem1_blk_n_AR <= m_axi_gmem1_ARREADY;
        else 
            gmem1_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_AW_assign_proc : process(m_axi_gmem1_AWREADY, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_state44, ap_CS_fsm_state51, ap_CS_fsm_pp0_stage10, ap_enable_reg_pp0_iter1, ap_block_pp0_stage10, tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, tmp_20_reg_1847, ap_CS_fsm_state82, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, tmp_31_reg_1867)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state44) or ((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (tmp_31_reg_1867 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (tmp_20_reg_1847 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0)))) then 
            gmem1_blk_n_AW <= m_axi_gmem1_AWREADY;
        else 
            gmem1_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_B_assign_proc : process(m_axi_gmem1_BVALID, ap_CS_fsm_state51, ap_enable_reg_pp0_iter1, tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_state58, ap_block_pp3_stage0, ap_enable_reg_pp3_iter7, tmp_20_reg_1847_pp3_iter6_reg, ap_CS_fsm_state90, ap_block_pp4_stage0, ap_enable_reg_pp4_iter7, tmp_31_reg_1867_pp4_iter6_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state51) or ((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter7 = ap_const_logic_1) and (tmp_31_reg_1867_pp4_iter6_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter7 = ap_const_logic_1) and (tmp_20_reg_1847_pp3_iter6_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0)))) then 
            gmem1_blk_n_B <= m_axi_gmem1_BVALID;
        else 
            gmem1_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_R_assign_proc : process(m_axi_gmem1_RVALID, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter1, ap_block_pp5_stage0, exitcond1_reg_1894)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond1_reg_1894 = ap_const_lv1_0))) then 
            gmem1_blk_n_R <= m_axi_gmem1_RVALID;
        else 
            gmem1_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_W_assign_proc : process(m_axi_gmem1_WREADY, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_10_reg_1818, ap_CS_fsm_pp0_stage10, ap_enable_reg_pp0_iter1, ap_block_pp0_stage10, tmp_1_mid2_reg_1603_pp0_iter1_reg, or_cond_mid2_reg_1613_pp0_iter1_reg, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, exitcond2_reg_1838, ap_block_pp3_stage0, ap_enable_reg_pp3_iter2, tmp_20_reg_1847_pp3_iter1_reg, ap_block_pp5_stage0, ap_enable_reg_pp5_iter2, exitcond1_reg_1894_pp5_iter1_reg, ap_block_pp4_stage0, ap_enable_reg_pp4_iter2, tmp_31_reg_1867_pp4_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (tmp_31_reg_1867_pp4_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (exitcond1_reg_1894_pp5_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (tmp_20_reg_1847_pp3_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond2_reg_1838 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_1) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (or_cond_mid2_reg_1613_pp0_iter1_reg = ap_const_lv1_0) and (tmp_1_mid2_reg_1603_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_10_reg_1818 = ap_const_lv1_0)))) then 
            gmem1_blk_n_W <= m_axi_gmem1_WREADY;
        else 
            gmem1_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_458_p2 <= std_logic_vector(unsigned(tmp_mid2_fu_839_p2) + unsigned(j_cast1_fu_845_p1));
    grp_fu_462_p2 <= std_logic_vector(unsigned(tmp_2_mid2_reg_1607) + unsigned(j_cast1_fu_845_p1));
    grp_fu_466_p2 <= std_logic_vector(unsigned(tmp_9_mid2_reg_1622) + unsigned(j_cast_fu_942_p1));

    grp_getVal_fu_444_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24_11001, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage20_11001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage23_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage4)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)))) then 
            grp_getVal_fu_444_ap_ce <= ap_const_logic_1;
        else 
            grp_getVal_fu_444_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_getVal_fu_444_ap_start <= grp_getVal_fu_444_ap_start_reg;

    grp_getVal_fu_444_xDiff_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_enable_reg_pp0_iter1, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_predicate_op222_call_state12, ap_predicate_op232_call_state13, ap_predicate_op235_call_state15, ap_predicate_op238_call_state16, ap_predicate_op241_call_state18, ap_predicate_op244_call_state19, ap_predicate_op247_call_state21, ap_predicate_op250_call_state22, ap_predicate_op253_call_state24, ap_predicate_op256_call_state25, ap_predicate_op259_call_state27, ap_predicate_op262_call_state28, ap_predicate_op265_call_state30, ap_predicate_op268_call_state31, ap_predicate_op271_call_state33, ap_predicate_op282_call_state34, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage13, ap_block_pp0_stage14, ap_block_pp0_stage17, ap_block_pp0_stage19, ap_block_pp0_stage20, ap_block_pp0_stage22, ap_block_pp0_stage23, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((((ap_predicate_op282_call_state34 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_predicate_op271_call_state33 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_predicate_op265_call_state30 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_predicate_op262_call_state28 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_predicate_op259_call_state27 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_predicate_op268_call_state31 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            grp_getVal_fu_444_xDiff <= ap_const_lv2_1;
        elsif ((((ap_predicate_op253_call_state24 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage22)) or ((ap_predicate_op247_call_state21 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19)) or ((ap_predicate_op256_call_state25 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23)) or ((ap_predicate_op250_call_state22 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20)))) then 
            grp_getVal_fu_444_xDiff <= ap_const_lv2_0;
        elsif ((((ap_predicate_op235_call_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage13)) or ((ap_predicate_op241_call_state18 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_predicate_op232_call_state13 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_predicate_op222_call_state12 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_predicate_op244_call_state19 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17)) or ((ap_predicate_op238_call_state16 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14)))) then 
            grp_getVal_fu_444_xDiff <= ap_const_lv2_3;
        else 
            grp_getVal_fu_444_xDiff <= "XX";
        end if; 
    end process;


    grp_getVal_fu_444_yDiff_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_enable_reg_pp0_iter1, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_predicate_op222_call_state12, ap_predicate_op232_call_state13, ap_predicate_op235_call_state15, ap_predicate_op238_call_state16, ap_predicate_op241_call_state18, ap_predicate_op244_call_state19, ap_predicate_op247_call_state21, ap_predicate_op250_call_state22, ap_predicate_op253_call_state24, ap_predicate_op256_call_state25, ap_predicate_op259_call_state27, ap_predicate_op262_call_state28, ap_predicate_op265_call_state30, ap_predicate_op268_call_state31, ap_predicate_op271_call_state33, ap_predicate_op282_call_state34, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage13, ap_block_pp0_stage14, ap_block_pp0_stage17, ap_block_pp0_stage19, ap_block_pp0_stage20, ap_block_pp0_stage22, ap_block_pp0_stage23, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((((ap_predicate_op282_call_state34 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_predicate_op271_call_state33 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_predicate_op253_call_state24 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage22)) or ((ap_predicate_op241_call_state18 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_predicate_op256_call_state25 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23)) or ((ap_predicate_op244_call_state19 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17)))) then 
            grp_getVal_fu_444_yDiff <= ap_const_lv2_1;
        elsif ((((ap_predicate_op265_call_state30 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_predicate_op268_call_state31 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_predicate_op235_call_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage13)) or ((ap_predicate_op238_call_state16 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14)))) then 
            grp_getVal_fu_444_yDiff <= ap_const_lv2_0;
        elsif ((((ap_predicate_op262_call_state28 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_predicate_op259_call_state27 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_predicate_op247_call_state21 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19)) or ((ap_predicate_op232_call_state13 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_predicate_op222_call_state12 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_predicate_op250_call_state22 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20)))) then 
            grp_getVal_fu_444_yDiff <= ap_const_lv2_3;
        else 
            grp_getVal_fu_444_yDiff <= "XX";
        end if; 
    end process;

    i_1_fu_1427_p2 <= std_logic_vector(unsigned(i1_reg_389) + unsigned(ap_const_lv11_1));
    i_2_fu_1454_p2 <= std_logic_vector(unsigned(i2_reg_400) + unsigned(ap_const_lv16_1));
    i_3_fu_1475_p2 <= std_logic_vector(unsigned(i3_reg_411) + unsigned(ap_const_lv21_780));
    i_4_fu_1506_p2 <= std_logic_vector(unsigned(i4_reg_422) + unsigned(ap_const_lv21_780));
    i_5_fu_1538_p2 <= std_logic_vector(unsigned(i5_reg_433) + unsigned(ap_const_lv21_1));
    i_mid2_fu_831_p3 <= 
        i_s_fu_661_p2 when (tmp_s_fu_647_p2(0) = '1') else 
        ap_phi_mux_i_phi_fu_371_p4;
    i_s_fu_661_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) + unsigned(ap_phi_mux_i_phi_fu_371_p4));
    indvar_flatten_next_fu_641_p2 <= std_logic_vector(unsigned(ap_const_lv21_1) + unsigned(ap_phi_mux_indvar_flatten_phi_fu_360_p4));
        inter_pix2_sum6_cast_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inter_pix2_sum6_fu_927_p2),64));

    inter_pix2_sum6_fu_927_p2 <= std_logic_vector(unsigned(tmp_14_cast_fu_923_p1) + unsigned(tmp_5_cast_reg_1581));
        inter_pix2_sum_cast_fu_886_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inter_pix2_sum_fu_881_p2),64));

    inter_pix2_sum_fu_881_p2 <= std_logic_vector(unsigned(tmp_17_cast_fu_877_p1) + unsigned(tmp_5_cast_reg_1581));
    j_1_fu_951_p2 <= std_logic_vector(unsigned(j_mid2_reg_1596) + unsigned(ap_const_lv11_1));
    j_cast1_fu_845_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_mid2_reg_1596),23));
    j_cast_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_mid2_reg_1596),14));
    j_mid2_fu_653_p3 <= 
        ap_const_lv11_0 when (tmp_s_fu_647_p2(0) = '1') else 
        ap_phi_mux_j_phi_fu_382_p4;
    or_cond_fu_563_p2 <= (tmp_4_fu_557_p2 and tmp_3_fu_551_p2);
    or_cond_mid1_fu_735_p2 <= (tmp_4_mid1_fu_729_p2 and tmp_3_mid1_fu_723_p2);
    or_cond_mid2_fu_741_p3 <= 
        or_cond_mid1_fu_735_p2 when (tmp_s_fu_647_p2(0) = '1') else 
        or_cond_fu_563_p2;
    out_pix3_fu_479_p4 <= out_pix(31 downto 2);
    out_pix4_sum1_cast_fu_1481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_pix4_sum1_reg_1851),64));
    out_pix4_sum1_fu_1470_p2 <= std_logic_vector(unsigned(tmp_21_cast_fu_1466_p1) + unsigned(tmp_cast1_reg_1562));
    out_pix4_sum2_cast_fu_1512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_pix4_sum2_reg_1871),64));
    out_pix4_sum2_fu_1501_p2 <= std_logic_vector(unsigned(tmp_34_cast_fu_1497_p1) + unsigned(tmp_cast1_reg_1562));
    out_pix4_sum5_cast_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_pix4_sum5_fu_904_p2),64));
    out_pix4_sum5_fu_904_p2 <= std_logic_vector(unsigned(tmp_49_cast_fu_900_p1) + unsigned(tmp_cast_reg_1569));
    out_pix4_sum8_cast_fu_1438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_pix4_sum8_reg_1827),64));
    out_pix4_sum8_fu_1433_p2 <= std_logic_vector(unsigned(tmp_cast1_reg_1562) + unsigned(ap_const_lv31_1F9C80));
    out_pix4_sum_cast_fu_863_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_pix4_sum_fu_858_p2),64));
    out_pix4_sum_fu_858_p2 <= std_logic_vector(unsigned(tmp_62_cast_fu_854_p1) + unsigned(tmp_cast_reg_1569));
    p_i1_fu_1395_p3 <= 
        ap_const_lv8_FF when (tmp_29_fu_1383_p2(0) = '1') else 
        ap_const_lv8_0;
    p_i_fu_1208_p3 <= 
        ap_const_lv8_FF when (tmp_39_fu_1196_p2(0) = '1') else 
        ap_const_lv8_0;
    p_shl1_cast_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_fu_521_p3),23));
    p_shl1_cast_mid1_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_mid1_fu_685_p3),23));
    p_shl1_fu_521_p3 <= (ap_phi_mux_i_phi_fu_371_p4 & ap_const_lv11_0);
    p_shl1_mid1_fu_685_p3 <= (i_s_fu_661_p2 & ap_const_lv11_0);
    p_shl2_cast_fu_541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_fu_533_p3),23));
    p_shl2_cast_mid1_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_mid1_fu_697_p3),23));
    p_shl2_fu_533_p3 <= (ap_phi_mux_i_phi_fu_371_p4 & ap_const_lv7_0);
    p_shl2_mid1_fu_697_p3 <= (i_s_fu_661_p2 & ap_const_lv7_0);
    p_shl3_cast_fu_577_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_fu_569_p3),14));
    p_shl3_cast_mid1_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_mid1_fu_749_p3),14));
    p_shl3_fu_569_p3 <= (tmp_5_fu_511_p1 & ap_const_lv11_0);
    p_shl3_mid1_fu_749_p3 <= (tmp_7_fu_667_p1 & ap_const_lv11_0);
    p_shl4_cast_fu_589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl4_fu_581_p3),14));
    p_shl4_cast_mid1_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl4_mid1_fu_761_p3),14));
    p_shl4_fu_581_p3 <= (tmp_5_fu_511_p1 & ap_const_lv7_0);
    p_shl4_mid1_fu_761_p3 <= (tmp_7_fu_667_p1 & ap_const_lv7_0);
    p_shl5_cast_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl5_fu_617_p3),14));
    p_shl5_cast_mid1_fu_813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl5_mid1_fu_805_p3),14));
    p_shl5_fu_617_p3 <= (tmp_7_cast_fu_599_p2 & ap_const_lv7_0);
    p_shl5_mid1_fu_805_p3 <= (tmp_7_cast_mid1_fu_787_p2 & ap_const_lv7_0);
    p_shl6_cast_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl6_fu_1126_p3),11));
    p_shl6_fu_1126_p3 <= (tmp_21_reg_1711 & ap_const_lv1_0);
    p_shl7_cast_fu_1292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl7_fu_1285_p3),11));
    p_shl7_fu_1285_p3 <= (tmp_27_reg_1741 & ap_const_lv1_0);
    p_shl8_cast_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl8_fu_985_p3),11));
    p_shl8_fu_985_p3 <= (tmp_53_reg_1706 & ap_const_lv1_0);
    p_shl9_cast_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl9_fu_1063_p3),11));
    p_shl9_fu_1063_p3 <= (tmp_56_reg_1736 & ap_const_lv1_0);
    p_shl_cast_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_605_p3),14));
    p_shl_cast_mid1_fu_801_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_mid1_fu_793_p3),14));
    p_shl_fu_605_p3 <= (tmp_7_cast_fu_599_p2 & ap_const_lv11_0);
    p_shl_mid1_fu_793_p3 <= (tmp_7_cast_mid1_fu_787_p2 & ap_const_lv11_0);

    superCache_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2, exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, or_cond_mid2_reg_1613, ap_CS_fsm_pp0_stage10, ap_enable_reg_pp0_iter1, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, grp_getVal_fu_444_Y_address0, ap_predicate_op231_call_state13, ap_predicate_op233_call_state14, ap_predicate_op234_call_state14, ap_predicate_op236_call_state15, ap_predicate_op237_call_state16, ap_predicate_op239_call_state17, ap_predicate_op240_call_state17, ap_predicate_op242_call_state18, ap_predicate_op243_call_state19, ap_predicate_op245_call_state20, ap_predicate_op246_call_state20, ap_predicate_op248_call_state21, ap_predicate_op249_call_state22, ap_predicate_op251_call_state23, ap_predicate_op252_call_state23, ap_predicate_op254_call_state24, ap_predicate_op255_call_state25, ap_predicate_op257_call_state26, ap_predicate_op258_call_state26, ap_predicate_op260_call_state27, ap_predicate_op261_call_state28, ap_predicate_op263_call_state29, ap_predicate_op264_call_state29, ap_predicate_op266_call_state30, ap_predicate_op267_call_state31, ap_predicate_op269_call_state32, ap_predicate_op270_call_state32, ap_predicate_op272_call_state33, ap_predicate_op281_call_state34, ap_predicate_op297_call_state35, ap_predicate_op312_call_state35, ap_predicate_op341_call_state36, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage13, ap_block_pp0_stage14, ap_block_pp0_stage17, ap_block_pp0_stage19, ap_block_pp0_stage20, ap_block_pp0_stage22, ap_block_pp0_stage23, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage12, ap_block_pp0_stage18, ap_block_pp0_stage21, ap_block_pp0_stage24, ap_block_pp0_stage5, ap_block_pp0_stage8, tmp_16_fu_959_p1, tmp_12_fu_964_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_1) and (exitcond_flatten_reg_1587 = ap_const_lv1_0))) then 
            superCache_address0 <= tmp_12_fu_964_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0))) then 
            superCache_address0 <= tmp_16_fu_959_p1(13 - 1 downto 0);
        elsif ((((ap_predicate_op281_call_state34 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_predicate_op272_call_state33 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_predicate_op270_call_state32 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_predicate_op269_call_state32 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_predicate_op266_call_state30 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_predicate_op261_call_state28 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_predicate_op260_call_state27 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_predicate_op312_call_state35 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_predicate_op297_call_state35 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_predicate_op267_call_state31 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_predicate_op341_call_state36 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_predicate_op258_call_state26 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage24)) or ((ap_predicate_op257_call_state26 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage24)) or ((ap_predicate_op254_call_state24 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage22)) or ((ap_predicate_op252_call_state23 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage21)) or ((ap_predicate_op251_call_state23 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage21)) or ((ap_predicate_op248_call_state21 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19)) or ((ap_predicate_op246_call_state20 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage18)) or ((ap_predicate_op245_call_state20 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage18)) or ((ap_predicate_op236_call_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage13)) or ((ap_predicate_op234_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage12)) or ((ap_predicate_op233_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage12)) or ((ap_predicate_op240_call_state17 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_predicate_op239_call_state17 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_predicate_op242_call_state18 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_predicate_op231_call_state13 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_predicate_op255_call_state25 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23)) or ((ap_predicate_op249_call_state22 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20)) or ((ap_predicate_op243_call_state19 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17)) or ((ap_predicate_op237_call_state16 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14)) or ((ap_predicate_op264_call_state29 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_predicate_op263_call_state29 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            superCache_address0 <= grp_getVal_fu_444_Y_address0;
        else 
            superCache_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    superCache_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2, exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, or_cond_mid2_reg_1613, ap_CS_fsm_pp0_stage10, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage10_11001, grp_getVal_fu_444_Y_ce0, ap_predicate_op231_call_state13, ap_predicate_op233_call_state14, ap_predicate_op234_call_state14, ap_predicate_op236_call_state15, ap_predicate_op237_call_state16, ap_predicate_op239_call_state17, ap_predicate_op240_call_state17, ap_predicate_op242_call_state18, ap_predicate_op243_call_state19, ap_predicate_op245_call_state20, ap_predicate_op246_call_state20, ap_predicate_op248_call_state21, ap_predicate_op249_call_state22, ap_predicate_op251_call_state23, ap_predicate_op252_call_state23, ap_predicate_op254_call_state24, ap_predicate_op255_call_state25, ap_predicate_op257_call_state26, ap_predicate_op258_call_state26, ap_predicate_op260_call_state27, ap_predicate_op261_call_state28, ap_predicate_op263_call_state29, ap_predicate_op264_call_state29, ap_predicate_op266_call_state30, ap_predicate_op267_call_state31, ap_predicate_op269_call_state32, ap_predicate_op270_call_state32, ap_predicate_op272_call_state33, ap_predicate_op281_call_state34, ap_predicate_op297_call_state35, ap_predicate_op312_call_state35, ap_predicate_op341_call_state36, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage13, ap_block_pp0_stage14, ap_block_pp0_stage17, ap_block_pp0_stage19, ap_block_pp0_stage20, ap_block_pp0_stage22, ap_block_pp0_stage23, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage12, ap_block_pp0_stage18, ap_block_pp0_stage21, ap_block_pp0_stage24, ap_block_pp0_stage5, ap_block_pp0_stage8)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_1) and (exitcond_flatten_reg_1587 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)))) then 
            superCache_ce0 <= ap_const_logic_1;
        elsif ((((ap_predicate_op281_call_state34 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_predicate_op272_call_state33 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_predicate_op270_call_state32 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_predicate_op269_call_state32 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_predicate_op266_call_state30 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_predicate_op261_call_state28 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_predicate_op260_call_state27 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_predicate_op312_call_state35 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_predicate_op297_call_state35 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_predicate_op267_call_state31 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_predicate_op341_call_state36 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_predicate_op258_call_state26 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage24)) or ((ap_predicate_op257_call_state26 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage24)) or ((ap_predicate_op254_call_state24 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage22)) or ((ap_predicate_op252_call_state23 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage21)) or ((ap_predicate_op251_call_state23 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage21)) or ((ap_predicate_op248_call_state21 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage19)) or ((ap_predicate_op246_call_state20 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage18)) or ((ap_predicate_op245_call_state20 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage18)) or ((ap_predicate_op236_call_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage13)) or ((ap_predicate_op234_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage12)) or ((ap_predicate_op233_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage12)) or ((ap_predicate_op240_call_state17 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_predicate_op239_call_state17 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_predicate_op242_call_state18 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_predicate_op231_call_state13 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_predicate_op255_call_state25 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23)) or ((ap_predicate_op249_call_state22 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20)) or ((ap_predicate_op243_call_state19 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17)) or ((ap_predicate_op237_call_state16 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14)) or ((ap_predicate_op264_call_state29 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_predicate_op263_call_state29 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            superCache_ce0 <= grp_getVal_fu_444_Y_ce0;
        else 
            superCache_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    superCache_d0_assign_proc : process(tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613, gmem0_addr_1_read_reg_1661, gmem0_addr_read_reg_1671, ap_condition_3097)
    begin
        if ((ap_const_boolean_1 = ap_condition_3097)) then
            if ((tmp_1_mid2_reg_1603 = ap_const_lv1_1)) then 
                superCache_d0 <= gmem0_addr_read_reg_1671;
            elsif (((or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0))) then 
                superCache_d0 <= gmem0_addr_1_read_reg_1661;
            else 
                superCache_d0 <= "XXXXXXXX";
            end if;
        else 
            superCache_d0 <= "XXXXXXXX";
        end if; 
    end process;


    superCache_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1587, tmp_1_mid2_reg_1603, or_cond_mid2_reg_1613, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_cond_mid2_reg_1613 = ap_const_lv1_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_0) and (exitcond_flatten_reg_1587 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_1_mid2_reg_1603 = ap_const_lv1_1) and (exitcond_flatten_reg_1587 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)))) then 
            superCache_we0 <= ap_const_logic_1;
        else 
            superCache_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp12_cast_fu_1257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp8_reg_1782),10));
    tmp13_cast_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp13_reg_1751),10));
    tmp13_fu_1002_p2 <= std_logic_vector(unsigned(tmp_65_0_2_cast_fu_972_p1) + unsigned(tmp_651_cast_fu_968_p1));
    tmp8_fu_1143_p2 <= std_logic_vector(unsigned(tmp_52_0_2_cast_fu_1113_p1) + unsigned(tmp_521_cast_fu_1110_p1));
    tmp_10_fu_1421_p2 <= "1" when (i1_reg_389 = ap_const_lv11_780) else "0";
    tmp_12_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_cast_reg_1650),64));
        tmp_13_cast_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_462_p2),32));

    tmp_14_cast_fu_923_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_cast_fu_919_p1),34));
    tmp_15_fu_946_p2 <= std_logic_vector(unsigned(tmp_6_mid2_reg_1617) + unsigned(j_cast_fu_942_p1));
        tmp_16_cast_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_462_p2),32));

    tmp_16_fu_959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_cast_fu_956_p1),64));
    tmp_17_cast_fu_877_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_cast_fu_873_p1),34));
        tmp_18_cast_fu_956_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_15_reg_1666),32));

    tmp_1_fu_515_p2 <= "1" when (unsigned(ap_phi_mux_i_phi_fu_371_p4) < unsigned(ap_const_lv11_3)) else "0";
    tmp_1_mid1_fu_671_p2 <= "1" when (unsigned(i_s_fu_661_p2) < unsigned(ap_const_lv11_3)) else "0";
    tmp_1_mid2_fu_677_p3 <= 
        tmp_1_mid1_fu_671_p2 when (tmp_s_fu_647_p2(0) = '1') else 
        tmp_1_fu_515_p2;
    tmp_20_fu_1460_p2 <= "1" when (unsigned(i3_reg_411) < unsigned(ap_const_lv21_1FA400)) else "0";
    tmp_21_cast_fu_1466_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i3_reg_411),31));
    tmp_22_fu_1322_p2 <= "1" when (signed(x_weight_2_2_fu_1310_p2) > signed(ap_const_lv11_0)) else "0";
    tmp_25_fu_1354_p2 <= "1" when (signed(y_weight_2_2_reg_1797) > signed(ap_const_lv11_0)) else "0";
    tmp_28_fu_1371_p2 <= std_logic_vector(unsigned(tmp_41_fu_1347_p3) + unsigned(tmp_46_fu_1364_p3));
    tmp_29_fu_1383_p2 <= "1" when (unsigned(tmp_28_fu_1371_p2) < unsigned(ap_const_lv8_37)) else "0";
    tmp_2_fu_545_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_529_p1) - unsigned(p_shl2_cast_fu_541_p1));
    tmp_2_mid1_fu_709_p2 <= std_logic_vector(unsigned(p_shl1_cast_mid1_fu_693_p1) - unsigned(p_shl2_cast_mid1_fu_705_p1));
    tmp_2_mid2_fu_715_p3 <= 
        tmp_2_mid1_fu_709_p2 when (tmp_s_fu_647_p2(0) = '1') else 
        tmp_2_fu_545_p2;
    tmp_31_fu_1491_p2 <= "1" when (unsigned(i4_reg_422) < unsigned(ap_const_lv21_1FA400)) else "0";
    tmp_32_fu_1100_p2 <= "1" when (signed(x_weight_1_2_2_fu_1088_p2) > signed(ap_const_lv11_0)) else "0";
    tmp_34_cast_fu_1497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i4_reg_422),31));
    tmp_35_fu_1167_p2 <= "1" when (signed(y_weight_1_2_2_reg_1761) > signed(ap_const_lv11_0)) else "0";
    tmp_36_fu_1306_p1 <= x_weight_2_fu_1273_p2(8 - 1 downto 0);
    tmp_37_fu_1336_p2 <= std_logic_vector(unsigned(tmp_36_reg_1792) + unsigned(reg_475));
    tmp_38_fu_1184_p2 <= std_logic_vector(unsigned(tmp_63_fu_1160_p3) + unsigned(tmp_66_fu_1177_p3));
    tmp_39_fu_1196_p2 <= "1" when (unsigned(tmp_38_fu_1184_p2) < unsigned(ap_const_lv8_37)) else "0";
    tmp_3_fu_551_p2 <= "1" when (unsigned(ap_phi_mux_i_phi_fu_371_p4) > unsigned(ap_const_lv11_2)) else "0";
    tmp_3_mid1_fu_723_p2 <= "1" when (unsigned(i_s_fu_661_p2) > unsigned(ap_const_lv11_2)) else "0";
    tmp_40_fu_1341_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(tmp_37_fu_1336_p2));
    tmp_41_fu_1347_p3 <= 
        tmp_37_fu_1336_p2 when (tmp_22_reg_1802(0) = '1') else 
        tmp_40_fu_1341_p2;
    tmp_42_fu_1328_p1 <= y_weight_2_2_fu_1316_p2(8 - 1 downto 0);
    tmp_43_fu_1389_p2 <= "1" when (unsigned(tmp_28_fu_1371_p2) > unsigned(ap_const_lv8_9B)) else "0";
    tmp_44_fu_1202_p2 <= "1" when (unsigned(tmp_38_fu_1184_p2) > unsigned(ap_const_lv8_9B)) else "0";
    tmp_45_fu_1359_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(tmp_42_reg_1807));
    tmp_46_fu_1364_p3 <= 
        tmp_42_reg_1807 when (tmp_25_fu_1354_p2(0) = '1') else 
        tmp_45_fu_1359_p2;
    tmp_47_fu_1417_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(edge_val_1_i1_reg_1813),32));
        tmp_48_cast_fu_896_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_458_p2),32));

    tmp_49_cast_fu_900_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_cast_fu_896_p1),33));
    tmp_49_fu_1403_p2 <= (tmp_43_fu_1389_p2 or tmp_29_fu_1383_p2);
    tmp_4_fu_557_p2 <= "1" when (unsigned(ap_phi_mux_i_phi_fu_371_p4) < unsigned(ap_const_lv11_438)) else "0";
    tmp_4_mid1_fu_729_p2 <= "1" when (unsigned(i_s_fu_661_p2) < unsigned(ap_const_lv11_438)) else "0";
    tmp_521_cast_fu_1110_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_reg_1681),9));
    tmp_52_0_2_cast_fu_1113_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_reg_1701),9));
    tmp_52_2_2_cast_fu_1302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_getVal_fu_444_ap_return),11));
    tmp_52_2_cast_fu_1270_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_reg_1731),11));
    tmp_55_1_2_cast_fu_1248_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_55_1_2_fu_1241_p3),11));
    tmp_55_1_2_fu_1241_p3 <= (tmp_23_reg_1721 & ap_const_lv1_0);
    tmp_58_fu_1084_p1 <= x_weight_1_2_fu_1051_p2(8 - 1 downto 0);
    tmp_59_0_1_cast_fu_1237_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_0_1_fu_1230_p3),10));
    tmp_59_0_1_fu_1230_p3 <= (tmp_18_reg_1691 & ap_const_lv1_0);
    tmp_59_fu_1149_p2 <= std_logic_vector(unsigned(tmp_58_reg_1756) + unsigned(reg_475));
        tmp_5_cast_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inter_pix),34));

    tmp_5_fu_511_p1 <= ap_phi_mux_i_phi_fu_371_p4(2 - 1 downto 0);
    tmp_60_fu_1332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(edge_val_1_i_reg_1787),32));
        tmp_61_cast_fu_850_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_458_p2),32));

    tmp_62_cast_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_61_cast_fu_850_p1),33));
    tmp_62_fu_1154_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(tmp_59_fu_1149_p2));
    tmp_63_fu_1160_p3 <= 
        tmp_59_fu_1149_p2 when (tmp_32_reg_1766(0) = '1') else 
        tmp_62_fu_1154_p2;
    tmp_64_fu_1106_p1 <= y_weight_1_2_2_fu_1094_p2(8 - 1 downto 0);
    tmp_651_cast_fu_968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_475),9));
    tmp_65_0_2_cast_fu_972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_52_reg_1696),9));
    tmp_65_2_2_cast_fu_1080_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_getVal_fu_444_ap_return),11));
    tmp_65_2_cast_fu_1048_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_55_reg_1726),11));
    tmp_65_fu_1172_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(tmp_64_reg_1771));
    tmp_66_fu_1177_p3 <= 
        tmp_64_reg_1771 when (tmp_35_fu_1167_p2(0) = '1') else 
        tmp_65_fu_1172_p2;
    tmp_67_fu_1216_p2 <= (tmp_44_fu_1202_p2 or tmp_39_fu_1196_p2);
    tmp_68_1_2_cast_fu_1026_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_68_1_2_fu_1019_p3),11));
    tmp_68_1_2_fu_1019_p3 <= (tmp_54_reg_1716 & ap_const_lv1_0);
    tmp_68_fu_1522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_pix3_reg_1557),64));
    tmp_6_fu_593_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_577_p1) - unsigned(p_shl4_cast_fu_589_p1));
    tmp_6_mid1_fu_773_p2 <= std_logic_vector(unsigned(p_shl3_cast_mid1_fu_757_p1) - unsigned(p_shl4_cast_mid1_fu_769_p1));
    tmp_6_mid2_fu_779_p3 <= 
        tmp_6_mid1_fu_773_p2 when (tmp_s_fu_647_p2(0) = '1') else 
        tmp_6_fu_593_p2;
    tmp_72_0_1_cast_fu_1015_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_72_0_1_fu_1008_p3),10));
    tmp_72_0_1_fu_1008_p3 <= (tmp_51_reg_1686 & ap_const_lv1_0);
    tmp_7_cast_fu_599_p2 <= (tmp_5_fu_511_p1 xor ap_const_lv2_2);
    tmp_7_cast_mid1_fu_787_p2 <= (tmp_7_fu_667_p1 xor ap_const_lv2_2);
    tmp_7_fu_667_p1 <= i_s_fu_661_p2(2 - 1 downto 0);
    tmp_9_fu_629_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_613_p1) - unsigned(p_shl5_cast_fu_625_p1));
    tmp_9_mid1_fu_817_p2 <= std_logic_vector(unsigned(p_shl_cast_mid1_fu_801_p1) - unsigned(p_shl5_cast_mid1_fu_813_p1));
    tmp_9_mid2_fu_823_p3 <= 
        tmp_9_mid1_fu_817_p2 when (tmp_s_fu_647_p2(0) = '1') else 
        tmp_9_fu_629_p2;
    tmp_cast1_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_pix3_fu_479_p4),31));
    tmp_cast_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_pix3_fu_479_p4),33));
    tmp_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_pix3_fu_479_p4),64));
    tmp_mid2_fu_839_p2 <= std_logic_vector(signed(ap_const_lv23_7FF100) + signed(tmp_2_mid2_reg_1607));
    tmp_s_fu_647_p2 <= "1" when (ap_phi_mux_j_phi_fu_382_p4 = ap_const_lv11_780) else "0";
    val_fu_1544_p1 <= gmem1_RDATA(8 - 1 downto 0);
        x_weight_0_2_cast_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_weight_0_2_fu_1116_p2),11));

    x_weight_0_2_fu_1116_p2 <= std_logic_vector(unsigned(tmp_52_0_2_cast_fu_1113_p1) - unsigned(tmp_521_cast_fu_1110_p1));
    x_weight_127_1_fu_1137_p2 <= std_logic_vector(signed(x_weight_0_2_cast_fu_1122_p1) - signed(p_shl6_cast_fu_1133_p1));
    x_weight_127_2_fu_1252_p2 <= std_logic_vector(unsigned(tmp_55_1_2_cast_fu_1248_p1) + unsigned(x_weight_127_1_reg_1777));
        x_weight_1_0_2_cast_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_weight_1_0_2_fu_975_p2),11));

    x_weight_1_0_2_fu_975_p2 <= std_logic_vector(unsigned(tmp_65_0_2_cast_fu_972_p1) - unsigned(tmp_651_cast_fu_968_p1));
    x_weight_1_1_1_fu_996_p2 <= std_logic_vector(signed(x_weight_1_0_2_cast_fu_981_p1) - signed(p_shl8_cast_fu_992_p1));
    x_weight_1_1_2_fu_1030_p2 <= std_logic_vector(unsigned(tmp_68_1_2_cast_fu_1026_p1) + unsigned(x_weight_1_1_1_reg_1746));
    x_weight_1_2_2_fu_1088_p2 <= std_logic_vector(unsigned(tmp_65_2_2_cast_fu_1080_p1) + unsigned(x_weight_1_2_fu_1051_p2));
    x_weight_1_2_fu_1051_p2 <= std_logic_vector(unsigned(x_weight_1_1_2_fu_1030_p2) - unsigned(tmp_65_2_cast_fu_1048_p1));
    x_weight_2_2_fu_1310_p2 <= std_logic_vector(unsigned(tmp_52_2_2_cast_fu_1302_p1) + unsigned(x_weight_2_fu_1273_p2));
    x_weight_2_fu_1273_p2 <= std_logic_vector(unsigned(x_weight_127_2_fu_1252_p2) - unsigned(tmp_52_2_cast_fu_1270_p1));
    y_weight_130_2_cast_fu_1266_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_weight_130_2_fu_1260_p2),11));
    y_weight_130_2_fu_1260_p2 <= std_logic_vector(unsigned(tmp_59_0_1_cast_fu_1237_p1) + unsigned(tmp12_cast_fu_1257_p1));
    y_weight_1_1_2_cast_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_weight_1_1_2_fu_1038_p2),11));
    y_weight_1_1_2_fu_1038_p2 <= std_logic_vector(unsigned(tmp_72_0_1_cast_fu_1015_p1) + unsigned(tmp13_cast_fu_1035_p1));
    y_weight_1_2_1_fu_1074_p2 <= std_logic_vector(unsigned(y_weight_1_2_fu_1057_p2) - unsigned(p_shl9_cast_fu_1070_p1));
    y_weight_1_2_2_fu_1094_p2 <= std_logic_vector(unsigned(y_weight_1_2_1_fu_1074_p2) - unsigned(tmp_65_2_2_cast_fu_1080_p1));
    y_weight_1_2_fu_1057_p2 <= std_logic_vector(unsigned(y_weight_1_1_2_cast_fu_1044_p1) - unsigned(tmp_65_2_cast_fu_1048_p1));
    y_weight_2_1_fu_1296_p2 <= std_logic_vector(unsigned(y_weight_2_fu_1279_p2) - unsigned(p_shl7_cast_fu_1292_p1));
    y_weight_2_2_fu_1316_p2 <= std_logic_vector(unsigned(y_weight_2_1_fu_1296_p2) - unsigned(tmp_52_2_2_cast_fu_1302_p1));
    y_weight_2_fu_1279_p2 <= std_logic_vector(unsigned(y_weight_130_2_cast_fu_1266_p1) - unsigned(tmp_52_2_cast_fu_1270_p1));
end behav;
