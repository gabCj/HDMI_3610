// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sobel_filter.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sobel_filter::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sobel_filter::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> sobel_filter::ap_ST_fsm_state1 = "1";
const sc_lv<12> sobel_filter::ap_ST_fsm_state2 = "10";
const sc_lv<12> sobel_filter::ap_ST_fsm_state3 = "100";
const sc_lv<12> sobel_filter::ap_ST_fsm_state4 = "1000";
const sc_lv<12> sobel_filter::ap_ST_fsm_state5 = "10000";
const sc_lv<12> sobel_filter::ap_ST_fsm_state6 = "100000";
const sc_lv<12> sobel_filter::ap_ST_fsm_state7 = "1000000";
const sc_lv<12> sobel_filter::ap_ST_fsm_state8 = "10000000";
const sc_lv<12> sobel_filter::ap_ST_fsm_state9 = "100000000";
const sc_lv<12> sobel_filter::ap_ST_fsm_state10 = "1000000000";
const sc_lv<12> sobel_filter::ap_ST_fsm_pp1_stage0 = "10000000000";
const sc_lv<12> sobel_filter::ap_ST_fsm_state35 = "100000000000";
const sc_lv<32> sobel_filter::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool sobel_filter::ap_const_boolean_1 = true;
const sc_lv<32> sobel_filter::ap_const_lv32_2 = "10";
const sc_lv<32> sobel_filter::ap_const_lv32_4 = "100";
const sc_lv<32> sobel_filter::ap_const_lv32_9 = "1001";
const bool sobel_filter::ap_const_boolean_0 = false;
const sc_lv<1> sobel_filter::ap_const_lv1_1 = "1";
const sc_lv<1> sobel_filter::ap_const_lv1_0 = "0";
const int sobel_filter::C_S_AXI_DATA_WIDTH = "100000";
const int sobel_filter::C_M_AXI_GMEM0_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int sobel_filter::C_M_AXI_GMEM0_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int sobel_filter::C_M_AXI_GMEM0_CACHE_VALUE = "11";
const int sobel_filter::C_M_AXI_GMEM1_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int sobel_filter::C_M_AXI_GMEM1_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int sobel_filter::C_M_AXI_GMEM1_CACHE_VALUE = "11";
const int sobel_filter::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> sobel_filter::ap_const_lv32_A = "1010";
const sc_lv<32> sobel_filter::ap_const_lv32_1 = "1";
const sc_lv<32> sobel_filter::ap_const_lv32_3 = "11";
const sc_lv<11> sobel_filter::ap_const_lv11_0 = "00000000000";
const sc_lv<13> sobel_filter::ap_const_lv13_0 = "0000000000000";
const sc_lv<2> sobel_filter::ap_const_lv2_0 = "00";
const sc_lv<32> sobel_filter::ap_const_lv32_780 = "11110000000";
const sc_lv<3> sobel_filter::ap_const_lv3_0 = "000";
const sc_lv<4> sobel_filter::ap_const_lv4_0 = "0000";
const sc_lv<4> sobel_filter::ap_const_lv4_F = "1111";
const sc_lv<32> sobel_filter::ap_const_lv32_1F = "11111";
const sc_lv<11> sobel_filter::ap_const_lv11_438 = "10000111000";
const sc_lv<11> sobel_filter::ap_const_lv11_1 = "1";
const sc_lv<7> sobel_filter::ap_const_lv7_0 = "0000000";
const sc_lv<23> sobel_filter::ap_const_lv23_7FF100 = "11111111111000100000000";
const sc_lv<11> sobel_filter::ap_const_lv11_780 = "11110000000";
const sc_lv<13> sobel_filter::ap_const_lv13_1680 = "1011010000000";
const sc_lv<13> sobel_filter::ap_const_lv13_1 = "1";
const sc_lv<2> sobel_filter::ap_const_lv2_1 = "1";
const sc_lv<14> sobel_filter::ap_const_lv14_3100 = "11000100000000";
const sc_lv<13> sobel_filter::ap_const_lv13_780 = "11110000000";
const sc_lv<32> sobel_filter::ap_const_lv32_B = "1011";
const sc_lv<8> sobel_filter::ap_const_lv8_0 = "00000000";

sobel_filter::sobel_filter(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sobel_filter_AXILiteS_s_axi_U = new sobel_filter_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("sobel_filter_AXILiteS_s_axi_U");
    sobel_filter_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    sobel_filter_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    sobel_filter_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    sobel_filter_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    sobel_filter_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    sobel_filter_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    sobel_filter_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    sobel_filter_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    sobel_filter_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    sobel_filter_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    sobel_filter_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    sobel_filter_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    sobel_filter_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    sobel_filter_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    sobel_filter_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    sobel_filter_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    sobel_filter_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    sobel_filter_AXILiteS_s_axi_U->ACLK(ap_clk);
    sobel_filter_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    sobel_filter_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    sobel_filter_AXILiteS_s_axi_U->ap_start(ap_start);
    sobel_filter_AXILiteS_s_axi_U->interrupt(interrupt);
    sobel_filter_AXILiteS_s_axi_U->ap_ready(ap_ready);
    sobel_filter_AXILiteS_s_axi_U->ap_done(ap_done);
    sobel_filter_AXILiteS_s_axi_U->ap_idle(ap_idle);
    sobel_filter_AXILiteS_s_axi_U->inter_pix(inter_pix);
    sobel_filter_AXILiteS_s_axi_U->out_pix(out_pix);
    sobel_filter_gmem1_m_axi_U = new sobel_filter_gmem1_m_axi<32,32,5,16,16,16,16,C_M_AXI_GMEM1_ID_WIDTH,C_M_AXI_GMEM1_ADDR_WIDTH,C_M_AXI_GMEM1_DATA_WIDTH,C_M_AXI_GMEM1_AWUSER_WIDTH,C_M_AXI_GMEM1_ARUSER_WIDTH,C_M_AXI_GMEM1_WUSER_WIDTH,C_M_AXI_GMEM1_RUSER_WIDTH,C_M_AXI_GMEM1_BUSER_WIDTH,C_M_AXI_GMEM1_USER_VALUE,C_M_AXI_GMEM1_PROT_VALUE,C_M_AXI_GMEM1_CACHE_VALUE>("sobel_filter_gmem1_m_axi_U");
    sobel_filter_gmem1_m_axi_U->AWVALID(m_axi_gmem1_AWVALID);
    sobel_filter_gmem1_m_axi_U->AWREADY(m_axi_gmem1_AWREADY);
    sobel_filter_gmem1_m_axi_U->AWADDR(m_axi_gmem1_AWADDR);
    sobel_filter_gmem1_m_axi_U->AWID(m_axi_gmem1_AWID);
    sobel_filter_gmem1_m_axi_U->AWLEN(m_axi_gmem1_AWLEN);
    sobel_filter_gmem1_m_axi_U->AWSIZE(m_axi_gmem1_AWSIZE);
    sobel_filter_gmem1_m_axi_U->AWBURST(m_axi_gmem1_AWBURST);
    sobel_filter_gmem1_m_axi_U->AWLOCK(m_axi_gmem1_AWLOCK);
    sobel_filter_gmem1_m_axi_U->AWCACHE(m_axi_gmem1_AWCACHE);
    sobel_filter_gmem1_m_axi_U->AWPROT(m_axi_gmem1_AWPROT);
    sobel_filter_gmem1_m_axi_U->AWQOS(m_axi_gmem1_AWQOS);
    sobel_filter_gmem1_m_axi_U->AWREGION(m_axi_gmem1_AWREGION);
    sobel_filter_gmem1_m_axi_U->AWUSER(m_axi_gmem1_AWUSER);
    sobel_filter_gmem1_m_axi_U->WVALID(m_axi_gmem1_WVALID);
    sobel_filter_gmem1_m_axi_U->WREADY(m_axi_gmem1_WREADY);
    sobel_filter_gmem1_m_axi_U->WDATA(m_axi_gmem1_WDATA);
    sobel_filter_gmem1_m_axi_U->WSTRB(m_axi_gmem1_WSTRB);
    sobel_filter_gmem1_m_axi_U->WLAST(m_axi_gmem1_WLAST);
    sobel_filter_gmem1_m_axi_U->WID(m_axi_gmem1_WID);
    sobel_filter_gmem1_m_axi_U->WUSER(m_axi_gmem1_WUSER);
    sobel_filter_gmem1_m_axi_U->ARVALID(m_axi_gmem1_ARVALID);
    sobel_filter_gmem1_m_axi_U->ARREADY(m_axi_gmem1_ARREADY);
    sobel_filter_gmem1_m_axi_U->ARADDR(m_axi_gmem1_ARADDR);
    sobel_filter_gmem1_m_axi_U->ARID(m_axi_gmem1_ARID);
    sobel_filter_gmem1_m_axi_U->ARLEN(m_axi_gmem1_ARLEN);
    sobel_filter_gmem1_m_axi_U->ARSIZE(m_axi_gmem1_ARSIZE);
    sobel_filter_gmem1_m_axi_U->ARBURST(m_axi_gmem1_ARBURST);
    sobel_filter_gmem1_m_axi_U->ARLOCK(m_axi_gmem1_ARLOCK);
    sobel_filter_gmem1_m_axi_U->ARCACHE(m_axi_gmem1_ARCACHE);
    sobel_filter_gmem1_m_axi_U->ARPROT(m_axi_gmem1_ARPROT);
    sobel_filter_gmem1_m_axi_U->ARQOS(m_axi_gmem1_ARQOS);
    sobel_filter_gmem1_m_axi_U->ARREGION(m_axi_gmem1_ARREGION);
    sobel_filter_gmem1_m_axi_U->ARUSER(m_axi_gmem1_ARUSER);
    sobel_filter_gmem1_m_axi_U->RVALID(m_axi_gmem1_RVALID);
    sobel_filter_gmem1_m_axi_U->RREADY(m_axi_gmem1_RREADY);
    sobel_filter_gmem1_m_axi_U->RDATA(m_axi_gmem1_RDATA);
    sobel_filter_gmem1_m_axi_U->RLAST(m_axi_gmem1_RLAST);
    sobel_filter_gmem1_m_axi_U->RID(m_axi_gmem1_RID);
    sobel_filter_gmem1_m_axi_U->RUSER(m_axi_gmem1_RUSER);
    sobel_filter_gmem1_m_axi_U->RRESP(m_axi_gmem1_RRESP);
    sobel_filter_gmem1_m_axi_U->BVALID(m_axi_gmem1_BVALID);
    sobel_filter_gmem1_m_axi_U->BREADY(m_axi_gmem1_BREADY);
    sobel_filter_gmem1_m_axi_U->BRESP(m_axi_gmem1_BRESP);
    sobel_filter_gmem1_m_axi_U->BID(m_axi_gmem1_BID);
    sobel_filter_gmem1_m_axi_U->BUSER(m_axi_gmem1_BUSER);
    sobel_filter_gmem1_m_axi_U->ACLK(ap_clk);
    sobel_filter_gmem1_m_axi_U->ARESET(ap_rst_n_inv);
    sobel_filter_gmem1_m_axi_U->ACLK_EN(ap_var_for_const0);
    sobel_filter_gmem1_m_axi_U->I_ARVALID(ap_var_for_const1);
    sobel_filter_gmem1_m_axi_U->I_ARREADY(gmem1_ARREADY);
    sobel_filter_gmem1_m_axi_U->I_ARADDR(ap_var_for_const2);
    sobel_filter_gmem1_m_axi_U->I_ARID(ap_var_for_const3);
    sobel_filter_gmem1_m_axi_U->I_ARLEN(ap_var_for_const2);
    sobel_filter_gmem1_m_axi_U->I_ARSIZE(ap_var_for_const4);
    sobel_filter_gmem1_m_axi_U->I_ARLOCK(ap_var_for_const5);
    sobel_filter_gmem1_m_axi_U->I_ARCACHE(ap_var_for_const6);
    sobel_filter_gmem1_m_axi_U->I_ARQOS(ap_var_for_const6);
    sobel_filter_gmem1_m_axi_U->I_ARPROT(ap_var_for_const4);
    sobel_filter_gmem1_m_axi_U->I_ARUSER(ap_var_for_const3);
    sobel_filter_gmem1_m_axi_U->I_ARBURST(ap_var_for_const5);
    sobel_filter_gmem1_m_axi_U->I_ARREGION(ap_var_for_const6);
    sobel_filter_gmem1_m_axi_U->I_RVALID(gmem1_RVALID);
    sobel_filter_gmem1_m_axi_U->I_RREADY(ap_var_for_const1);
    sobel_filter_gmem1_m_axi_U->I_RDATA(gmem1_RDATA);
    sobel_filter_gmem1_m_axi_U->I_RID(gmem1_RID);
    sobel_filter_gmem1_m_axi_U->I_RUSER(gmem1_RUSER);
    sobel_filter_gmem1_m_axi_U->I_RRESP(gmem1_RRESP);
    sobel_filter_gmem1_m_axi_U->I_RLAST(gmem1_RLAST);
    sobel_filter_gmem1_m_axi_U->I_AWVALID(gmem1_AWVALID);
    sobel_filter_gmem1_m_axi_U->I_AWREADY(gmem1_AWREADY);
    sobel_filter_gmem1_m_axi_U->I_AWADDR(gmem1_AWADDR);
    sobel_filter_gmem1_m_axi_U->I_AWID(ap_var_for_const3);
    sobel_filter_gmem1_m_axi_U->I_AWLEN(ap_var_for_const7);
    sobel_filter_gmem1_m_axi_U->I_AWSIZE(ap_var_for_const4);
    sobel_filter_gmem1_m_axi_U->I_AWLOCK(ap_var_for_const5);
    sobel_filter_gmem1_m_axi_U->I_AWCACHE(ap_var_for_const6);
    sobel_filter_gmem1_m_axi_U->I_AWQOS(ap_var_for_const6);
    sobel_filter_gmem1_m_axi_U->I_AWPROT(ap_var_for_const4);
    sobel_filter_gmem1_m_axi_U->I_AWUSER(ap_var_for_const3);
    sobel_filter_gmem1_m_axi_U->I_AWBURST(ap_var_for_const5);
    sobel_filter_gmem1_m_axi_U->I_AWREGION(ap_var_for_const6);
    sobel_filter_gmem1_m_axi_U->I_WVALID(gmem1_WVALID);
    sobel_filter_gmem1_m_axi_U->I_WREADY(gmem1_WREADY);
    sobel_filter_gmem1_m_axi_U->I_WDATA(ap_var_for_const2);
    sobel_filter_gmem1_m_axi_U->I_WID(ap_var_for_const3);
    sobel_filter_gmem1_m_axi_U->I_WUSER(ap_var_for_const3);
    sobel_filter_gmem1_m_axi_U->I_WLAST(ap_var_for_const1);
    sobel_filter_gmem1_m_axi_U->I_WSTRB(ap_var_for_const8);
    sobel_filter_gmem1_m_axi_U->I_BVALID(gmem1_BVALID);
    sobel_filter_gmem1_m_axi_U->I_BREADY(gmem1_BREADY);
    sobel_filter_gmem1_m_axi_U->I_BRESP(gmem1_BRESP);
    sobel_filter_gmem1_m_axi_U->I_BID(gmem1_BID);
    sobel_filter_gmem1_m_axi_U->I_BUSER(gmem1_BUSER);
    sobel_filter_urembkb_U1 = new sobel_filter_urembkb<1,17,13,12,13>("sobel_filter_urembkb_U1");
    sobel_filter_urembkb_U1->clk(ap_clk);
    sobel_filter_urembkb_U1->reset(ap_rst_n_inv);
    sobel_filter_urembkb_U1->din0(ap_phi_mux_indvar_flatten_phi_fu_186_p4);
    sobel_filter_urembkb_U1->din1(grp_fu_419_p1);
    sobel_filter_urembkb_U1->ce(grp_fu_419_ce);
    sobel_filter_urembkb_U1->dout(grp_fu_419_p2);
    sobel_filter_urembkb_U2 = new sobel_filter_urembkb<1,17,13,12,13>("sobel_filter_urembkb_U2");
    sobel_filter_urembkb_U2->clk(ap_clk);
    sobel_filter_urembkb_U2->reset(ap_rst_n_inv);
    sobel_filter_urembkb_U2->din0(grp_fu_439_p0);
    sobel_filter_urembkb_U2->din1(grp_fu_439_p1);
    sobel_filter_urembkb_U2->ce(grp_fu_439_ce);
    sobel_filter_urembkb_U2->dout(grp_fu_439_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);
    sensitive << ( ap_enable_reg_pp1_iter23 );
    sensitive << ( ap_reg_pp1_iter22_tmp_13_reg_543 );
    sensitive << ( gmem1_BVALID );

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( ap_enable_reg_pp1_iter17 );
    sensitive << ( ap_enable_reg_pp1_iter18 );
    sensitive << ( ap_enable_reg_pp1_iter23 );
    sensitive << ( ap_reg_pp1_iter22_tmp_13_reg_543 );
    sensitive << ( gmem1_BVALID );
    sensitive << ( ap_block_state28_io );
    sensitive << ( ap_block_state29_io );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( ap_enable_reg_pp1_iter17 );
    sensitive << ( ap_enable_reg_pp1_iter18 );
    sensitive << ( ap_enable_reg_pp1_iter23 );
    sensitive << ( ap_reg_pp1_iter22_tmp_13_reg_543 );
    sensitive << ( gmem1_BVALID );
    sensitive << ( ap_block_state28_io );
    sensitive << ( ap_block_state29_io );

    SC_METHOD(thread_ap_block_state11_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state12_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state13_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state14_pp1_stage0_iter3);

    SC_METHOD(thread_ap_block_state15_pp1_stage0_iter4);

    SC_METHOD(thread_ap_block_state16_pp1_stage0_iter5);

    SC_METHOD(thread_ap_block_state17_pp1_stage0_iter6);

    SC_METHOD(thread_ap_block_state18_pp1_stage0_iter7);

    SC_METHOD(thread_ap_block_state19_pp1_stage0_iter8);

    SC_METHOD(thread_ap_block_state20_pp1_stage0_iter9);

    SC_METHOD(thread_ap_block_state21_pp1_stage0_iter10);

    SC_METHOD(thread_ap_block_state22_pp1_stage0_iter11);

    SC_METHOD(thread_ap_block_state23_pp1_stage0_iter12);

    SC_METHOD(thread_ap_block_state24_pp1_stage0_iter13);

    SC_METHOD(thread_ap_block_state25_pp1_stage0_iter14);

    SC_METHOD(thread_ap_block_state26_pp1_stage0_iter15);

    SC_METHOD(thread_ap_block_state27_pp1_stage0_iter16);

    SC_METHOD(thread_ap_block_state28_io);
    sensitive << ( tmp_11_reg_539 );
    sensitive << ( ap_sig_ioackin_gmem1_AWREADY );

    SC_METHOD(thread_ap_block_state28_pp1_stage0_iter17);

    SC_METHOD(thread_ap_block_state29_io);
    sensitive << ( ap_reg_pp1_iter17_exitcond_flatten_reg_508 );
    sensitive << ( ap_sig_ioackin_gmem1_WREADY );

    SC_METHOD(thread_ap_block_state29_pp1_stage0_iter18);

    SC_METHOD(thread_ap_block_state30_pp1_stage0_iter19);

    SC_METHOD(thread_ap_block_state31_pp1_stage0_iter20);

    SC_METHOD(thread_ap_block_state32_pp1_stage0_iter21);

    SC_METHOD(thread_ap_block_state33_pp1_stage0_iter22);

    SC_METHOD(thread_ap_block_state34_pp1_stage0_iter23);
    sensitive << ( ap_reg_pp1_iter22_tmp_13_reg_543 );
    sensitive << ( gmem1_BVALID );

    SC_METHOD(thread_ap_condition_582);
    sensitive << ( ap_enable_reg_pp1_iter17 );
    sensitive << ( tmp_11_reg_539 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state11);
    sensitive << ( exitcond_flatten_fu_343_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter17 );
    sensitive << ( ap_enable_reg_pp1_iter18 );
    sensitive << ( ap_enable_reg_pp1_iter23 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( ap_enable_reg_pp1_iter5 );
    sensitive << ( ap_enable_reg_pp1_iter6 );
    sensitive << ( ap_enable_reg_pp1_iter7 );
    sensitive << ( ap_enable_reg_pp1_iter8 );
    sensitive << ( ap_enable_reg_pp1_iter9 );
    sensitive << ( ap_enable_reg_pp1_iter10 );
    sensitive << ( ap_enable_reg_pp1_iter11 );
    sensitive << ( ap_enable_reg_pp1_iter12 );
    sensitive << ( ap_enable_reg_pp1_iter13 );
    sensitive << ( ap_enable_reg_pp1_iter14 );
    sensitive << ( ap_enable_reg_pp1_iter15 );
    sensitive << ( ap_enable_reg_pp1_iter16 );
    sensitive << ( ap_enable_reg_pp1_iter19 );
    sensitive << ( ap_enable_reg_pp1_iter20 );
    sensitive << ( ap_enable_reg_pp1_iter21 );
    sensitive << ( ap_enable_reg_pp1_iter22 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_186_p4);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_flatten_reg_508 );
    sensitive << ( indvar_flatten_reg_182 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( indvar_flatten_next_reg_512 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_gmem1_AWREADY);
    sensitive << ( gmem1_AWREADY );
    sensitive << ( ap_reg_ioackin_gmem1_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_gmem1_WREADY);
    sensitive << ( gmem1_WREADY );
    sensitive << ( ap_reg_ioackin_gmem1_WREADY );

    SC_METHOD(thread_exitcond_flatten_fu_343_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_186_p4 );

    SC_METHOD(thread_gmem1_AWADDR);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( gmem1_addr_reg_494 );
    sensitive << ( gmem1_addr_1_reg_533 );
    sensitive << ( ap_reg_ioackin_gmem1_AWREADY );
    sensitive << ( ap_condition_582 );

    SC_METHOD(thread_gmem1_AWVALID);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_enable_reg_pp1_iter17 );
    sensitive << ( tmp_11_reg_539 );
    sensitive << ( ap_reg_ioackin_gmem1_AWREADY );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_gmem1_BREADY);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_enable_reg_pp1_iter23 );
    sensitive << ( ap_reg_pp1_iter22_tmp_13_reg_543 );
    sensitive << ( gmem1_BVALID );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_gmem1_WVALID);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_enable_reg_pp1_iter18 );
    sensitive << ( ap_reg_pp1_iter17_exitcond_flatten_reg_508 );
    sensitive << ( ap_reg_ioackin_gmem1_WREADY );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_gmem1_blk_n_AW);
    sensitive << ( m_axi_gmem1_AWREADY );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_enable_reg_pp1_iter17 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( tmp_11_reg_539 );

    SC_METHOD(thread_gmem1_blk_n_B);
    sensitive << ( m_axi_gmem1_BVALID );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter23 );
    sensitive << ( ap_reg_pp1_iter22_tmp_13_reg_543 );

    SC_METHOD(thread_gmem1_blk_n_W);
    sensitive << ( m_axi_gmem1_WREADY );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter18 );
    sensitive << ( ap_reg_pp1_iter17_exitcond_flatten_reg_508 );

    SC_METHOD(thread_grp_fu_419_ce);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_grp_fu_419_p1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_grp_fu_439_ce);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_grp_fu_439_p0);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_186_p4 );

    SC_METHOD(thread_grp_fu_439_p1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_i2_mid2_fu_411_p3);
    sensitive << ( i2_reg_194 );
    sensitive << ( i_s_fu_361_p2 );
    sensitive << ( tmp_3_fu_355_p2 );

    SC_METHOD(thread_i_1_fu_236_p2);
    sensitive << ( i_reg_160 );

    SC_METHOD(thread_i_s_fu_361_p2);
    sensitive << ( i2_reg_194 );

    SC_METHOD(thread_indvar_flatten_next_fu_349_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_186_p4 );

    SC_METHOD(thread_j3_op_fu_425_p2);
    sensitive << ( j3_reg_205 );

    SC_METHOD(thread_j_1_fu_307_p2);
    sensitive << ( j_reg_171 );

    SC_METHOD(thread_j_2_fu_431_p3);
    sensitive << ( tmp_3_fu_355_p2 );
    sensitive << ( j3_op_fu_425_p2 );

    SC_METHOD(thread_m_axi_gmem0_ARADDR);

    SC_METHOD(thread_m_axi_gmem0_ARBURST);

    SC_METHOD(thread_m_axi_gmem0_ARCACHE);

    SC_METHOD(thread_m_axi_gmem0_ARID);

    SC_METHOD(thread_m_axi_gmem0_ARLEN);

    SC_METHOD(thread_m_axi_gmem0_ARLOCK);

    SC_METHOD(thread_m_axi_gmem0_ARPROT);

    SC_METHOD(thread_m_axi_gmem0_ARQOS);

    SC_METHOD(thread_m_axi_gmem0_ARREGION);

    SC_METHOD(thread_m_axi_gmem0_ARSIZE);

    SC_METHOD(thread_m_axi_gmem0_ARUSER);

    SC_METHOD(thread_m_axi_gmem0_ARVALID);

    SC_METHOD(thread_m_axi_gmem0_AWADDR);

    SC_METHOD(thread_m_axi_gmem0_AWBURST);

    SC_METHOD(thread_m_axi_gmem0_AWCACHE);

    SC_METHOD(thread_m_axi_gmem0_AWID);

    SC_METHOD(thread_m_axi_gmem0_AWLEN);

    SC_METHOD(thread_m_axi_gmem0_AWLOCK);

    SC_METHOD(thread_m_axi_gmem0_AWPROT);

    SC_METHOD(thread_m_axi_gmem0_AWQOS);

    SC_METHOD(thread_m_axi_gmem0_AWREGION);

    SC_METHOD(thread_m_axi_gmem0_AWSIZE);

    SC_METHOD(thread_m_axi_gmem0_AWUSER);

    SC_METHOD(thread_m_axi_gmem0_AWVALID);

    SC_METHOD(thread_m_axi_gmem0_BREADY);

    SC_METHOD(thread_m_axi_gmem0_RREADY);

    SC_METHOD(thread_m_axi_gmem0_WDATA);

    SC_METHOD(thread_m_axi_gmem0_WID);

    SC_METHOD(thread_m_axi_gmem0_WLAST);

    SC_METHOD(thread_m_axi_gmem0_WSTRB);

    SC_METHOD(thread_m_axi_gmem0_WUSER);

    SC_METHOD(thread_m_axi_gmem0_WVALID);

    SC_METHOD(thread_out_pix4_sum7_cast_fu_457_p1);
    sensitive << ( out_pix4_sum7_fu_452_p2 );

    SC_METHOD(thread_out_pix4_sum7_fu_452_p2);
    sensitive << ( tmp_3_cast_reg_479 );
    sensitive << ( tmp_25_mid2_cast_fu_448_p1 );

    SC_METHOD(thread_out_pix4_sum_cast_fu_291_p1);
    sensitive << ( out_pix4_sum_fu_286_p2 );

    SC_METHOD(thread_out_pix4_sum_fu_286_p2);
    sensitive << ( tmp_3_cast_reg_479 );
    sensitive << ( tmp_8_cast_fu_282_p1 );

    SC_METHOD(thread_p_shl1_cast_fu_250_p1);
    sensitive << ( p_shl1_fu_242_p3 );

    SC_METHOD(thread_p_shl1_fu_242_p3);
    sensitive << ( i_reg_160 );

    SC_METHOD(thread_p_shl2_cast_fu_262_p1);
    sensitive << ( p_shl2_fu_254_p3 );

    SC_METHOD(thread_p_shl2_fu_254_p3);
    sensitive << ( i_reg_160 );

    SC_METHOD(thread_p_shl3_cast_fu_333_p1);
    sensitive << ( p_shl3_fu_325_p3 );

    SC_METHOD(thread_p_shl3_cast_mid1_fu_387_p1);
    sensitive << ( p_shl3_mid1_fu_379_p3 );

    SC_METHOD(thread_p_shl3_fu_325_p3);
    sensitive << ( i2_reg_194 );

    SC_METHOD(thread_p_shl3_mid1_fu_379_p3);
    sensitive << ( i_s_fu_361_p2 );

    SC_METHOD(thread_p_shl_cast_fu_321_p1);
    sensitive << ( p_shl_fu_313_p3 );

    SC_METHOD(thread_p_shl_cast_mid1_fu_375_p1);
    sensitive << ( p_shl_mid1_fu_367_p3 );

    SC_METHOD(thread_p_shl_fu_313_p3);
    sensitive << ( i2_reg_194 );

    SC_METHOD(thread_p_shl_mid1_fu_367_p3);
    sensitive << ( i_s_fu_361_p2 );

    SC_METHOD(thread_tmp_11_fu_467_p2);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_reg_pp1_iter15_exitcond_flatten_reg_508 );
    sensitive << ( ap_enable_reg_pp1_iter16 );
    sensitive << ( grp_fu_419_p2 );

    SC_METHOD(thread_tmp_13_fu_473_p2);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_reg_pp1_iter15_exitcond_flatten_reg_508 );
    sensitive << ( ap_enable_reg_pp1_iter16 );
    sensitive << ( grp_fu_439_p2 );

    SC_METHOD(thread_tmp_1_fu_230_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_160 );

    SC_METHOD(thread_tmp_25_mid2_cast_fu_448_p1);
    sensitive << ( tmp_25_mid2_v_fu_445_p1 );

    SC_METHOD(thread_tmp_25_mid2_v_fu_445_p1);
    sensitive << ( ap_reg_pp1_iter15_tmp_25_mid2_v_v_reg_518 );

    SC_METHOD(thread_tmp_25_mid2_v_v_fu_405_p2);
    sensitive << ( tmp_7_mid2_fu_397_p3 );

    SC_METHOD(thread_tmp_2_fu_266_p2);
    sensitive << ( p_shl1_cast_fu_250_p1 );
    sensitive << ( p_shl2_cast_fu_262_p1 );

    SC_METHOD(thread_tmp_3_cast_fu_226_p1);
    sensitive << ( tmp_fu_216_p4 );

    SC_METHOD(thread_tmp_3_fu_355_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( j3_reg_205 );
    sensitive << ( exitcond_flatten_fu_343_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_tmp_4_fu_272_p2);
    sensitive << ( tmp_2_fu_266_p2 );

    SC_METHOD(thread_tmp_5_fu_301_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_reg_171 );

    SC_METHOD(thread_tmp_6_fu_278_p1);
    sensitive << ( tmp_4_fu_272_p2 );

    SC_METHOD(thread_tmp_7_fu_337_p2);
    sensitive << ( p_shl_cast_fu_321_p1 );
    sensitive << ( p_shl3_cast_fu_333_p1 );

    SC_METHOD(thread_tmp_7_mid1_fu_391_p2);
    sensitive << ( p_shl_cast_mid1_fu_375_p1 );
    sensitive << ( p_shl3_cast_mid1_fu_387_p1 );

    SC_METHOD(thread_tmp_7_mid2_fu_397_p3);
    sensitive << ( tmp_3_fu_355_p2 );
    sensitive << ( tmp_7_mid1_fu_391_p2 );
    sensitive << ( tmp_7_fu_337_p2 );

    SC_METHOD(thread_tmp_8_cast_fu_282_p1);
    sensitive << ( tmp_6_fu_278_p1 );

    SC_METHOD(thread_tmp_fu_216_p4);
    sensitive << ( out_pix );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_enable_reg_pp1_iter23 );
    sensitive << ( gmem1_BVALID );
    sensitive << ( ap_sig_ioackin_gmem1_AWREADY );
    sensitive << ( ap_sig_ioackin_gmem1_WREADY );
    sensitive << ( tmp_1_fu_230_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_flatten_fu_343_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter22 );
    sensitive << ( tmp_5_fu_301_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const8);

    ap_CS_fsm = "000000000001";
    ap_enable_reg_pp1_iter17 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter18 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter23 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter16 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter19 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter20 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter21 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter22 = SC_LOGIC_0;
    ap_reg_ioackin_gmem1_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_gmem1_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sobel_filter_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_gmem0_AWVALID, "(port)m_axi_gmem0_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem0_AWREADY, "(port)m_axi_gmem0_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem0_AWADDR, "(port)m_axi_gmem0_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem0_AWID, "(port)m_axi_gmem0_AWID");
    sc_trace(mVcdFile, m_axi_gmem0_AWLEN, "(port)m_axi_gmem0_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem0_AWSIZE, "(port)m_axi_gmem0_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem0_AWBURST, "(port)m_axi_gmem0_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem0_AWLOCK, "(port)m_axi_gmem0_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem0_AWCACHE, "(port)m_axi_gmem0_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem0_AWPROT, "(port)m_axi_gmem0_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem0_AWQOS, "(port)m_axi_gmem0_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem0_AWREGION, "(port)m_axi_gmem0_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem0_AWUSER, "(port)m_axi_gmem0_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem0_WVALID, "(port)m_axi_gmem0_WVALID");
    sc_trace(mVcdFile, m_axi_gmem0_WREADY, "(port)m_axi_gmem0_WREADY");
    sc_trace(mVcdFile, m_axi_gmem0_WDATA, "(port)m_axi_gmem0_WDATA");
    sc_trace(mVcdFile, m_axi_gmem0_WSTRB, "(port)m_axi_gmem0_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem0_WLAST, "(port)m_axi_gmem0_WLAST");
    sc_trace(mVcdFile, m_axi_gmem0_WID, "(port)m_axi_gmem0_WID");
    sc_trace(mVcdFile, m_axi_gmem0_WUSER, "(port)m_axi_gmem0_WUSER");
    sc_trace(mVcdFile, m_axi_gmem0_ARVALID, "(port)m_axi_gmem0_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem0_ARREADY, "(port)m_axi_gmem0_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem0_ARADDR, "(port)m_axi_gmem0_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem0_ARID, "(port)m_axi_gmem0_ARID");
    sc_trace(mVcdFile, m_axi_gmem0_ARLEN, "(port)m_axi_gmem0_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem0_ARSIZE, "(port)m_axi_gmem0_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem0_ARBURST, "(port)m_axi_gmem0_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem0_ARLOCK, "(port)m_axi_gmem0_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem0_ARCACHE, "(port)m_axi_gmem0_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem0_ARPROT, "(port)m_axi_gmem0_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem0_ARQOS, "(port)m_axi_gmem0_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem0_ARREGION, "(port)m_axi_gmem0_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem0_ARUSER, "(port)m_axi_gmem0_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem0_RVALID, "(port)m_axi_gmem0_RVALID");
    sc_trace(mVcdFile, m_axi_gmem0_RREADY, "(port)m_axi_gmem0_RREADY");
    sc_trace(mVcdFile, m_axi_gmem0_RDATA, "(port)m_axi_gmem0_RDATA");
    sc_trace(mVcdFile, m_axi_gmem0_RLAST, "(port)m_axi_gmem0_RLAST");
    sc_trace(mVcdFile, m_axi_gmem0_RID, "(port)m_axi_gmem0_RID");
    sc_trace(mVcdFile, m_axi_gmem0_RUSER, "(port)m_axi_gmem0_RUSER");
    sc_trace(mVcdFile, m_axi_gmem0_RRESP, "(port)m_axi_gmem0_RRESP");
    sc_trace(mVcdFile, m_axi_gmem0_BVALID, "(port)m_axi_gmem0_BVALID");
    sc_trace(mVcdFile, m_axi_gmem0_BREADY, "(port)m_axi_gmem0_BREADY");
    sc_trace(mVcdFile, m_axi_gmem0_BRESP, "(port)m_axi_gmem0_BRESP");
    sc_trace(mVcdFile, m_axi_gmem0_BID, "(port)m_axi_gmem0_BID");
    sc_trace(mVcdFile, m_axi_gmem0_BUSER, "(port)m_axi_gmem0_BUSER");
    sc_trace(mVcdFile, m_axi_gmem1_AWVALID, "(port)m_axi_gmem1_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem1_AWREADY, "(port)m_axi_gmem1_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem1_AWADDR, "(port)m_axi_gmem1_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem1_AWID, "(port)m_axi_gmem1_AWID");
    sc_trace(mVcdFile, m_axi_gmem1_AWLEN, "(port)m_axi_gmem1_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem1_AWSIZE, "(port)m_axi_gmem1_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem1_AWBURST, "(port)m_axi_gmem1_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem1_AWLOCK, "(port)m_axi_gmem1_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem1_AWCACHE, "(port)m_axi_gmem1_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem1_AWPROT, "(port)m_axi_gmem1_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem1_AWQOS, "(port)m_axi_gmem1_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem1_AWREGION, "(port)m_axi_gmem1_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem1_AWUSER, "(port)m_axi_gmem1_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem1_WVALID, "(port)m_axi_gmem1_WVALID");
    sc_trace(mVcdFile, m_axi_gmem1_WREADY, "(port)m_axi_gmem1_WREADY");
    sc_trace(mVcdFile, m_axi_gmem1_WDATA, "(port)m_axi_gmem1_WDATA");
    sc_trace(mVcdFile, m_axi_gmem1_WSTRB, "(port)m_axi_gmem1_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem1_WLAST, "(port)m_axi_gmem1_WLAST");
    sc_trace(mVcdFile, m_axi_gmem1_WID, "(port)m_axi_gmem1_WID");
    sc_trace(mVcdFile, m_axi_gmem1_WUSER, "(port)m_axi_gmem1_WUSER");
    sc_trace(mVcdFile, m_axi_gmem1_ARVALID, "(port)m_axi_gmem1_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem1_ARREADY, "(port)m_axi_gmem1_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem1_ARADDR, "(port)m_axi_gmem1_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem1_ARID, "(port)m_axi_gmem1_ARID");
    sc_trace(mVcdFile, m_axi_gmem1_ARLEN, "(port)m_axi_gmem1_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem1_ARSIZE, "(port)m_axi_gmem1_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem1_ARBURST, "(port)m_axi_gmem1_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem1_ARLOCK, "(port)m_axi_gmem1_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem1_ARCACHE, "(port)m_axi_gmem1_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem1_ARPROT, "(port)m_axi_gmem1_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem1_ARQOS, "(port)m_axi_gmem1_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem1_ARREGION, "(port)m_axi_gmem1_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem1_ARUSER, "(port)m_axi_gmem1_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem1_RVALID, "(port)m_axi_gmem1_RVALID");
    sc_trace(mVcdFile, m_axi_gmem1_RREADY, "(port)m_axi_gmem1_RREADY");
    sc_trace(mVcdFile, m_axi_gmem1_RDATA, "(port)m_axi_gmem1_RDATA");
    sc_trace(mVcdFile, m_axi_gmem1_RLAST, "(port)m_axi_gmem1_RLAST");
    sc_trace(mVcdFile, m_axi_gmem1_RID, "(port)m_axi_gmem1_RID");
    sc_trace(mVcdFile, m_axi_gmem1_RUSER, "(port)m_axi_gmem1_RUSER");
    sc_trace(mVcdFile, m_axi_gmem1_RRESP, "(port)m_axi_gmem1_RRESP");
    sc_trace(mVcdFile, m_axi_gmem1_BVALID, "(port)m_axi_gmem1_BVALID");
    sc_trace(mVcdFile, m_axi_gmem1_BREADY, "(port)m_axi_gmem1_BREADY");
    sc_trace(mVcdFile, m_axi_gmem1_BRESP, "(port)m_axi_gmem1_BRESP");
    sc_trace(mVcdFile, m_axi_gmem1_BID, "(port)m_axi_gmem1_BID");
    sc_trace(mVcdFile, m_axi_gmem1_BUSER, "(port)m_axi_gmem1_BUSER");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, inter_pix, "inter_pix");
    sc_trace(mVcdFile, out_pix, "out_pix");
    sc_trace(mVcdFile, gmem1_blk_n_AW, "gmem1_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, gmem1_blk_n_W, "gmem1_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, gmem1_blk_n_B, "gmem1_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter17, "ap_enable_reg_pp1_iter17");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, tmp_11_reg_539, "tmp_11_reg_539");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter18, "ap_enable_reg_pp1_iter18");
    sc_trace(mVcdFile, exitcond_flatten_reg_508, "exitcond_flatten_reg_508");
    sc_trace(mVcdFile, ap_reg_pp1_iter17_exitcond_flatten_reg_508, "ap_reg_pp1_iter17_exitcond_flatten_reg_508");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter23, "ap_enable_reg_pp1_iter23");
    sc_trace(mVcdFile, tmp_13_reg_543, "tmp_13_reg_543");
    sc_trace(mVcdFile, ap_reg_pp1_iter22_tmp_13_reg_543, "ap_reg_pp1_iter22_tmp_13_reg_543");
    sc_trace(mVcdFile, gmem1_AWVALID, "gmem1_AWVALID");
    sc_trace(mVcdFile, gmem1_AWREADY, "gmem1_AWREADY");
    sc_trace(mVcdFile, gmem1_AWADDR, "gmem1_AWADDR");
    sc_trace(mVcdFile, gmem1_WVALID, "gmem1_WVALID");
    sc_trace(mVcdFile, gmem1_WREADY, "gmem1_WREADY");
    sc_trace(mVcdFile, gmem1_ARREADY, "gmem1_ARREADY");
    sc_trace(mVcdFile, gmem1_RVALID, "gmem1_RVALID");
    sc_trace(mVcdFile, gmem1_RDATA, "gmem1_RDATA");
    sc_trace(mVcdFile, gmem1_RLAST, "gmem1_RLAST");
    sc_trace(mVcdFile, gmem1_RID, "gmem1_RID");
    sc_trace(mVcdFile, gmem1_RUSER, "gmem1_RUSER");
    sc_trace(mVcdFile, gmem1_RRESP, "gmem1_RRESP");
    sc_trace(mVcdFile, gmem1_BVALID, "gmem1_BVALID");
    sc_trace(mVcdFile, gmem1_BREADY, "gmem1_BREADY");
    sc_trace(mVcdFile, gmem1_BRESP, "gmem1_BRESP");
    sc_trace(mVcdFile, gmem1_BID, "gmem1_BID");
    sc_trace(mVcdFile, gmem1_BUSER, "gmem1_BUSER");
    sc_trace(mVcdFile, indvar_flatten_reg_182, "indvar_flatten_reg_182");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state11_pp1_stage0_iter0, "ap_block_state11_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state12_pp1_stage0_iter1, "ap_block_state12_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state13_pp1_stage0_iter2, "ap_block_state13_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state14_pp1_stage0_iter3, "ap_block_state14_pp1_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state15_pp1_stage0_iter4, "ap_block_state15_pp1_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state16_pp1_stage0_iter5, "ap_block_state16_pp1_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state17_pp1_stage0_iter6, "ap_block_state17_pp1_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state18_pp1_stage0_iter7, "ap_block_state18_pp1_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state19_pp1_stage0_iter8, "ap_block_state19_pp1_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state20_pp1_stage0_iter9, "ap_block_state20_pp1_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state21_pp1_stage0_iter10, "ap_block_state21_pp1_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state22_pp1_stage0_iter11, "ap_block_state22_pp1_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state23_pp1_stage0_iter12, "ap_block_state23_pp1_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state24_pp1_stage0_iter13, "ap_block_state24_pp1_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state25_pp1_stage0_iter14, "ap_block_state25_pp1_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state26_pp1_stage0_iter15, "ap_block_state26_pp1_stage0_iter15");
    sc_trace(mVcdFile, ap_block_state27_pp1_stage0_iter16, "ap_block_state27_pp1_stage0_iter16");
    sc_trace(mVcdFile, ap_block_state28_pp1_stage0_iter17, "ap_block_state28_pp1_stage0_iter17");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem1_AWREADY, "ap_sig_ioackin_gmem1_AWREADY");
    sc_trace(mVcdFile, ap_block_state28_io, "ap_block_state28_io");
    sc_trace(mVcdFile, ap_block_state29_pp1_stage0_iter18, "ap_block_state29_pp1_stage0_iter18");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem1_WREADY, "ap_sig_ioackin_gmem1_WREADY");
    sc_trace(mVcdFile, ap_block_state29_io, "ap_block_state29_io");
    sc_trace(mVcdFile, ap_block_state30_pp1_stage0_iter19, "ap_block_state30_pp1_stage0_iter19");
    sc_trace(mVcdFile, ap_block_state31_pp1_stage0_iter20, "ap_block_state31_pp1_stage0_iter20");
    sc_trace(mVcdFile, ap_block_state32_pp1_stage0_iter21, "ap_block_state32_pp1_stage0_iter21");
    sc_trace(mVcdFile, ap_block_state33_pp1_stage0_iter22, "ap_block_state33_pp1_stage0_iter22");
    sc_trace(mVcdFile, ap_block_state34_pp1_stage0_iter23, "ap_block_state34_pp1_stage0_iter23");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, i2_reg_194, "i2_reg_194");
    sc_trace(mVcdFile, j3_reg_205, "j3_reg_205");
    sc_trace(mVcdFile, tmp_3_cast_fu_226_p1, "tmp_3_cast_fu_226_p1");
    sc_trace(mVcdFile, tmp_3_cast_reg_479, "tmp_3_cast_reg_479");
    sc_trace(mVcdFile, tmp_1_fu_230_p2, "tmp_1_fu_230_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_1_fu_236_p2, "i_1_fu_236_p2");
    sc_trace(mVcdFile, i_1_reg_489, "i_1_reg_489");
    sc_trace(mVcdFile, gmem1_addr_reg_494, "gmem1_addr_reg_494");
    sc_trace(mVcdFile, j_1_fu_307_p2, "j_1_fu_307_p2");
    sc_trace(mVcdFile, j_1_reg_503, "j_1_reg_503");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond_flatten_fu_343_p2, "exitcond_flatten_fu_343_p2");
    sc_trace(mVcdFile, ap_reg_pp1_iter1_exitcond_flatten_reg_508, "ap_reg_pp1_iter1_exitcond_flatten_reg_508");
    sc_trace(mVcdFile, ap_reg_pp1_iter2_exitcond_flatten_reg_508, "ap_reg_pp1_iter2_exitcond_flatten_reg_508");
    sc_trace(mVcdFile, ap_reg_pp1_iter3_exitcond_flatten_reg_508, "ap_reg_pp1_iter3_exitcond_flatten_reg_508");
    sc_trace(mVcdFile, ap_reg_pp1_iter4_exitcond_flatten_reg_508, "ap_reg_pp1_iter4_exitcond_flatten_reg_508");
    sc_trace(mVcdFile, ap_reg_pp1_iter5_exitcond_flatten_reg_508, "ap_reg_pp1_iter5_exitcond_flatten_reg_508");
    sc_trace(mVcdFile, ap_reg_pp1_iter6_exitcond_flatten_reg_508, "ap_reg_pp1_iter6_exitcond_flatten_reg_508");
    sc_trace(mVcdFile, ap_reg_pp1_iter7_exitcond_flatten_reg_508, "ap_reg_pp1_iter7_exitcond_flatten_reg_508");
    sc_trace(mVcdFile, ap_reg_pp1_iter8_exitcond_flatten_reg_508, "ap_reg_pp1_iter8_exitcond_flatten_reg_508");
    sc_trace(mVcdFile, ap_reg_pp1_iter9_exitcond_flatten_reg_508, "ap_reg_pp1_iter9_exitcond_flatten_reg_508");
    sc_trace(mVcdFile, ap_reg_pp1_iter10_exitcond_flatten_reg_508, "ap_reg_pp1_iter10_exitcond_flatten_reg_508");
    sc_trace(mVcdFile, ap_reg_pp1_iter11_exitcond_flatten_reg_508, "ap_reg_pp1_iter11_exitcond_flatten_reg_508");
    sc_trace(mVcdFile, ap_reg_pp1_iter12_exitcond_flatten_reg_508, "ap_reg_pp1_iter12_exitcond_flatten_reg_508");
    sc_trace(mVcdFile, ap_reg_pp1_iter13_exitcond_flatten_reg_508, "ap_reg_pp1_iter13_exitcond_flatten_reg_508");
    sc_trace(mVcdFile, ap_reg_pp1_iter14_exitcond_flatten_reg_508, "ap_reg_pp1_iter14_exitcond_flatten_reg_508");
    sc_trace(mVcdFile, ap_reg_pp1_iter15_exitcond_flatten_reg_508, "ap_reg_pp1_iter15_exitcond_flatten_reg_508");
    sc_trace(mVcdFile, ap_reg_pp1_iter16_exitcond_flatten_reg_508, "ap_reg_pp1_iter16_exitcond_flatten_reg_508");
    sc_trace(mVcdFile, indvar_flatten_next_fu_349_p2, "indvar_flatten_next_fu_349_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_512, "indvar_flatten_next_reg_512");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, tmp_25_mid2_v_v_fu_405_p2, "tmp_25_mid2_v_v_fu_405_p2");
    sc_trace(mVcdFile, tmp_25_mid2_v_v_reg_518, "tmp_25_mid2_v_v_reg_518");
    sc_trace(mVcdFile, ap_reg_pp1_iter1_tmp_25_mid2_v_v_reg_518, "ap_reg_pp1_iter1_tmp_25_mid2_v_v_reg_518");
    sc_trace(mVcdFile, ap_reg_pp1_iter2_tmp_25_mid2_v_v_reg_518, "ap_reg_pp1_iter2_tmp_25_mid2_v_v_reg_518");
    sc_trace(mVcdFile, ap_reg_pp1_iter3_tmp_25_mid2_v_v_reg_518, "ap_reg_pp1_iter3_tmp_25_mid2_v_v_reg_518");
    sc_trace(mVcdFile, ap_reg_pp1_iter4_tmp_25_mid2_v_v_reg_518, "ap_reg_pp1_iter4_tmp_25_mid2_v_v_reg_518");
    sc_trace(mVcdFile, ap_reg_pp1_iter5_tmp_25_mid2_v_v_reg_518, "ap_reg_pp1_iter5_tmp_25_mid2_v_v_reg_518");
    sc_trace(mVcdFile, ap_reg_pp1_iter6_tmp_25_mid2_v_v_reg_518, "ap_reg_pp1_iter6_tmp_25_mid2_v_v_reg_518");
    sc_trace(mVcdFile, ap_reg_pp1_iter7_tmp_25_mid2_v_v_reg_518, "ap_reg_pp1_iter7_tmp_25_mid2_v_v_reg_518");
    sc_trace(mVcdFile, ap_reg_pp1_iter8_tmp_25_mid2_v_v_reg_518, "ap_reg_pp1_iter8_tmp_25_mid2_v_v_reg_518");
    sc_trace(mVcdFile, ap_reg_pp1_iter9_tmp_25_mid2_v_v_reg_518, "ap_reg_pp1_iter9_tmp_25_mid2_v_v_reg_518");
    sc_trace(mVcdFile, ap_reg_pp1_iter10_tmp_25_mid2_v_v_reg_518, "ap_reg_pp1_iter10_tmp_25_mid2_v_v_reg_518");
    sc_trace(mVcdFile, ap_reg_pp1_iter11_tmp_25_mid2_v_v_reg_518, "ap_reg_pp1_iter11_tmp_25_mid2_v_v_reg_518");
    sc_trace(mVcdFile, ap_reg_pp1_iter12_tmp_25_mid2_v_v_reg_518, "ap_reg_pp1_iter12_tmp_25_mid2_v_v_reg_518");
    sc_trace(mVcdFile, ap_reg_pp1_iter13_tmp_25_mid2_v_v_reg_518, "ap_reg_pp1_iter13_tmp_25_mid2_v_v_reg_518");
    sc_trace(mVcdFile, ap_reg_pp1_iter14_tmp_25_mid2_v_v_reg_518, "ap_reg_pp1_iter14_tmp_25_mid2_v_v_reg_518");
    sc_trace(mVcdFile, ap_reg_pp1_iter15_tmp_25_mid2_v_v_reg_518, "ap_reg_pp1_iter15_tmp_25_mid2_v_v_reg_518");
    sc_trace(mVcdFile, i2_mid2_fu_411_p3, "i2_mid2_fu_411_p3");
    sc_trace(mVcdFile, j_2_fu_431_p3, "j_2_fu_431_p3");
    sc_trace(mVcdFile, gmem1_addr_1_reg_533, "gmem1_addr_1_reg_533");
    sc_trace(mVcdFile, tmp_11_fu_467_p2, "tmp_11_fu_467_p2");
    sc_trace(mVcdFile, tmp_13_fu_473_p2, "tmp_13_fu_473_p2");
    sc_trace(mVcdFile, ap_reg_pp1_iter17_tmp_13_reg_543, "ap_reg_pp1_iter17_tmp_13_reg_543");
    sc_trace(mVcdFile, ap_reg_pp1_iter18_tmp_13_reg_543, "ap_reg_pp1_iter18_tmp_13_reg_543");
    sc_trace(mVcdFile, ap_reg_pp1_iter19_tmp_13_reg_543, "ap_reg_pp1_iter19_tmp_13_reg_543");
    sc_trace(mVcdFile, ap_reg_pp1_iter20_tmp_13_reg_543, "ap_reg_pp1_iter20_tmp_13_reg_543");
    sc_trace(mVcdFile, ap_reg_pp1_iter21_tmp_13_reg_543, "ap_reg_pp1_iter21_tmp_13_reg_543");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state11, "ap_condition_pp1_exit_iter0_state11");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter3, "ap_enable_reg_pp1_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter4, "ap_enable_reg_pp1_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter5, "ap_enable_reg_pp1_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter6, "ap_enable_reg_pp1_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter7, "ap_enable_reg_pp1_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter8, "ap_enable_reg_pp1_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter9, "ap_enable_reg_pp1_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter10, "ap_enable_reg_pp1_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter11, "ap_enable_reg_pp1_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter12, "ap_enable_reg_pp1_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter13, "ap_enable_reg_pp1_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter14, "ap_enable_reg_pp1_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter15, "ap_enable_reg_pp1_iter15");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter16, "ap_enable_reg_pp1_iter16");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter19, "ap_enable_reg_pp1_iter19");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter20, "ap_enable_reg_pp1_iter20");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter21, "ap_enable_reg_pp1_iter21");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter22, "ap_enable_reg_pp1_iter22");
    sc_trace(mVcdFile, i_reg_160, "i_reg_160");
    sc_trace(mVcdFile, j_reg_171, "j_reg_171");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_186_p4, "ap_phi_mux_indvar_flatten_phi_fu_186_p4");
    sc_trace(mVcdFile, out_pix4_sum_cast_fu_291_p1, "out_pix4_sum_cast_fu_291_p1");
    sc_trace(mVcdFile, out_pix4_sum7_cast_fu_457_p1, "out_pix4_sum7_cast_fu_457_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem1_AWREADY, "ap_reg_ioackin_gmem1_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem1_WREADY, "ap_reg_ioackin_gmem1_WREADY");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, tmp_fu_216_p4, "tmp_fu_216_p4");
    sc_trace(mVcdFile, p_shl1_fu_242_p3, "p_shl1_fu_242_p3");
    sc_trace(mVcdFile, p_shl2_fu_254_p3, "p_shl2_fu_254_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_250_p1, "p_shl1_cast_fu_250_p1");
    sc_trace(mVcdFile, p_shl2_cast_fu_262_p1, "p_shl2_cast_fu_262_p1");
    sc_trace(mVcdFile, tmp_2_fu_266_p2, "tmp_2_fu_266_p2");
    sc_trace(mVcdFile, tmp_4_fu_272_p2, "tmp_4_fu_272_p2");
    sc_trace(mVcdFile, tmp_6_fu_278_p1, "tmp_6_fu_278_p1");
    sc_trace(mVcdFile, tmp_8_cast_fu_282_p1, "tmp_8_cast_fu_282_p1");
    sc_trace(mVcdFile, out_pix4_sum_fu_286_p2, "out_pix4_sum_fu_286_p2");
    sc_trace(mVcdFile, p_shl_fu_313_p3, "p_shl_fu_313_p3");
    sc_trace(mVcdFile, p_shl3_fu_325_p3, "p_shl3_fu_325_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_321_p1, "p_shl_cast_fu_321_p1");
    sc_trace(mVcdFile, p_shl3_cast_fu_333_p1, "p_shl3_cast_fu_333_p1");
    sc_trace(mVcdFile, i_s_fu_361_p2, "i_s_fu_361_p2");
    sc_trace(mVcdFile, p_shl_mid1_fu_367_p3, "p_shl_mid1_fu_367_p3");
    sc_trace(mVcdFile, p_shl3_mid1_fu_379_p3, "p_shl3_mid1_fu_379_p3");
    sc_trace(mVcdFile, p_shl_cast_mid1_fu_375_p1, "p_shl_cast_mid1_fu_375_p1");
    sc_trace(mVcdFile, p_shl3_cast_mid1_fu_387_p1, "p_shl3_cast_mid1_fu_387_p1");
    sc_trace(mVcdFile, tmp_3_fu_355_p2, "tmp_3_fu_355_p2");
    sc_trace(mVcdFile, tmp_7_mid1_fu_391_p2, "tmp_7_mid1_fu_391_p2");
    sc_trace(mVcdFile, tmp_7_fu_337_p2, "tmp_7_fu_337_p2");
    sc_trace(mVcdFile, tmp_7_mid2_fu_397_p3, "tmp_7_mid2_fu_397_p3");
    sc_trace(mVcdFile, grp_fu_419_p1, "grp_fu_419_p1");
    sc_trace(mVcdFile, j3_op_fu_425_p2, "j3_op_fu_425_p2");
    sc_trace(mVcdFile, grp_fu_439_p0, "grp_fu_439_p0");
    sc_trace(mVcdFile, grp_fu_439_p1, "grp_fu_439_p1");
    sc_trace(mVcdFile, tmp_25_mid2_v_fu_445_p1, "tmp_25_mid2_v_fu_445_p1");
    sc_trace(mVcdFile, tmp_25_mid2_cast_fu_448_p1, "tmp_25_mid2_cast_fu_448_p1");
    sc_trace(mVcdFile, out_pix4_sum7_fu_452_p2, "out_pix4_sum7_fu_452_p2");
    sc_trace(mVcdFile, grp_fu_419_p2, "grp_fu_419_p2");
    sc_trace(mVcdFile, grp_fu_439_p2, "grp_fu_439_p2");
    sc_trace(mVcdFile, tmp_5_fu_301_p2, "tmp_5_fu_301_p2");
    sc_trace(mVcdFile, grp_fu_419_ce, "grp_fu_419_ce");
    sc_trace(mVcdFile, grp_fu_439_ce, "grp_fu_439_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_condition_582, "ap_condition_582");
#endif

    }
    mHdltvinHandle.open("sobel_filter.hdltvin.dat");
    mHdltvoutHandle.open("sobel_filter.hdltvout.dat");
}

sobel_filter::~sobel_filter() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete sobel_filter_AXILiteS_s_axi_U;
    delete sobel_filter_gmem1_m_axi_U;
    delete sobel_filter_urembkb_U1;
    delete sobel_filter_urembkb_U2;
}

void sobel_filter::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void sobel_filter::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_0;
}

void sobel_filter::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_0;
}

void sobel_filter::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv1_0;
}

void sobel_filter::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv2_0;
}

void sobel_filter::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv32_780;
}

void sobel_filter::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv3_0;
}

void sobel_filter::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv4_0;
}

void sobel_filter::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv4_F;
}

void sobel_filter::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state11.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_230_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state11.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state11.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter10 = ap_enable_reg_pp1_iter9.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter11 = ap_enable_reg_pp1_iter10.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter12 = ap_enable_reg_pp1_iter11.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter13 = ap_enable_reg_pp1_iter12.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter14 = ap_enable_reg_pp1_iter13.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter15 = ap_enable_reg_pp1_iter14.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter16 = ap_enable_reg_pp1_iter15.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter17 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter17 = ap_enable_reg_pp1_iter16.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter18 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter18 = ap_enable_reg_pp1_iter17.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter19 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter19 = ap_enable_reg_pp1_iter18.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter20 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter20 = ap_enable_reg_pp1_iter19.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter21 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter21 = ap_enable_reg_pp1_iter20.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter22 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter22 = ap_enable_reg_pp1_iter21.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter23 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter23 = ap_enable_reg_pp1_iter22.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_230_p2.read()))) {
            ap_enable_reg_pp1_iter23 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter3 = ap_enable_reg_pp1_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter4 = ap_enable_reg_pp1_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter5 = ap_enable_reg_pp1_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter6 = ap_enable_reg_pp1_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter7 = ap_enable_reg_pp1_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter8 = ap_enable_reg_pp1_iter7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter9 = ap_enable_reg_pp1_iter8.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_gmem1_AWREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter17.read()) && 
              esl_seteq<1,1,1>(tmp_11_reg_539.read(), ap_const_lv1_1) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem1_AWREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter17.read()) && 
                     esl_seteq<1,1,1>(tmp_11_reg_539.read(), ap_const_lv1_1) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem1_AWREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_gmem1_AWREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem1_WREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_gmem1_WREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter18.read()) && 
              esl_seteq<1,1,1>(ap_reg_pp1_iter17_exitcond_flatten_reg_508.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_gmem1_WREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem1_WREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter18.read()) && 
                     esl_seteq<1,1,1>(ap_reg_pp1_iter17_exitcond_flatten_reg_508.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem1_WREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_gmem1_WREADY = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_230_p2.read()))) {
        i2_reg_194 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_343_p2.read()))) {
        i2_reg_194 = i2_mid2_fu_411_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(gmem1_BVALID.read(), ap_const_logic_1))) {
        i_reg_160 = i_1_reg_489.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_160 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_230_p2.read()))) {
        indvar_flatten_reg_182 = ap_const_lv13_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(exitcond_flatten_reg_508.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_182 = indvar_flatten_next_reg_512.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_230_p2.read()))) {
        j3_reg_205 = ap_const_lv11_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_343_p2.read()))) {
        j3_reg_205 = j_2_fu_431_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_sig_ioackin_gmem1_WREADY.read(), ap_const_logic_1))) {
        j_reg_171 = j_1_reg_503.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_sig_ioackin_gmem1_AWREADY.read(), ap_const_logic_1))) {
        j_reg_171 = ap_const_lv11_0;
    }
    if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
        ap_reg_pp1_iter10_exitcond_flatten_reg_508 = ap_reg_pp1_iter9_exitcond_flatten_reg_508.read();
        ap_reg_pp1_iter10_tmp_25_mid2_v_v_reg_518 = ap_reg_pp1_iter9_tmp_25_mid2_v_v_reg_518.read();
        ap_reg_pp1_iter11_exitcond_flatten_reg_508 = ap_reg_pp1_iter10_exitcond_flatten_reg_508.read();
        ap_reg_pp1_iter11_tmp_25_mid2_v_v_reg_518 = ap_reg_pp1_iter10_tmp_25_mid2_v_v_reg_518.read();
        ap_reg_pp1_iter12_exitcond_flatten_reg_508 = ap_reg_pp1_iter11_exitcond_flatten_reg_508.read();
        ap_reg_pp1_iter12_tmp_25_mid2_v_v_reg_518 = ap_reg_pp1_iter11_tmp_25_mid2_v_v_reg_518.read();
        ap_reg_pp1_iter13_exitcond_flatten_reg_508 = ap_reg_pp1_iter12_exitcond_flatten_reg_508.read();
        ap_reg_pp1_iter13_tmp_25_mid2_v_v_reg_518 = ap_reg_pp1_iter12_tmp_25_mid2_v_v_reg_518.read();
        ap_reg_pp1_iter14_exitcond_flatten_reg_508 = ap_reg_pp1_iter13_exitcond_flatten_reg_508.read();
        ap_reg_pp1_iter14_tmp_25_mid2_v_v_reg_518 = ap_reg_pp1_iter13_tmp_25_mid2_v_v_reg_518.read();
        ap_reg_pp1_iter15_exitcond_flatten_reg_508 = ap_reg_pp1_iter14_exitcond_flatten_reg_508.read();
        ap_reg_pp1_iter15_tmp_25_mid2_v_v_reg_518 = ap_reg_pp1_iter14_tmp_25_mid2_v_v_reg_518.read();
        ap_reg_pp1_iter16_exitcond_flatten_reg_508 = ap_reg_pp1_iter15_exitcond_flatten_reg_508.read();
        ap_reg_pp1_iter17_exitcond_flatten_reg_508 = ap_reg_pp1_iter16_exitcond_flatten_reg_508.read();
        ap_reg_pp1_iter17_tmp_13_reg_543 = tmp_13_reg_543.read();
        ap_reg_pp1_iter18_tmp_13_reg_543 = ap_reg_pp1_iter17_tmp_13_reg_543.read();
        ap_reg_pp1_iter19_tmp_13_reg_543 = ap_reg_pp1_iter18_tmp_13_reg_543.read();
        ap_reg_pp1_iter20_tmp_13_reg_543 = ap_reg_pp1_iter19_tmp_13_reg_543.read();
        ap_reg_pp1_iter21_tmp_13_reg_543 = ap_reg_pp1_iter20_tmp_13_reg_543.read();
        ap_reg_pp1_iter22_tmp_13_reg_543 = ap_reg_pp1_iter21_tmp_13_reg_543.read();
        ap_reg_pp1_iter2_exitcond_flatten_reg_508 = ap_reg_pp1_iter1_exitcond_flatten_reg_508.read();
        ap_reg_pp1_iter2_tmp_25_mid2_v_v_reg_518 = ap_reg_pp1_iter1_tmp_25_mid2_v_v_reg_518.read();
        ap_reg_pp1_iter3_exitcond_flatten_reg_508 = ap_reg_pp1_iter2_exitcond_flatten_reg_508.read();
        ap_reg_pp1_iter3_tmp_25_mid2_v_v_reg_518 = ap_reg_pp1_iter2_tmp_25_mid2_v_v_reg_518.read();
        ap_reg_pp1_iter4_exitcond_flatten_reg_508 = ap_reg_pp1_iter3_exitcond_flatten_reg_508.read();
        ap_reg_pp1_iter4_tmp_25_mid2_v_v_reg_518 = ap_reg_pp1_iter3_tmp_25_mid2_v_v_reg_518.read();
        ap_reg_pp1_iter5_exitcond_flatten_reg_508 = ap_reg_pp1_iter4_exitcond_flatten_reg_508.read();
        ap_reg_pp1_iter5_tmp_25_mid2_v_v_reg_518 = ap_reg_pp1_iter4_tmp_25_mid2_v_v_reg_518.read();
        ap_reg_pp1_iter6_exitcond_flatten_reg_508 = ap_reg_pp1_iter5_exitcond_flatten_reg_508.read();
        ap_reg_pp1_iter6_tmp_25_mid2_v_v_reg_518 = ap_reg_pp1_iter5_tmp_25_mid2_v_v_reg_518.read();
        ap_reg_pp1_iter7_exitcond_flatten_reg_508 = ap_reg_pp1_iter6_exitcond_flatten_reg_508.read();
        ap_reg_pp1_iter7_tmp_25_mid2_v_v_reg_518 = ap_reg_pp1_iter6_tmp_25_mid2_v_v_reg_518.read();
        ap_reg_pp1_iter8_exitcond_flatten_reg_508 = ap_reg_pp1_iter7_exitcond_flatten_reg_508.read();
        ap_reg_pp1_iter8_tmp_25_mid2_v_v_reg_518 = ap_reg_pp1_iter7_tmp_25_mid2_v_v_reg_518.read();
        ap_reg_pp1_iter9_exitcond_flatten_reg_508 = ap_reg_pp1_iter8_exitcond_flatten_reg_508.read();
        ap_reg_pp1_iter9_tmp_25_mid2_v_v_reg_518 = ap_reg_pp1_iter8_tmp_25_mid2_v_v_reg_518.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp1_iter1_exitcond_flatten_reg_508 = exitcond_flatten_reg_508.read();
        ap_reg_pp1_iter1_tmp_25_mid2_v_v_reg_518 = tmp_25_mid2_v_v_reg_518.read();
        exitcond_flatten_reg_508 = exitcond_flatten_fu_343_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp1_iter15_exitcond_flatten_reg_508.read()))) {
        gmem1_addr_1_reg_533 =  (sc_lv<32>) (out_pix4_sum7_cast_fu_457_p1.read());
        tmp_11_reg_539 = tmp_11_fu_467_p2.read();
        tmp_13_reg_543 = tmp_13_fu_473_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_230_p2.read()))) {
        gmem1_addr_reg_494 =  (sc_lv<32>) (out_pix4_sum_cast_fu_291_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_489 = i_1_fu_236_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        indvar_flatten_next_reg_512 = indvar_flatten_next_fu_349_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_1_reg_503 = j_1_fu_307_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_343_p2.read()))) {
        tmp_25_mid2_v_v_reg_518 = tmp_25_mid2_v_v_fu_405_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_3_cast_reg_479 = tmp_3_cast_fu_226_p1.read();
    }
}

void sobel_filter::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[10];
}

void sobel_filter::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sobel_filter::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void sobel_filter::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sobel_filter::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void sobel_filter::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[11];
}

void sobel_filter::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void sobel_filter::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void sobel_filter::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter23.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp1_iter22_tmp_13_reg_543.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem1_BVALID.read()));
}

void sobel_filter::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter17.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state28_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter18.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state29_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter23.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp1_iter22_tmp_13_reg_543.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem1_BVALID.read())));
}

void sobel_filter::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter17.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state28_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter18.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state29_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter23.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp1_iter22_tmp_13_reg_543.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem1_BVALID.read())));
}

void sobel_filter::thread_ap_block_state11_pp1_stage0_iter0() {
    ap_block_state11_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state12_pp1_stage0_iter1() {
    ap_block_state12_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state13_pp1_stage0_iter2() {
    ap_block_state13_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state14_pp1_stage0_iter3() {
    ap_block_state14_pp1_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state15_pp1_stage0_iter4() {
    ap_block_state15_pp1_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state16_pp1_stage0_iter5() {
    ap_block_state16_pp1_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state17_pp1_stage0_iter6() {
    ap_block_state17_pp1_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state18_pp1_stage0_iter7() {
    ap_block_state18_pp1_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state19_pp1_stage0_iter8() {
    ap_block_state19_pp1_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state20_pp1_stage0_iter9() {
    ap_block_state20_pp1_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state21_pp1_stage0_iter10() {
    ap_block_state21_pp1_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state22_pp1_stage0_iter11() {
    ap_block_state22_pp1_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state23_pp1_stage0_iter12() {
    ap_block_state23_pp1_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state24_pp1_stage0_iter13() {
    ap_block_state24_pp1_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state25_pp1_stage0_iter14() {
    ap_block_state25_pp1_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state26_pp1_stage0_iter15() {
    ap_block_state26_pp1_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state27_pp1_stage0_iter16() {
    ap_block_state27_pp1_stage0_iter16 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state28_io() {
    ap_block_state28_io = (esl_seteq<1,1,1>(tmp_11_reg_539.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_gmem1_AWREADY.read()));
}

void sobel_filter::thread_ap_block_state28_pp1_stage0_iter17() {
    ap_block_state28_pp1_stage0_iter17 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state29_io() {
    ap_block_state29_io = (esl_seteq<1,1,1>(ap_reg_pp1_iter17_exitcond_flatten_reg_508.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_gmem1_WREADY.read()));
}

void sobel_filter::thread_ap_block_state29_pp1_stage0_iter18() {
    ap_block_state29_pp1_stage0_iter18 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state30_pp1_stage0_iter19() {
    ap_block_state30_pp1_stage0_iter19 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state31_pp1_stage0_iter20() {
    ap_block_state31_pp1_stage0_iter20 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state32_pp1_stage0_iter21() {
    ap_block_state32_pp1_stage0_iter21 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state33_pp1_stage0_iter22() {
    ap_block_state33_pp1_stage0_iter22 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sobel_filter::thread_ap_block_state34_pp1_stage0_iter23() {
    ap_block_state34_pp1_stage0_iter23 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp1_iter22_tmp_13_reg_543.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem1_BVALID.read()));
}

void sobel_filter::thread_ap_condition_582() {
    ap_condition_582 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter17.read()) && esl_seteq<1,1,1>(tmp_11_reg_539.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0));
}

void sobel_filter::thread_ap_condition_pp1_exit_iter0_state11() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_343_p2.read())) {
        ap_condition_pp1_exit_iter0_state11 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state11 = ap_const_logic_0;
    }
}

void sobel_filter::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sobel_filter::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void sobel_filter::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sobel_filter::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter17.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter19.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter20.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter21.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter22.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter23.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void sobel_filter::thread_ap_phi_mux_indvar_flatten_phi_fu_186_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_508.read(), ap_const_lv1_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_186_p4 = indvar_flatten_next_reg_512.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_186_p4 = indvar_flatten_reg_182.read();
    }
}

void sobel_filter::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sobel_filter::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void sobel_filter::thread_ap_sig_ioackin_gmem1_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem1_AWREADY.read())) {
        ap_sig_ioackin_gmem1_AWREADY = gmem1_AWREADY.read();
    } else {
        ap_sig_ioackin_gmem1_AWREADY = ap_const_logic_1;
    }
}

void sobel_filter::thread_ap_sig_ioackin_gmem1_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem1_WREADY.read())) {
        ap_sig_ioackin_gmem1_WREADY = gmem1_WREADY.read();
    } else {
        ap_sig_ioackin_gmem1_WREADY = ap_const_logic_1;
    }
}

void sobel_filter::thread_exitcond_flatten_fu_343_p2() {
    exitcond_flatten_fu_343_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_186_p4.read().is_01() || !ap_const_lv13_1680.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_186_p4.read() == ap_const_lv13_1680);
}

void sobel_filter::thread_gmem1_AWADDR() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem1_AWREADY.read())) {
        if (esl_seteq<1,1,1>(ap_condition_582.read(), ap_const_boolean_1)) {
            gmem1_AWADDR = gmem1_addr_1_reg_533.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            gmem1_AWADDR = gmem1_addr_reg_494.read();
        } else {
            gmem1_AWADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        gmem1_AWADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void sobel_filter::thread_gmem1_AWVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem1_AWREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter17.read()) && 
          esl_seteq<1,1,1>(tmp_11_reg_539.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem1_AWREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0)))) {
        gmem1_AWVALID = ap_const_logic_1;
    } else {
        gmem1_AWVALID = ap_const_logic_0;
    }
}

void sobel_filter::thread_gmem1_BREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(gmem1_BVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter23.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp1_iter22_tmp_13_reg_543.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        gmem1_BREADY = ap_const_logic_1;
    } else {
        gmem1_BREADY = ap_const_logic_0;
    }
}

void sobel_filter::thread_gmem1_WVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem1_WREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter18.read()) && 
          esl_seteq<1,1,1>(ap_reg_pp1_iter17_exitcond_flatten_reg_508.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem1_WREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0)))) {
        gmem1_WVALID = ap_const_logic_1;
    } else {
        gmem1_WVALID = ap_const_logic_0;
    }
}

void sobel_filter::thread_gmem1_blk_n_AW() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter17.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_11_reg_539.read(), ap_const_lv1_1)))) {
        gmem1_blk_n_AW = m_axi_gmem1_AWREADY.read();
    } else {
        gmem1_blk_n_AW = ap_const_logic_1;
    }
}

void sobel_filter::thread_gmem1_blk_n_B() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter23.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp1_iter22_tmp_13_reg_543.read())))) {
        gmem1_blk_n_B = m_axi_gmem1_BVALID.read();
    } else {
        gmem1_blk_n_B = ap_const_logic_1;
    }
}

void sobel_filter::thread_gmem1_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter18.read()) && 
          esl_seteq<1,1,1>(ap_reg_pp1_iter17_exitcond_flatten_reg_508.read(), ap_const_lv1_0)))) {
        gmem1_blk_n_W = m_axi_gmem1_WREADY.read();
    } else {
        gmem1_blk_n_W = ap_const_logic_1;
    }
}

void sobel_filter::thread_grp_fu_419_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_419_ce = ap_const_logic_1;
    } else {
        grp_fu_419_ce = ap_const_logic_0;
    }
}

void sobel_filter::thread_grp_fu_419_p1() {
    grp_fu_419_p1 =  (sc_lv<12>) (ap_const_lv13_780);
}

void sobel_filter::thread_grp_fu_439_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_439_ce = ap_const_logic_1;
    } else {
        grp_fu_439_ce = ap_const_logic_0;
    }
}

void sobel_filter::thread_grp_fu_439_p0() {
    grp_fu_439_p0 = (!ap_phi_mux_indvar_flatten_phi_fu_186_p4.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_biguint<13>(ap_phi_mux_indvar_flatten_phi_fu_186_p4.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void sobel_filter::thread_grp_fu_439_p1() {
    grp_fu_439_p1 =  (sc_lv<12>) (ap_const_lv13_780);
}

void sobel_filter::thread_i2_mid2_fu_411_p3() {
    i2_mid2_fu_411_p3 = (!tmp_3_fu_355_p2.read()[0].is_01())? sc_lv<2>(): ((tmp_3_fu_355_p2.read()[0].to_bool())? i_s_fu_361_p2.read(): i2_reg_194.read());
}

void sobel_filter::thread_i_1_fu_236_p2() {
    i_1_fu_236_p2 = (!i_reg_160.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(i_reg_160.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void sobel_filter::thread_i_s_fu_361_p2() {
    i_s_fu_361_p2 = (!i2_reg_194.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i2_reg_194.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void sobel_filter::thread_indvar_flatten_next_fu_349_p2() {
    indvar_flatten_next_fu_349_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_186_p4.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_biguint<13>(ap_phi_mux_indvar_flatten_phi_fu_186_p4.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void sobel_filter::thread_j3_op_fu_425_p2() {
    j3_op_fu_425_p2 = (!j3_reg_205.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(j3_reg_205.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void sobel_filter::thread_j_1_fu_307_p2() {
    j_1_fu_307_p2 = (!j_reg_171.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(j_reg_171.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void sobel_filter::thread_j_2_fu_431_p3() {
    j_2_fu_431_p3 = (!tmp_3_fu_355_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_3_fu_355_p2.read()[0].to_bool())? ap_const_lv11_1: j3_op_fu_425_p2.read());
}

void sobel_filter::thread_m_axi_gmem0_ARADDR() {
    m_axi_gmem0_ARADDR = ap_const_lv32_0;
}

void sobel_filter::thread_m_axi_gmem0_ARBURST() {
    m_axi_gmem0_ARBURST = ap_const_lv2_0;
}

void sobel_filter::thread_m_axi_gmem0_ARCACHE() {
    m_axi_gmem0_ARCACHE = ap_const_lv4_0;
}

void sobel_filter::thread_m_axi_gmem0_ARID() {
    m_axi_gmem0_ARID = ap_const_lv1_0;
}

void sobel_filter::thread_m_axi_gmem0_ARLEN() {
    m_axi_gmem0_ARLEN = ap_const_lv8_0;
}

void sobel_filter::thread_m_axi_gmem0_ARLOCK() {
    m_axi_gmem0_ARLOCK = ap_const_lv2_0;
}

void sobel_filter::thread_m_axi_gmem0_ARPROT() {
    m_axi_gmem0_ARPROT = ap_const_lv3_0;
}

void sobel_filter::thread_m_axi_gmem0_ARQOS() {
    m_axi_gmem0_ARQOS = ap_const_lv4_0;
}

void sobel_filter::thread_m_axi_gmem0_ARREGION() {
    m_axi_gmem0_ARREGION = ap_const_lv4_0;
}

void sobel_filter::thread_m_axi_gmem0_ARSIZE() {
    m_axi_gmem0_ARSIZE = ap_const_lv3_0;
}

void sobel_filter::thread_m_axi_gmem0_ARUSER() {
    m_axi_gmem0_ARUSER = ap_const_lv1_0;
}

void sobel_filter::thread_m_axi_gmem0_ARVALID() {
    m_axi_gmem0_ARVALID = ap_const_logic_0;
}

void sobel_filter::thread_m_axi_gmem0_AWADDR() {
    m_axi_gmem0_AWADDR = ap_const_lv32_0;
}

void sobel_filter::thread_m_axi_gmem0_AWBURST() {
    m_axi_gmem0_AWBURST = ap_const_lv2_0;
}

void sobel_filter::thread_m_axi_gmem0_AWCACHE() {
    m_axi_gmem0_AWCACHE = ap_const_lv4_0;
}

void sobel_filter::thread_m_axi_gmem0_AWID() {
    m_axi_gmem0_AWID = ap_const_lv1_0;
}

void sobel_filter::thread_m_axi_gmem0_AWLEN() {
    m_axi_gmem0_AWLEN = ap_const_lv8_0;
}

void sobel_filter::thread_m_axi_gmem0_AWLOCK() {
    m_axi_gmem0_AWLOCK = ap_const_lv2_0;
}

void sobel_filter::thread_m_axi_gmem0_AWPROT() {
    m_axi_gmem0_AWPROT = ap_const_lv3_0;
}

void sobel_filter::thread_m_axi_gmem0_AWQOS() {
    m_axi_gmem0_AWQOS = ap_const_lv4_0;
}

void sobel_filter::thread_m_axi_gmem0_AWREGION() {
    m_axi_gmem0_AWREGION = ap_const_lv4_0;
}

void sobel_filter::thread_m_axi_gmem0_AWSIZE() {
    m_axi_gmem0_AWSIZE = ap_const_lv3_0;
}

void sobel_filter::thread_m_axi_gmem0_AWUSER() {
    m_axi_gmem0_AWUSER = ap_const_lv1_0;
}

void sobel_filter::thread_m_axi_gmem0_AWVALID() {
    m_axi_gmem0_AWVALID = ap_const_logic_0;
}

void sobel_filter::thread_m_axi_gmem0_BREADY() {
    m_axi_gmem0_BREADY = ap_const_logic_0;
}

void sobel_filter::thread_m_axi_gmem0_RREADY() {
    m_axi_gmem0_RREADY = ap_const_logic_0;
}

void sobel_filter::thread_m_axi_gmem0_WDATA() {
    m_axi_gmem0_WDATA = ap_const_lv32_0;
}

void sobel_filter::thread_m_axi_gmem0_WID() {
    m_axi_gmem0_WID = ap_const_lv1_0;
}

void sobel_filter::thread_m_axi_gmem0_WLAST() {
    m_axi_gmem0_WLAST = ap_const_logic_0;
}

void sobel_filter::thread_m_axi_gmem0_WSTRB() {
    m_axi_gmem0_WSTRB = ap_const_lv4_0;
}

void sobel_filter::thread_m_axi_gmem0_WUSER() {
    m_axi_gmem0_WUSER = ap_const_lv1_0;
}

void sobel_filter::thread_m_axi_gmem0_WVALID() {
    m_axi_gmem0_WVALID = ap_const_logic_0;
}

void sobel_filter::thread_out_pix4_sum7_cast_fu_457_p1() {
    out_pix4_sum7_cast_fu_457_p1 = esl_zext<64,33>(out_pix4_sum7_fu_452_p2.read());
}

void sobel_filter::thread_out_pix4_sum7_fu_452_p2() {
    out_pix4_sum7_fu_452_p2 = (!tmp_25_mid2_cast_fu_448_p1.read().is_01() || !tmp_3_cast_reg_479.read().is_01())? sc_lv<33>(): (sc_biguint<33>(tmp_25_mid2_cast_fu_448_p1.read()) + sc_biguint<33>(tmp_3_cast_reg_479.read()));
}

void sobel_filter::thread_out_pix4_sum_cast_fu_291_p1() {
    out_pix4_sum_cast_fu_291_p1 = esl_zext<64,33>(out_pix4_sum_fu_286_p2.read());
}

void sobel_filter::thread_out_pix4_sum_fu_286_p2() {
    out_pix4_sum_fu_286_p2 = (!tmp_8_cast_fu_282_p1.read().is_01() || !tmp_3_cast_reg_479.read().is_01())? sc_lv<33>(): (sc_biguint<33>(tmp_8_cast_fu_282_p1.read()) + sc_biguint<33>(tmp_3_cast_reg_479.read()));
}

void sobel_filter::thread_p_shl1_cast_fu_250_p1() {
    p_shl1_cast_fu_250_p1 = esl_zext<23,22>(p_shl1_fu_242_p3.read());
}

void sobel_filter::thread_p_shl1_fu_242_p3() {
    p_shl1_fu_242_p3 = esl_concat<11,11>(i_reg_160.read(), ap_const_lv11_0);
}

void sobel_filter::thread_p_shl2_cast_fu_262_p1() {
    p_shl2_cast_fu_262_p1 = esl_zext<23,18>(p_shl2_fu_254_p3.read());
}

void sobel_filter::thread_p_shl2_fu_254_p3() {
    p_shl2_fu_254_p3 = esl_concat<11,7>(i_reg_160.read(), ap_const_lv7_0);
}

void sobel_filter::thread_p_shl3_cast_fu_333_p1() {
    p_shl3_cast_fu_333_p1 = esl_zext<14,9>(p_shl3_fu_325_p3.read());
}

void sobel_filter::thread_p_shl3_cast_mid1_fu_387_p1() {
    p_shl3_cast_mid1_fu_387_p1 = esl_zext<14,9>(p_shl3_mid1_fu_379_p3.read());
}

void sobel_filter::thread_p_shl3_fu_325_p3() {
    p_shl3_fu_325_p3 = esl_concat<2,7>(i2_reg_194.read(), ap_const_lv7_0);
}

void sobel_filter::thread_p_shl3_mid1_fu_379_p3() {
    p_shl3_mid1_fu_379_p3 = esl_concat<2,7>(i_s_fu_361_p2.read(), ap_const_lv7_0);
}

void sobel_filter::thread_p_shl_cast_fu_321_p1() {
    p_shl_cast_fu_321_p1 = esl_zext<14,13>(p_shl_fu_313_p3.read());
}

void sobel_filter::thread_p_shl_cast_mid1_fu_375_p1() {
    p_shl_cast_mid1_fu_375_p1 = esl_zext<14,13>(p_shl_mid1_fu_367_p3.read());
}

void sobel_filter::thread_p_shl_fu_313_p3() {
    p_shl_fu_313_p3 = esl_concat<2,11>(i2_reg_194.read(), ap_const_lv11_0);
}

void sobel_filter::thread_p_shl_mid1_fu_367_p3() {
    p_shl_mid1_fu_367_p3 = esl_concat<2,11>(i_s_fu_361_p2.read(), ap_const_lv11_0);
}

void sobel_filter::thread_tmp_11_fu_467_p2() {
    tmp_11_fu_467_p2 = (!grp_fu_419_p2.read().is_01() || !ap_const_lv13_0.is_01())? sc_lv<1>(): sc_lv<1>(grp_fu_419_p2.read() == ap_const_lv13_0);
}

void sobel_filter::thread_tmp_13_fu_473_p2() {
    tmp_13_fu_473_p2 = (!grp_fu_439_p2.read().is_01() || !ap_const_lv13_0.is_01())? sc_lv<1>(): sc_lv<1>(grp_fu_439_p2.read() == ap_const_lv13_0);
}

void sobel_filter::thread_tmp_1_fu_230_p2() {
    tmp_1_fu_230_p2 = (!i_reg_160.read().is_01() || !ap_const_lv11_438.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_160.read() == ap_const_lv11_438);
}

void sobel_filter::thread_tmp_25_mid2_cast_fu_448_p1() {
    tmp_25_mid2_cast_fu_448_p1 = esl_zext<33,32>(tmp_25_mid2_v_fu_445_p1.read());
}

void sobel_filter::thread_tmp_25_mid2_v_fu_445_p1() {
    tmp_25_mid2_v_fu_445_p1 = esl_sext<32,14>(ap_reg_pp1_iter15_tmp_25_mid2_v_v_reg_518.read());
}

void sobel_filter::thread_tmp_25_mid2_v_v_fu_405_p2() {
    tmp_25_mid2_v_v_fu_405_p2 = (!tmp_7_mid2_fu_397_p3.read().is_01() || !ap_const_lv14_3100.is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_7_mid2_fu_397_p3.read()) + sc_bigint<14>(ap_const_lv14_3100));
}

void sobel_filter::thread_tmp_2_fu_266_p2() {
    tmp_2_fu_266_p2 = (!p_shl1_cast_fu_250_p1.read().is_01() || !p_shl2_cast_fu_262_p1.read().is_01())? sc_lv<23>(): (sc_biguint<23>(p_shl1_cast_fu_250_p1.read()) - sc_biguint<23>(p_shl2_cast_fu_262_p1.read()));
}

void sobel_filter::thread_tmp_3_cast_fu_226_p1() {
    tmp_3_cast_fu_226_p1 = esl_zext<33,30>(tmp_fu_216_p4.read());
}

void sobel_filter::thread_tmp_3_fu_355_p2() {
    tmp_3_fu_355_p2 = (!j3_reg_205.read().is_01() || !ap_const_lv11_780.is_01())? sc_lv<1>(): sc_lv<1>(j3_reg_205.read() == ap_const_lv11_780);
}

void sobel_filter::thread_tmp_4_fu_272_p2() {
    tmp_4_fu_272_p2 = (!tmp_2_fu_266_p2.read().is_01() || !ap_const_lv23_7FF100.is_01())? sc_lv<23>(): (sc_biguint<23>(tmp_2_fu_266_p2.read()) + sc_bigint<23>(ap_const_lv23_7FF100));
}

void sobel_filter::thread_tmp_5_fu_301_p2() {
    tmp_5_fu_301_p2 = (!j_reg_171.read().is_01() || !ap_const_lv11_780.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_171.read() == ap_const_lv11_780);
}

void sobel_filter::thread_tmp_6_fu_278_p1() {
    tmp_6_fu_278_p1 = esl_sext<32,23>(tmp_4_fu_272_p2.read());
}

void sobel_filter::thread_tmp_7_fu_337_p2() {
    tmp_7_fu_337_p2 = (!p_shl_cast_fu_321_p1.read().is_01() || !p_shl3_cast_fu_333_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl_cast_fu_321_p1.read()) - sc_biguint<14>(p_shl3_cast_fu_333_p1.read()));
}

void sobel_filter::thread_tmp_7_mid1_fu_391_p2() {
    tmp_7_mid1_fu_391_p2 = (!p_shl_cast_mid1_fu_375_p1.read().is_01() || !p_shl3_cast_mid1_fu_387_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl_cast_mid1_fu_375_p1.read()) - sc_biguint<14>(p_shl3_cast_mid1_fu_387_p1.read()));
}

void sobel_filter::thread_tmp_7_mid2_fu_397_p3() {
    tmp_7_mid2_fu_397_p3 = (!tmp_3_fu_355_p2.read()[0].is_01())? sc_lv<14>(): ((tmp_3_fu_355_p2.read()[0].to_bool())? tmp_7_mid1_fu_391_p2.read(): tmp_7_fu_337_p2.read());
}

void sobel_filter::thread_tmp_8_cast_fu_282_p1() {
    tmp_8_cast_fu_282_p1 = esl_zext<33,32>(tmp_6_fu_278_p1.read());
}

void sobel_filter::thread_tmp_fu_216_p4() {
    tmp_fu_216_p4 = out_pix.read().range(31, 2);
}

void sobel_filter::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_230_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem1_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_301_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem1_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(gmem1_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter23.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter22.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_343_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter23.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter22.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_343_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state35;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<12>) ("XXXXXXXXXXXX");
            break;
    }
}

void sobel_filter::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_gmem0_AWVALID\" :  \"" << m_axi_gmem0_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_AWREADY\" :  \"" << m_axi_gmem0_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWADDR\" :  \"" << m_axi_gmem0_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWID\" :  \"" << m_axi_gmem0_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWLEN\" :  \"" << m_axi_gmem0_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWSIZE\" :  \"" << m_axi_gmem0_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWBURST\" :  \"" << m_axi_gmem0_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWLOCK\" :  \"" << m_axi_gmem0_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWCACHE\" :  \"" << m_axi_gmem0_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWPROT\" :  \"" << m_axi_gmem0_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWQOS\" :  \"" << m_axi_gmem0_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWREGION\" :  \"" << m_axi_gmem0_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWUSER\" :  \"" << m_axi_gmem0_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WVALID\" :  \"" << m_axi_gmem0_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_WREADY\" :  \"" << m_axi_gmem0_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WDATA\" :  \"" << m_axi_gmem0_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WSTRB\" :  \"" << m_axi_gmem0_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WLAST\" :  \"" << m_axi_gmem0_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WID\" :  \"" << m_axi_gmem0_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WUSER\" :  \"" << m_axi_gmem0_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARVALID\" :  \"" << m_axi_gmem0_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_ARREADY\" :  \"" << m_axi_gmem0_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARADDR\" :  \"" << m_axi_gmem0_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARID\" :  \"" << m_axi_gmem0_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARLEN\" :  \"" << m_axi_gmem0_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARSIZE\" :  \"" << m_axi_gmem0_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARBURST\" :  \"" << m_axi_gmem0_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARLOCK\" :  \"" << m_axi_gmem0_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARCACHE\" :  \"" << m_axi_gmem0_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARPROT\" :  \"" << m_axi_gmem0_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARQOS\" :  \"" << m_axi_gmem0_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARREGION\" :  \"" << m_axi_gmem0_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARUSER\" :  \"" << m_axi_gmem0_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RVALID\" :  \"" << m_axi_gmem0_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_RREADY\" :  \"" << m_axi_gmem0_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RDATA\" :  \"" << m_axi_gmem0_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RLAST\" :  \"" << m_axi_gmem0_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RID\" :  \"" << m_axi_gmem0_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RUSER\" :  \"" << m_axi_gmem0_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RRESP\" :  \"" << m_axi_gmem0_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_BVALID\" :  \"" << m_axi_gmem0_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_BREADY\" :  \"" << m_axi_gmem0_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_BRESP\" :  \"" << m_axi_gmem0_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_BID\" :  \"" << m_axi_gmem0_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_BUSER\" :  \"" << m_axi_gmem0_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWVALID\" :  \"" << m_axi_gmem1_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_AWREADY\" :  \"" << m_axi_gmem1_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWADDR\" :  \"" << m_axi_gmem1_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWID\" :  \"" << m_axi_gmem1_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWLEN\" :  \"" << m_axi_gmem1_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWSIZE\" :  \"" << m_axi_gmem1_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWBURST\" :  \"" << m_axi_gmem1_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWLOCK\" :  \"" << m_axi_gmem1_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWCACHE\" :  \"" << m_axi_gmem1_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWPROT\" :  \"" << m_axi_gmem1_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWQOS\" :  \"" << m_axi_gmem1_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWREGION\" :  \"" << m_axi_gmem1_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWUSER\" :  \"" << m_axi_gmem1_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WVALID\" :  \"" << m_axi_gmem1_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_WREADY\" :  \"" << m_axi_gmem1_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WDATA\" :  \"" << m_axi_gmem1_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WSTRB\" :  \"" << m_axi_gmem1_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WLAST\" :  \"" << m_axi_gmem1_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WID\" :  \"" << m_axi_gmem1_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WUSER\" :  \"" << m_axi_gmem1_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARVALID\" :  \"" << m_axi_gmem1_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_ARREADY\" :  \"" << m_axi_gmem1_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARADDR\" :  \"" << m_axi_gmem1_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARID\" :  \"" << m_axi_gmem1_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARLEN\" :  \"" << m_axi_gmem1_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARSIZE\" :  \"" << m_axi_gmem1_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARBURST\" :  \"" << m_axi_gmem1_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARLOCK\" :  \"" << m_axi_gmem1_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARCACHE\" :  \"" << m_axi_gmem1_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARPROT\" :  \"" << m_axi_gmem1_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARQOS\" :  \"" << m_axi_gmem1_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARREGION\" :  \"" << m_axi_gmem1_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARUSER\" :  \"" << m_axi_gmem1_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RVALID\" :  \"" << m_axi_gmem1_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_RREADY\" :  \"" << m_axi_gmem1_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RDATA\" :  \"" << m_axi_gmem1_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RLAST\" :  \"" << m_axi_gmem1_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RID\" :  \"" << m_axi_gmem1_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RUSER\" :  \"" << m_axi_gmem1_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RRESP\" :  \"" << m_axi_gmem1_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BVALID\" :  \"" << m_axi_gmem1_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_BREADY\" :  \"" << m_axi_gmem1_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BRESP\" :  \"" << m_axi_gmem1_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BID\" :  \"" << m_axi_gmem1_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BUSER\" :  \"" << m_axi_gmem1_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

