// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sobel_filter_HH_
#define _sobel_filter_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sobel_filter_mux_fYi.h"
#include "sobel_filter_cachbkb.h"
#include "sobel_filter_cachdEe.h"
#include "sobel_filter_AXILiteS_s_axi.h"
#include "sobel_filter_gmem0_m_axi.h"
#include "sobel_filter_gmem1_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_GMEM0_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM0_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM0_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM0_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM0_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM0_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM0_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM0_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM1_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM1_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM1_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM1_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM1_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM1_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM1_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM1_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct sobel_filter : public sc_module {
    // Port declarations 110
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_gmem0_AWVALID;
    sc_in< sc_logic > m_axi_gmem0_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM0_ADDR_WIDTH> > m_axi_gmem0_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM0_ID_WIDTH> > m_axi_gmem0_AWID;
    sc_out< sc_lv<8> > m_axi_gmem0_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem0_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem0_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem0_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem0_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem0_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem0_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem0_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM0_AWUSER_WIDTH> > m_axi_gmem0_AWUSER;
    sc_out< sc_logic > m_axi_gmem0_WVALID;
    sc_in< sc_logic > m_axi_gmem0_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM0_DATA_WIDTH> > m_axi_gmem0_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM0_DATA_WIDTH/8> > m_axi_gmem0_WSTRB;
    sc_out< sc_logic > m_axi_gmem0_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM0_ID_WIDTH> > m_axi_gmem0_WID;
    sc_out< sc_uint<C_M_AXI_GMEM0_WUSER_WIDTH> > m_axi_gmem0_WUSER;
    sc_out< sc_logic > m_axi_gmem0_ARVALID;
    sc_in< sc_logic > m_axi_gmem0_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM0_ADDR_WIDTH> > m_axi_gmem0_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM0_ID_WIDTH> > m_axi_gmem0_ARID;
    sc_out< sc_lv<8> > m_axi_gmem0_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem0_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem0_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem0_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem0_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem0_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem0_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem0_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM0_ARUSER_WIDTH> > m_axi_gmem0_ARUSER;
    sc_in< sc_logic > m_axi_gmem0_RVALID;
    sc_out< sc_logic > m_axi_gmem0_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM0_DATA_WIDTH> > m_axi_gmem0_RDATA;
    sc_in< sc_logic > m_axi_gmem0_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM0_ID_WIDTH> > m_axi_gmem0_RID;
    sc_in< sc_uint<C_M_AXI_GMEM0_RUSER_WIDTH> > m_axi_gmem0_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem0_RRESP;
    sc_in< sc_logic > m_axi_gmem0_BVALID;
    sc_out< sc_logic > m_axi_gmem0_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem0_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM0_ID_WIDTH> > m_axi_gmem0_BID;
    sc_in< sc_uint<C_M_AXI_GMEM0_BUSER_WIDTH> > m_axi_gmem0_BUSER;
    sc_out< sc_logic > m_axi_gmem1_AWVALID;
    sc_in< sc_logic > m_axi_gmem1_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM1_ADDR_WIDTH> > m_axi_gmem1_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM1_ID_WIDTH> > m_axi_gmem1_AWID;
    sc_out< sc_lv<8> > m_axi_gmem1_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem1_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem1_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem1_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem1_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem1_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem1_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem1_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM1_AWUSER_WIDTH> > m_axi_gmem1_AWUSER;
    sc_out< sc_logic > m_axi_gmem1_WVALID;
    sc_in< sc_logic > m_axi_gmem1_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM1_DATA_WIDTH> > m_axi_gmem1_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM1_DATA_WIDTH/8> > m_axi_gmem1_WSTRB;
    sc_out< sc_logic > m_axi_gmem1_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM1_ID_WIDTH> > m_axi_gmem1_WID;
    sc_out< sc_uint<C_M_AXI_GMEM1_WUSER_WIDTH> > m_axi_gmem1_WUSER;
    sc_out< sc_logic > m_axi_gmem1_ARVALID;
    sc_in< sc_logic > m_axi_gmem1_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM1_ADDR_WIDTH> > m_axi_gmem1_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM1_ID_WIDTH> > m_axi_gmem1_ARID;
    sc_out< sc_lv<8> > m_axi_gmem1_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem1_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem1_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem1_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem1_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem1_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem1_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem1_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM1_ARUSER_WIDTH> > m_axi_gmem1_ARUSER;
    sc_in< sc_logic > m_axi_gmem1_RVALID;
    sc_out< sc_logic > m_axi_gmem1_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM1_DATA_WIDTH> > m_axi_gmem1_RDATA;
    sc_in< sc_logic > m_axi_gmem1_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM1_ID_WIDTH> > m_axi_gmem1_RID;
    sc_in< sc_uint<C_M_AXI_GMEM1_RUSER_WIDTH> > m_axi_gmem1_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem1_RRESP;
    sc_in< sc_logic > m_axi_gmem1_BVALID;
    sc_out< sc_logic > m_axi_gmem1_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem1_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM1_ID_WIDTH> > m_axi_gmem1_BID;
    sc_in< sc_uint<C_M_AXI_GMEM1_BUSER_WIDTH> > m_axi_gmem1_BUSER;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<32> > ap_var_for_const7;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<2> > ap_var_for_const4;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<3> > ap_var_for_const3;
    sc_signal< sc_lv<4> > ap_var_for_const5;
    sc_signal< sc_lv<4> > ap_var_for_const9;
    sc_signal< sc_lv<8> > ap_var_for_const8;


    // Module declarations
    sobel_filter(sc_module_name name);
    SC_HAS_PROCESS(sobel_filter);

    ~sobel_filter();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sobel_filter_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* sobel_filter_AXILiteS_s_axi_U;
    sobel_filter_gmem0_m_axi<0,8,32,5,16,16,16,16,C_M_AXI_GMEM0_ID_WIDTH,C_M_AXI_GMEM0_ADDR_WIDTH,C_M_AXI_GMEM0_DATA_WIDTH,C_M_AXI_GMEM0_AWUSER_WIDTH,C_M_AXI_GMEM0_ARUSER_WIDTH,C_M_AXI_GMEM0_WUSER_WIDTH,C_M_AXI_GMEM0_RUSER_WIDTH,C_M_AXI_GMEM0_BUSER_WIDTH,C_M_AXI_GMEM0_USER_VALUE,C_M_AXI_GMEM0_PROT_VALUE,C_M_AXI_GMEM0_CACHE_VALUE>* sobel_filter_gmem0_m_axi_U;
    sobel_filter_gmem1_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM1_ID_WIDTH,C_M_AXI_GMEM1_ADDR_WIDTH,C_M_AXI_GMEM1_DATA_WIDTH,C_M_AXI_GMEM1_AWUSER_WIDTH,C_M_AXI_GMEM1_ARUSER_WIDTH,C_M_AXI_GMEM1_WUSER_WIDTH,C_M_AXI_GMEM1_RUSER_WIDTH,C_M_AXI_GMEM1_BUSER_WIDTH,C_M_AXI_GMEM1_USER_VALUE,C_M_AXI_GMEM1_PROT_VALUE,C_M_AXI_GMEM1_CACHE_VALUE>* sobel_filter_gmem1_m_axi_U;
    sobel_filter_cachbkb* cache_0_U;
    sobel_filter_cachbkb* cache_1_U;
    sobel_filter_cachdEe* cache_2_U;
    sobel_filter_cachdEe* cache_3_U;
    sobel_filter_mux_fYi<1,1,8,8,8,8,2,8>* sobel_filter_mux_fYi_U1;
    sobel_filter_mux_fYi<1,1,8,8,8,8,2,8>* sobel_filter_mux_fYi_U2;
    sobel_filter_mux_fYi<1,1,8,8,8,8,2,8>* sobel_filter_mux_fYi_U3;
    sobel_filter_mux_fYi<1,1,8,8,8,8,2,8>* sobel_filter_mux_fYi_U4;
    sobel_filter_mux_fYi<1,1,8,8,8,8,2,8>* sobel_filter_mux_fYi_U5;
    sobel_filter_mux_fYi<1,1,8,8,8,8,2,8>* sobel_filter_mux_fYi_U6;
    sobel_filter_mux_fYi<1,1,8,8,8,8,2,8>* sobel_filter_mux_fYi_U7;
    sobel_filter_mux_fYi<1,1,8,8,8,8,2,8>* sobel_filter_mux_fYi_U8;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<27> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > inter_pix;
    sc_signal< sc_lv<32> > out_pix;
    sc_signal< sc_logic > gmem0_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > gmem0_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< bool > ap_block_pp1_stage1;
    sc_signal< sc_lv<1> > tmp_16_reg_1243;
    sc_signal< sc_logic > gmem1_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_logic > gmem1_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter3;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_logic > gmem1_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_logic > gmem0_AWREADY;
    sc_signal< sc_logic > gmem0_WREADY;
    sc_signal< sc_logic > gmem0_ARVALID;
    sc_signal< sc_logic > gmem0_ARREADY;
    sc_signal< sc_lv<32> > gmem0_ARADDR;
    sc_signal< sc_logic > gmem0_RVALID;
    sc_signal< sc_logic > gmem0_RREADY;
    sc_signal< sc_lv<8> > gmem0_RDATA;
    sc_signal< sc_logic > gmem0_RLAST;
    sc_signal< sc_lv<1> > gmem0_RID;
    sc_signal< sc_lv<1> > gmem0_RUSER;
    sc_signal< sc_lv<2> > gmem0_RRESP;
    sc_signal< sc_logic > gmem0_BVALID;
    sc_signal< sc_lv<2> > gmem0_BRESP;
    sc_signal< sc_lv<1> > gmem0_BID;
    sc_signal< sc_lv<1> > gmem0_BUSER;
    sc_signal< sc_logic > gmem1_AWVALID;
    sc_signal< sc_logic > gmem1_AWREADY;
    sc_signal< sc_logic > gmem1_WVALID;
    sc_signal< sc_logic > gmem1_WREADY;
    sc_signal< sc_lv<32> > gmem1_WDATA;
    sc_signal< sc_logic > gmem1_ARREADY;
    sc_signal< sc_logic > gmem1_RVALID;
    sc_signal< sc_lv<32> > gmem1_RDATA;
    sc_signal< sc_logic > gmem1_RLAST;
    sc_signal< sc_lv<1> > gmem1_RID;
    sc_signal< sc_lv<1> > gmem1_RUSER;
    sc_signal< sc_lv<2> > gmem1_RRESP;
    sc_signal< sc_logic > gmem1_BVALID;
    sc_signal< sc_logic > gmem1_BREADY;
    sc_signal< sc_lv<2> > gmem1_BRESP;
    sc_signal< sc_lv<1> > gmem1_BID;
    sc_signal< sc_lv<1> > gmem1_BUSER;
    sc_signal< sc_lv<11> > j_reg_355;
    sc_signal< sc_lv<11> > cols_assign_reg_377;
    sc_signal< sc_lv<33> > tmp_1_cast_fu_398_p1;
    sc_signal< sc_lv<33> > tmp_1_cast_reg_1121;
    sc_signal< sc_lv<34> > tmp_27_cast_fu_402_p1;
    sc_signal< sc_lv<34> > tmp_27_cast_reg_1126;
    sc_signal< sc_lv<2> > i_1_fu_412_p2;
    sc_signal< sc_lv<2> > i_1_reg_1135;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > cond_fu_452_p2;
    sc_signal< sc_lv<1> > cond_reg_1140;
    sc_signal< sc_lv<1> > tmp_fu_406_p2;
    sc_signal< sc_lv<32> > gmem0_addr_reg_1144;
    sc_signal< sc_lv<1> > tmp_5_fu_481_p2;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<11> > j_1_fu_487_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<11> > cache_0_addr_reg_1159;
    sc_signal< sc_lv<11> > cache_0_addr_reg_1159_pp0_iter1_reg;
    sc_signal< sc_lv<11> > cache_1_addr_reg_1164;
    sc_signal< sc_lv<11> > cache_1_addr_reg_1164_pp0_iter1_reg;
    sc_signal< sc_lv<8> > gmem0_addr_read_reg_1169;
    sc_signal< sc_lv<11> > i_2_fu_505_p2;
    sc_signal< sc_lv<11> > i_2_reg_1178;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<1> > tmp_6_fu_511_p2;
    sc_signal< sc_lv<1> > tmp_6_reg_1183;
    sc_signal< sc_lv<1> > tmp_4_fu_499_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_517_p2;
    sc_signal< sc_lv<1> > tmp_7_reg_1188;
    sc_signal< sc_lv<2> > tmp_14_fu_553_p1;
    sc_signal< sc_lv<2> > tmp_14_reg_1193;
    sc_signal< sc_lv<11> > tmp_s_fu_575_p3;
    sc_signal< sc_lv<11> > tmp_s_reg_1202;
    sc_signal< sc_lv<32> > gmem1_addr_reg_1208;
    sc_signal< sc_lv<32> > gmem0_addr_1_reg_1214;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<2> > tmp_11_t_fu_657_p2;
    sc_signal< sc_lv<2> > tmp_11_t_reg_1220;
    sc_signal< sc_logic > ap_sig_ioackin_gmem1_AWREADY;
    sc_signal< sc_lv<2> > tmp_34_0_0_t_fu_662_p2;
    sc_signal< sc_lv<2> > tmp_34_0_0_t_reg_1224;
    sc_signal< sc_lv<2> > tmp_34_0_2_t_fu_667_p2;
    sc_signal< sc_lv<2> > tmp_34_0_2_t_reg_1231;
    sc_signal< sc_lv<12> > cols_assign_cast_fu_672_p1;
    sc_signal< sc_lv<12> > cols_assign_cast_reg_1238;
    sc_signal< bool > ap_block_state23_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state25_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state27_pp1_stage0_iter2;
    sc_signal< bool > ap_block_state29_pp1_stage0_iter3;
    sc_signal< sc_logic > ap_sig_ioackin_gmem1_WREADY;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > tmp_16_fu_676_p2;
    sc_signal< sc_lv<11> > j_2_fu_682_p2;
    sc_signal< sc_lv<11> > j_2_reg_1247;
    sc_signal< sc_lv<1> > or_cond2_fu_710_p2;
    sc_signal< sc_lv<1> > or_cond2_reg_1253;
    sc_signal< sc_lv<1> > or_cond2_reg_1253_pp1_iter1_reg;
    sc_signal< sc_lv<1> > or_cond2_reg_1253_pp1_iter2_reg;
    sc_signal< sc_lv<11> > cache_0_addr_2_reg_1259;
    sc_signal< sc_lv<11> > cache_1_addr_2_reg_1265;
    sc_signal< sc_lv<11> > cache_2_addr_1_reg_1271;
    sc_signal< sc_lv<11> > cache_3_addr_1_reg_1277;
    sc_signal< bool > ap_block_state24_pp1_stage1_iter0;
    sc_signal< bool > ap_block_state26_pp1_stage1_iter1;
    sc_signal< bool > ap_block_state28_pp1_stage1_iter2;
    sc_signal< bool > ap_block_pp1_stage1_11001;
    sc_signal< sc_lv<8> > tmp_35_fu_741_p6;
    sc_signal< sc_lv<8> > tmp_35_reg_1303;
    sc_signal< sc_lv<8> > tmp_36_fu_754_p6;
    sc_signal< sc_lv<8> > tmp_36_reg_1308;
    sc_signal< sc_lv<8> > gmem0_addr_1_read_reg_1333;
    sc_signal< sc_lv<8> > tmp_32_fu_774_p6;
    sc_signal< sc_lv<8> > tmp_32_reg_1341;
    sc_signal< sc_lv<8> > tmp_33_fu_787_p6;
    sc_signal< sc_lv<8> > tmp_33_reg_1347;
    sc_signal< sc_lv<8> > tmp_34_fu_800_p6;
    sc_signal< sc_lv<8> > tmp_34_reg_1352;
    sc_signal< sc_lv<8> > cache_0_q0;
    sc_signal< sc_lv<8> > cache_0_load_2_reg_1358;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_lv<8> > cache_1_q0;
    sc_signal< sc_lv<8> > cache_1_load_2_reg_1365;
    sc_signal< sc_lv<8> > cache_2_q1;
    sc_signal< sc_lv<8> > cache_2_load_2_reg_1372;
    sc_signal< sc_lv<8> > cache_3_q1;
    sc_signal< sc_lv<8> > cache_3_load_2_reg_1379;
    sc_signal< sc_lv<11> > x_weight_0_2_fu_852_p2;
    sc_signal< sc_lv<11> > x_weight_0_2_reg_1386;
    sc_signal< sc_lv<11> > y_weight_1_2_fu_896_p2;
    sc_signal< sc_lv<11> > y_weight_1_2_reg_1391;
    sc_signal< sc_lv<8> > tmp_37_fu_902_p6;
    sc_signal< sc_lv<8> > tmp_37_reg_1396;
    sc_signal< sc_lv<8> > tmp_38_fu_915_p1;
    sc_signal< sc_lv<8> > tmp_38_reg_1401;
    sc_signal< sc_lv<8> > tmp_39_fu_919_p6;
    sc_signal< sc_lv<8> > tmp_39_reg_1406;
    sc_signal< sc_lv<8> > tmp_43_fu_934_p6;
    sc_signal< sc_lv<8> > tmp_43_reg_1411;
    sc_signal< sc_lv<9> > tmp19_fu_947_p2;
    sc_signal< sc_lv<9> > tmp19_reg_1417;
    sc_signal< sc_lv<8> > tmp20_fu_953_p2;
    sc_signal< sc_lv<8> > tmp20_reg_1422;
    sc_signal< sc_lv<1> > tmp_19_fu_1001_p2;
    sc_signal< sc_lv<1> > tmp_19_reg_1427;
    sc_signal< sc_lv<8> > tmp_40_fu_1011_p2;
    sc_signal< sc_lv<8> > tmp_40_reg_1432;
    sc_signal< sc_lv<8> > tmp_41_fu_1016_p2;
    sc_signal< sc_lv<8> > tmp_41_reg_1437;
    sc_signal< sc_lv<1> > tmp_22_fu_1022_p2;
    sc_signal< sc_lv<1> > tmp_22_reg_1442;
    sc_signal< sc_lv<8> > tmp_45_fu_1028_p1;
    sc_signal< sc_lv<8> > tmp_45_reg_1447;
    sc_signal< sc_lv<8> > tmp_46_fu_1032_p2;
    sc_signal< sc_lv<8> > tmp_46_reg_1452;
    sc_signal< sc_lv<8> > val_fu_1104_p3;
    sc_signal< sc_lv<8> > val_reg_1457;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state23;
    sc_signal< bool > ap_block_pp1_stage1_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_lv<11> > cache_0_address0;
    sc_signal< sc_logic > cache_0_ce0;
    sc_signal< sc_logic > cache_0_we0;
    sc_signal< sc_lv<11> > cache_0_address1;
    sc_signal< sc_logic > cache_0_ce1;
    sc_signal< sc_logic > cache_0_we1;
    sc_signal< sc_lv<8> > cache_0_q1;
    sc_signal< sc_lv<11> > cache_1_address0;
    sc_signal< sc_logic > cache_1_ce0;
    sc_signal< sc_logic > cache_1_we0;
    sc_signal< sc_lv<11> > cache_1_address1;
    sc_signal< sc_logic > cache_1_ce1;
    sc_signal< sc_logic > cache_1_we1;
    sc_signal< sc_lv<8> > cache_1_q1;
    sc_signal< sc_lv<11> > cache_2_address0;
    sc_signal< sc_logic > cache_2_ce0;
    sc_signal< sc_lv<8> > cache_2_q0;
    sc_signal< sc_lv<11> > cache_2_address1;
    sc_signal< sc_logic > cache_2_ce1;
    sc_signal< sc_logic > cache_2_we1;
    sc_signal< sc_lv<11> > cache_3_address0;
    sc_signal< sc_logic > cache_3_ce0;
    sc_signal< sc_lv<8> > cache_3_q0;
    sc_signal< sc_lv<11> > cache_3_address1;
    sc_signal< sc_logic > cache_3_ce1;
    sc_signal< sc_logic > cache_3_we1;
    sc_signal< sc_lv<2> > i_reg_344;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<11> > rows_assign_reg_366;
    sc_signal< sc_lv<11> > ap_phi_mux_cols_assign_phi_fu_381_p4;
    sc_signal< sc_lv<64> > tmp_15_fu_493_p1;
    sc_signal< sc_lv<64> > tmp_29_1_fu_716_p1;
    sc_signal< sc_lv<64> > tmp_24_fu_733_p1;
    sc_signal< sc_lv<64> > tmp_29_2_fu_767_p1;
    sc_signal< sc_lv<64> > inter_pix2_sum_cast_fu_471_p1;
    sc_signal< sc_lv<64> > out_pix4_sum_cast_fu_596_p1;
    sc_signal< sc_lv<64> > inter_pix2_sum6_cast_fu_647_p1;
    sc_signal< sc_logic > ap_reg_ioackin_gmem0_ARREADY;
    sc_signal< sc_logic > ap_sig_ioackin_gmem0_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_gmem1_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_gmem1_WREADY;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< sc_lv<30> > tmp_1_fu_388_p4;
    sc_signal< sc_lv<1> > tmp_12_fu_418_p1;
    sc_signal< sc_lv<12> > p_shl_fu_422_p3;
    sc_signal< sc_lv<8> > p_shl9_fu_434_p3;
    sc_signal< sc_lv<13> > p_shl_cast_fu_430_p1;
    sc_signal< sc_lv<13> > p_shl9_cast_fu_442_p1;
    sc_signal< sc_lv<13> > tmp_2_fu_446_p2;
    sc_signal< sc_lv<32> > tmp_13_fu_458_p1;
    sc_signal< sc_lv<34> > tmp_29_cast_fu_462_p1;
    sc_signal< sc_lv<34> > inter_pix2_sum_fu_466_p2;
    sc_signal< sc_lv<22> > p_shl1_fu_523_p3;
    sc_signal< sc_lv<18> > p_shl2_fu_535_p3;
    sc_signal< sc_lv<23> > p_shl1_cast_fu_531_p1;
    sc_signal< sc_lv<23> > p_shl2_cast_fu_543_p1;
    sc_signal< sc_lv<11> > tmp_9_fu_557_p2;
    sc_signal< sc_lv<1> > tmp_27_fu_563_p2;
    sc_signal< sc_lv<11> > tmp_28_fu_569_p2;
    sc_signal< sc_lv<23> > tmp_8_fu_547_p2;
    sc_signal< sc_lv<32> > tmp_29_fu_583_p1;
    sc_signal< sc_lv<33> > tmp_35_cast_fu_587_p1;
    sc_signal< sc_lv<33> > out_pix4_sum_fu_591_p2;
    sc_signal< sc_lv<22> > p_shl3_fu_606_p3;
    sc_signal< sc_lv<18> > p_shl4_fu_617_p3;
    sc_signal< sc_lv<23> > p_shl3_cast_fu_613_p1;
    sc_signal< sc_lv<23> > p_shl4_cast_fu_624_p1;
    sc_signal< sc_lv<23> > tmp_10_fu_628_p2;
    sc_signal< sc_lv<32> > tmp_30_fu_634_p1;
    sc_signal< sc_lv<34> > tmp_46_cast_fu_638_p1;
    sc_signal< sc_lv<34> > inter_pix2_sum6_fu_642_p2;
    sc_signal< sc_lv<1> > tmp_18_fu_694_p2;
    sc_signal< sc_lv<1> > tmp_17_fu_688_p2;
    sc_signal< sc_lv<1> > tmp16_fu_705_p2;
    sc_signal< sc_lv<1> > tmp15_fu_700_p2;
    sc_signal< sc_lv<12> > tmp_23_fu_724_p2;
    sc_signal< sc_lv<32> > tmp_23_cast_fu_729_p1;
    sc_signal< sc_lv<9> > p_shl5_fu_819_p3;
    sc_signal< sc_lv<10> > p_shl5_cast_fu_826_p1;
    sc_signal< sc_lv<10> > tmp_39_0_1_fu_830_p2;
    sc_signal< sc_lv<11> > tmp_39_0_1_cast_fu_836_p1;
    sc_signal< sc_lv<11> > tmp_361_cast_fu_816_p1;
    sc_signal< sc_lv<11> > x_weight_0_1_fu_840_p2;
    sc_signal< sc_lv<11> > tmp_36_0_2_cast_fu_849_p1;
    sc_signal< sc_lv<9> > tmp_361_cast1_fu_813_p1;
    sc_signal< sc_lv<9> > tmp_36_0_2_cast1_fu_846_p1;
    sc_signal< sc_lv<9> > y_weight_0_2_fu_858_p2;
    sc_signal< sc_lv<9> > tmp_41_1_fu_868_p3;
    sc_signal< sc_lv<11> > y_weight_0_2_cast_fu_864_p1;
    sc_signal< sc_lv<11> > tmp_41_1_cast_fu_875_p1;
    sc_signal< sc_lv<9> > p_shl6_fu_885_p3;
    sc_signal< sc_lv<11> > y_weight_1_1_fu_879_p2;
    sc_signal< sc_lv<11> > p_shl6_cast_fu_892_p1;
    sc_signal< sc_lv<9> > tmp_36_2_2_cast1_fu_943_p1;
    sc_signal< sc_lv<9> > tmp_36_2_cast1_fu_911_p1;
    sc_signal< sc_lv<8> > tmp_42_fu_928_p2;
    sc_signal< sc_lv<9> > tmp_39_2_1_fu_962_p3;
    sc_signal< sc_lv<11> > tmp_36_2_cast_fu_959_p1;
    sc_signal< sc_lv<11> > tmp_39_2_1_cast_fu_969_p1;
    sc_signal< sc_lv<11> > tmp18_fu_981_p2;
    sc_signal< sc_lv<11> > tmp19_cast_fu_986_p1;
    sc_signal< sc_lv<11> > y_weight_2_1_fu_973_p2;
    sc_signal< sc_lv<11> > tmp_36_2_2_cast_fu_978_p1;
    sc_signal< sc_lv<11> > x_weight_2_2_fu_989_p2;
    sc_signal< sc_lv<8> > tmp21_fu_1007_p2;
    sc_signal< sc_lv<11> > y_weight_2_2_fu_995_p2;
    sc_signal< sc_lv<8> > tmp_44_fu_1038_p3;
    sc_signal< sc_lv<8> > tmp_47_fu_1043_p3;
    sc_signal< sc_lv<8> > tmp_25_fu_1048_p2;
    sc_signal< sc_lv<1> > tmp_31_fu_1066_p2;
    sc_signal< sc_lv<8> > edge_val_fu_1054_p2;
    sc_signal< sc_lv<1> > tmp_26_fu_1060_p2;
    sc_signal< sc_lv<1> > sel_tmp1_fu_1080_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_1085_p2;
    sc_signal< sc_lv<1> > tmp_48_fu_1099_p2;
    sc_signal< sc_lv<8> > sel_tmp_fu_1091_p3;
    sc_signal< sc_lv<8> > p_i_fu_1072_p3;
    sc_signal< sc_lv<27> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<27> ap_ST_fsm_state1;
    static const sc_lv<27> ap_ST_fsm_state2;
    static const sc_lv<27> ap_ST_fsm_state3;
    static const sc_lv<27> ap_ST_fsm_state4;
    static const sc_lv<27> ap_ST_fsm_state5;
    static const sc_lv<27> ap_ST_fsm_state6;
    static const sc_lv<27> ap_ST_fsm_state7;
    static const sc_lv<27> ap_ST_fsm_state8;
    static const sc_lv<27> ap_ST_fsm_state9;
    static const sc_lv<27> ap_ST_fsm_pp0_stage0;
    static const sc_lv<27> ap_ST_fsm_state13;
    static const sc_lv<27> ap_ST_fsm_state14;
    static const sc_lv<27> ap_ST_fsm_state15;
    static const sc_lv<27> ap_ST_fsm_state16;
    static const sc_lv<27> ap_ST_fsm_state17;
    static const sc_lv<27> ap_ST_fsm_state18;
    static const sc_lv<27> ap_ST_fsm_state19;
    static const sc_lv<27> ap_ST_fsm_state20;
    static const sc_lv<27> ap_ST_fsm_state21;
    static const sc_lv<27> ap_ST_fsm_state22;
    static const sc_lv<27> ap_ST_fsm_pp1_stage0;
    static const sc_lv<27> ap_ST_fsm_pp1_stage1;
    static const sc_lv<27> ap_ST_fsm_state30;
    static const sc_lv<27> ap_ST_fsm_state31;
    static const sc_lv<27> ap_ST_fsm_state32;
    static const sc_lv<27> ap_ST_fsm_state33;
    static const sc_lv<27> ap_ST_fsm_state34;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_9;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_1A;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_GMEM0_USER_VALUE;
    static const int C_M_AXI_GMEM0_PROT_VALUE;
    static const int C_M_AXI_GMEM0_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_GMEM1_USER_VALUE;
    static const int C_M_AXI_GMEM1_PROT_VALUE;
    static const int C_M_AXI_GMEM1_CACHE_VALUE;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_780;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<11> ap_const_lv11_780;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<11> ap_const_lv11_438;
    static const sc_lv<11> ap_const_lv11_437;
    static const sc_lv<11> ap_const_lv11_2;
    static const sc_lv<11> ap_const_lv11_3CA;
    static const sc_lv<11> ap_const_lv11_77F;
    static const sc_lv<12> ap_const_lv12_FFF;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_37;
    static const sc_lv<8> ap_const_lv8_9B;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const8();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp1_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp1_stage1();
    void thread_ap_block_pp1_stage1_11001();
    void thread_ap_block_pp1_stage1_subdone();
    void thread_ap_block_state10_pp0_stage0_iter0();
    void thread_ap_block_state11_pp0_stage0_iter1();
    void thread_ap_block_state12_pp0_stage0_iter2();
    void thread_ap_block_state23_pp1_stage0_iter0();
    void thread_ap_block_state24_pp1_stage1_iter0();
    void thread_ap_block_state25_pp1_stage0_iter1();
    void thread_ap_block_state26_pp1_stage1_iter1();
    void thread_ap_block_state27_pp1_stage0_iter2();
    void thread_ap_block_state28_pp1_stage1_iter2();
    void thread_ap_block_state29_pp1_stage0_iter3();
    void thread_ap_condition_pp0_exit_iter0_state10();
    void thread_ap_condition_pp1_exit_iter0_state23();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_cols_assign_phi_fu_381_p4();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_gmem0_ARREADY();
    void thread_ap_sig_ioackin_gmem1_AWREADY();
    void thread_ap_sig_ioackin_gmem1_WREADY();
    void thread_cache_0_address0();
    void thread_cache_0_address1();
    void thread_cache_0_ce0();
    void thread_cache_0_ce1();
    void thread_cache_0_we0();
    void thread_cache_0_we1();
    void thread_cache_1_address0();
    void thread_cache_1_address1();
    void thread_cache_1_ce0();
    void thread_cache_1_ce1();
    void thread_cache_1_we0();
    void thread_cache_1_we1();
    void thread_cache_2_address0();
    void thread_cache_2_address1();
    void thread_cache_2_ce0();
    void thread_cache_2_ce1();
    void thread_cache_2_we1();
    void thread_cache_3_address0();
    void thread_cache_3_address1();
    void thread_cache_3_ce0();
    void thread_cache_3_ce1();
    void thread_cache_3_we1();
    void thread_cols_assign_cast_fu_672_p1();
    void thread_cond_fu_452_p2();
    void thread_edge_val_fu_1054_p2();
    void thread_gmem0_ARADDR();
    void thread_gmem0_ARVALID();
    void thread_gmem0_RREADY();
    void thread_gmem0_blk_n_AR();
    void thread_gmem0_blk_n_R();
    void thread_gmem1_AWVALID();
    void thread_gmem1_BREADY();
    void thread_gmem1_WDATA();
    void thread_gmem1_WVALID();
    void thread_gmem1_blk_n_AW();
    void thread_gmem1_blk_n_B();
    void thread_gmem1_blk_n_W();
    void thread_i_1_fu_412_p2();
    void thread_i_2_fu_505_p2();
    void thread_inter_pix2_sum6_cast_fu_647_p1();
    void thread_inter_pix2_sum6_fu_642_p2();
    void thread_inter_pix2_sum_cast_fu_471_p1();
    void thread_inter_pix2_sum_fu_466_p2();
    void thread_j_1_fu_487_p2();
    void thread_j_2_fu_682_p2();
    void thread_or_cond2_fu_710_p2();
    void thread_out_pix4_sum_cast_fu_596_p1();
    void thread_out_pix4_sum_fu_591_p2();
    void thread_p_i_fu_1072_p3();
    void thread_p_shl1_cast_fu_531_p1();
    void thread_p_shl1_fu_523_p3();
    void thread_p_shl2_cast_fu_543_p1();
    void thread_p_shl2_fu_535_p3();
    void thread_p_shl3_cast_fu_613_p1();
    void thread_p_shl3_fu_606_p3();
    void thread_p_shl4_cast_fu_624_p1();
    void thread_p_shl4_fu_617_p3();
    void thread_p_shl5_cast_fu_826_p1();
    void thread_p_shl5_fu_819_p3();
    void thread_p_shl6_cast_fu_892_p1();
    void thread_p_shl6_fu_885_p3();
    void thread_p_shl9_cast_fu_442_p1();
    void thread_p_shl9_fu_434_p3();
    void thread_p_shl_cast_fu_430_p1();
    void thread_p_shl_fu_422_p3();
    void thread_sel_tmp1_fu_1080_p2();
    void thread_sel_tmp2_fu_1085_p2();
    void thread_sel_tmp_fu_1091_p3();
    void thread_tmp15_fu_700_p2();
    void thread_tmp16_fu_705_p2();
    void thread_tmp18_fu_981_p2();
    void thread_tmp19_cast_fu_986_p1();
    void thread_tmp19_fu_947_p2();
    void thread_tmp20_fu_953_p2();
    void thread_tmp21_fu_1007_p2();
    void thread_tmp_10_fu_628_p2();
    void thread_tmp_11_t_fu_657_p2();
    void thread_tmp_12_fu_418_p1();
    void thread_tmp_13_fu_458_p1();
    void thread_tmp_14_fu_553_p1();
    void thread_tmp_15_fu_493_p1();
    void thread_tmp_16_fu_676_p2();
    void thread_tmp_17_fu_688_p2();
    void thread_tmp_18_fu_694_p2();
    void thread_tmp_19_fu_1001_p2();
    void thread_tmp_1_cast_fu_398_p1();
    void thread_tmp_1_fu_388_p4();
    void thread_tmp_22_fu_1022_p2();
    void thread_tmp_23_cast_fu_729_p1();
    void thread_tmp_23_fu_724_p2();
    void thread_tmp_24_fu_733_p1();
    void thread_tmp_25_fu_1048_p2();
    void thread_tmp_26_fu_1060_p2();
    void thread_tmp_27_cast_fu_402_p1();
    void thread_tmp_27_fu_563_p2();
    void thread_tmp_28_fu_569_p2();
    void thread_tmp_29_1_fu_716_p1();
    void thread_tmp_29_2_fu_767_p1();
    void thread_tmp_29_cast_fu_462_p1();
    void thread_tmp_29_fu_583_p1();
    void thread_tmp_2_fu_446_p2();
    void thread_tmp_30_fu_634_p1();
    void thread_tmp_31_fu_1066_p2();
    void thread_tmp_34_0_0_t_fu_662_p2();
    void thread_tmp_34_0_2_t_fu_667_p2();
    void thread_tmp_35_cast_fu_587_p1();
    void thread_tmp_361_cast1_fu_813_p1();
    void thread_tmp_361_cast_fu_816_p1();
    void thread_tmp_36_0_2_cast1_fu_846_p1();
    void thread_tmp_36_0_2_cast_fu_849_p1();
    void thread_tmp_36_2_2_cast1_fu_943_p1();
    void thread_tmp_36_2_2_cast_fu_978_p1();
    void thread_tmp_36_2_cast1_fu_911_p1();
    void thread_tmp_36_2_cast_fu_959_p1();
    void thread_tmp_38_fu_915_p1();
    void thread_tmp_39_0_1_cast_fu_836_p1();
    void thread_tmp_39_0_1_fu_830_p2();
    void thread_tmp_39_2_1_cast_fu_969_p1();
    void thread_tmp_39_2_1_fu_962_p3();
    void thread_tmp_40_fu_1011_p2();
    void thread_tmp_41_1_cast_fu_875_p1();
    void thread_tmp_41_1_fu_868_p3();
    void thread_tmp_41_fu_1016_p2();
    void thread_tmp_42_fu_928_p2();
    void thread_tmp_44_fu_1038_p3();
    void thread_tmp_45_fu_1028_p1();
    void thread_tmp_46_cast_fu_638_p1();
    void thread_tmp_46_fu_1032_p2();
    void thread_tmp_47_fu_1043_p3();
    void thread_tmp_48_fu_1099_p2();
    void thread_tmp_4_fu_499_p2();
    void thread_tmp_5_fu_481_p2();
    void thread_tmp_6_fu_511_p2();
    void thread_tmp_7_fu_517_p2();
    void thread_tmp_8_fu_547_p2();
    void thread_tmp_9_fu_557_p2();
    void thread_tmp_fu_406_p2();
    void thread_tmp_s_fu_575_p3();
    void thread_val_fu_1104_p3();
    void thread_x_weight_0_1_fu_840_p2();
    void thread_x_weight_0_2_fu_852_p2();
    void thread_x_weight_2_2_fu_989_p2();
    void thread_y_weight_0_2_cast_fu_864_p1();
    void thread_y_weight_0_2_fu_858_p2();
    void thread_y_weight_1_1_fu_879_p2();
    void thread_y_weight_1_2_fu_896_p2();
    void thread_y_weight_2_1_fu_973_p2();
    void thread_y_weight_2_2_fu_995_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
