// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sobel_filter,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.811400,HLS_SYN_LAT=53967659,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=2373,HLS_SYN_LUT=3908}" *)

module sobel_filter (
        ap_clk,
        ap_rst_n,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 55'd1;
parameter    ap_ST_fsm_pp0_stage0 = 55'd2;
parameter    ap_ST_fsm_pp0_stage1 = 55'd4;
parameter    ap_ST_fsm_pp0_stage2 = 55'd8;
parameter    ap_ST_fsm_pp0_stage3 = 55'd16;
parameter    ap_ST_fsm_pp0_stage4 = 55'd32;
parameter    ap_ST_fsm_pp0_stage5 = 55'd64;
parameter    ap_ST_fsm_pp0_stage6 = 55'd128;
parameter    ap_ST_fsm_pp0_stage7 = 55'd256;
parameter    ap_ST_fsm_pp0_stage8 = 55'd512;
parameter    ap_ST_fsm_pp0_stage9 = 55'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 55'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 55'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 55'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 55'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 55'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 55'd65536;
parameter    ap_ST_fsm_pp0_stage16 = 55'd131072;
parameter    ap_ST_fsm_pp0_stage17 = 55'd262144;
parameter    ap_ST_fsm_pp0_stage18 = 55'd524288;
parameter    ap_ST_fsm_pp0_stage19 = 55'd1048576;
parameter    ap_ST_fsm_pp0_stage20 = 55'd2097152;
parameter    ap_ST_fsm_pp0_stage21 = 55'd4194304;
parameter    ap_ST_fsm_pp0_stage22 = 55'd8388608;
parameter    ap_ST_fsm_pp0_stage23 = 55'd16777216;
parameter    ap_ST_fsm_pp0_stage24 = 55'd33554432;
parameter    ap_ST_fsm_state44 = 55'd67108864;
parameter    ap_ST_fsm_pp1_stage0 = 55'd134217728;
parameter    ap_ST_fsm_state47 = 55'd268435456;
parameter    ap_ST_fsm_state48 = 55'd536870912;
parameter    ap_ST_fsm_state49 = 55'd1073741824;
parameter    ap_ST_fsm_state50 = 55'd2147483648;
parameter    ap_ST_fsm_state51 = 55'd4294967296;
parameter    ap_ST_fsm_pp2_stage0 = 55'd8589934592;
parameter    ap_ST_fsm_state54 = 55'd17179869184;
parameter    ap_ST_fsm_state55 = 55'd34359738368;
parameter    ap_ST_fsm_state56 = 55'd68719476736;
parameter    ap_ST_fsm_state57 = 55'd137438953472;
parameter    ap_ST_fsm_state58 = 55'd274877906944;
parameter    ap_ST_fsm_pp3_stage0 = 55'd549755813888;
parameter    ap_ST_fsm_state67 = 55'd1099511627776;
parameter    ap_ST_fsm_pp4_stage0 = 55'd2199023255552;
parameter    ap_ST_fsm_state76 = 55'd4398046511104;
parameter    ap_ST_fsm_state77 = 55'd8796093022208;
parameter    ap_ST_fsm_state78 = 55'd17592186044416;
parameter    ap_ST_fsm_state79 = 55'd35184372088832;
parameter    ap_ST_fsm_state80 = 55'd70368744177664;
parameter    ap_ST_fsm_state81 = 55'd140737488355328;
parameter    ap_ST_fsm_state82 = 55'd281474976710656;
parameter    ap_ST_fsm_pp5_stage0 = 55'd562949953421312;
parameter    ap_ST_fsm_state86 = 55'd1125899906842624;
parameter    ap_ST_fsm_state87 = 55'd2251799813685248;
parameter    ap_ST_fsm_state88 = 55'd4503599627370496;
parameter    ap_ST_fsm_state89 = 55'd9007199254740992;
parameter    ap_ST_fsm_state90 = 55'd18014398509481984;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM1_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_USER_VALUE = 0;
parameter    C_M_AXI_GMEM1_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM1_CACHE_VALUE = 3;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM1_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_AWADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_AWID;
output  [7:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [C_M_AXI_GMEM1_AWUSER_WIDTH - 1:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_WDATA;
output  [C_M_AXI_GMEM1_WSTRB_WIDTH - 1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_WID;
output  [C_M_AXI_GMEM1_WUSER_WIDTH - 1:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_ARADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_ARID;
output  [7:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [C_M_AXI_GMEM1_ARUSER_WIDTH - 1:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_RID;
input  [C_M_AXI_GMEM1_RUSER_WIDTH - 1:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_BID;
input  [C_M_AXI_GMEM1_BUSER_WIDTH - 1:0] m_axi_gmem1_BUSER;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [54:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] inter_pix;
wire   [31:0] out_pix;
reg    gmem0_blk_n_AR;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage2;
reg   [0:0] exitcond_flatten_reg_1587;
reg   [0:0] tmp_1_mid2_reg_1603;
reg    gmem0_blk_n_R;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
reg   [0:0] or_cond_mid2_reg_1613;
reg    gmem1_blk_n_AW;
wire    ap_CS_fsm_state44;
reg    gmem1_blk_n_B;
wire    ap_CS_fsm_state51;
reg    gmem1_blk_n_W;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] tmp_10_reg_1818;
wire    ap_CS_fsm_pp0_stage10;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage10;
reg   [0:0] tmp_1_mid2_reg_1603_pp0_iter1_reg;
reg   [0:0] or_cond_mid2_reg_1613_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] exitcond2_reg_1838;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] tmp_20_reg_1847;
reg    ap_enable_reg_pp3_iter2;
reg   [0:0] tmp_20_reg_1847_pp3_iter1_reg;
reg    ap_enable_reg_pp3_iter7;
reg   [0:0] tmp_20_reg_1847_pp3_iter6_reg;
reg    gmem1_blk_n_AR;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state82;
reg    gmem1_blk_n_R;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_pp5_stage0;
reg   [0:0] exitcond1_reg_1894;
reg    ap_enable_reg_pp5_iter2;
reg   [0:0] exitcond1_reg_1894_pp5_iter1_reg;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp4_stage0;
reg   [0:0] tmp_31_reg_1867;
reg    ap_enable_reg_pp4_iter2;
reg   [0:0] tmp_31_reg_1867_pp4_iter1_reg;
reg    ap_enable_reg_pp4_iter7;
reg   [0:0] tmp_31_reg_1867_pp4_iter6_reg;
wire    gmem0_AWREADY;
wire    gmem0_WREADY;
reg    gmem0_ARVALID;
wire    gmem0_ARREADY;
reg   [31:0] gmem0_ARADDR;
wire    gmem0_RVALID;
reg    gmem0_RREADY;
wire   [7:0] gmem0_RDATA;
wire    gmem0_RLAST;
wire   [0:0] gmem0_RID;
wire   [0:0] gmem0_RUSER;
wire   [1:0] gmem0_RRESP;
wire    gmem0_BVALID;
wire   [1:0] gmem0_BRESP;
wire   [0:0] gmem0_BID;
wire   [0:0] gmem0_BUSER;
reg    gmem1_AWVALID;
wire    gmem1_AWREADY;
reg   [31:0] gmem1_AWADDR;
reg   [31:0] gmem1_AWLEN;
reg    gmem1_WVALID;
wire    gmem1_WREADY;
reg   [31:0] gmem1_WDATA;
reg    gmem1_ARVALID;
wire    gmem1_ARREADY;
wire   [31:0] gmem1_ARADDR;
wire    gmem1_RVALID;
reg    gmem1_RREADY;
wire   [31:0] gmem1_RDATA;
wire    gmem1_RLAST;
wire   [0:0] gmem1_RID;
wire   [0:0] gmem1_RUSER;
wire   [1:0] gmem1_RRESP;
wire    gmem1_BVALID;
reg    gmem1_BREADY;
wire   [1:0] gmem1_BRESP;
wire   [0:0] gmem1_BID;
wire   [0:0] gmem1_BUSER;
reg   [20:0] indvar_flatten_reg_356;
reg   [10:0] i_reg_367;
reg   [10:0] j_reg_378;
reg   [10:0] i1_reg_389;
reg   [15:0] i2_reg_400;
reg   [20:0] i3_reg_411;
reg   [20:0] i4_reg_422;
reg   [20:0] i5_reg_433;
wire   [13:0] grp_fu_466_p2;
reg   [13:0] reg_470;
reg    ap_predicate_op215_read_state11;
reg    ap_predicate_op218_read_state11;
reg    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_state36_pp0_stage9_iter1;
reg    ap_sig_ioackin_gmem1_AWREADY;
reg    ap_predicate_op326_writereq_state36;
reg    ap_block_state36_io;
reg    ap_block_pp0_stage9_11001;
wire   [7:0] grp_getVal_fu_444_ap_return;
reg   [7:0] reg_475;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state14_pp0_stage12_iter0;
wire    ap_block_state39_pp0_stage12_iter1;
wire    ap_block_pp0_stage12_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_state35_pp0_stage8_iter1;
wire    ap_block_pp0_stage8_11001;
wire   [29:0] out_pix3_fu_479_p4;
reg   [29:0] out_pix3_reg_1557;
wire   [30:0] tmp_cast1_fu_493_p1;
reg   [30:0] tmp_cast1_reg_1562;
wire   [32:0] tmp_cast_fu_497_p1;
reg   [32:0] tmp_cast_reg_1569;
reg   [31:0] gmem1_addr_reg_1575;
wire  signed [33:0] tmp_5_cast_fu_507_p1;
reg  signed [33:0] tmp_5_cast_reg_1581;
wire   [0:0] exitcond_flatten_fu_635_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state27_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [20:0] indvar_flatten_next_fu_641_p2;
reg   [20:0] indvar_flatten_next_reg_1591;
wire   [10:0] j_mid2_fu_653_p3;
reg   [10:0] j_mid2_reg_1596;
wire   [0:0] tmp_1_mid2_fu_677_p3;
wire   [22:0] tmp_2_mid2_fu_715_p3;
reg   [22:0] tmp_2_mid2_reg_1607;
wire   [0:0] or_cond_mid2_fu_741_p3;
wire   [13:0] tmp_6_mid2_fu_779_p3;
reg   [13:0] tmp_6_mid2_reg_1617;
wire   [13:0] tmp_9_mid2_fu_823_p3;
reg   [13:0] tmp_9_mid2_reg_1622;
wire   [10:0] i_mid2_fu_831_p3;
reg   [10:0] i_mid2_reg_1627;
reg   [31:0] gmem1_addr_3_reg_1632;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state28_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] gmem1_addr_3_reg_1632_pp0_iter1_reg;
reg   [31:0] gmem0_addr_1_reg_1638;
reg   [31:0] gmem1_addr_2_reg_1644;
reg   [31:0] gmem1_addr_2_reg_1644_pp0_iter1_reg;
wire  signed [31:0] tmp_13_cast_fu_919_p1;
reg  signed [31:0] tmp_13_cast_reg_1650;
reg   [31:0] gmem0_addr_reg_1655;
reg   [7:0] gmem0_addr_1_read_reg_1661;
wire   [13:0] tmp_15_fu_946_p2;
reg   [13:0] tmp_15_reg_1666;
reg   [7:0] gmem0_addr_read_reg_1671;
wire   [10:0] j_1_fu_951_p2;
reg   [10:0] j_1_reg_1676;
reg   [7:0] tmp_17_reg_1681;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state15_pp0_stage13_iter0;
wire    ap_block_state40_pp0_stage13_iter1;
wire    ap_block_pp0_stage13_11001;
reg   [7:0] tmp_51_reg_1686;
wire    ap_block_state17_pp0_stage15_iter0;
reg    ap_predicate_op373_writeresp_state42;
reg    ap_block_state42_pp0_stage15_iter1;
reg    ap_block_pp0_stage15_11001;
reg   [7:0] tmp_18_reg_1691;
wire    ap_block_state18_pp0_stage16_iter0;
reg    ap_predicate_op376_writeresp_state43;
reg    ap_block_state43_pp0_stage16_iter1;
reg    ap_block_pp0_stage16_11001;
reg   [7:0] tmp_52_reg_1696;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state20_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_11001;
reg   [7:0] tmp_19_reg_1701;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_state21_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_11001;
reg   [7:0] tmp_53_reg_1706;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_state23_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_11001;
reg   [7:0] tmp_21_reg_1711;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_state24_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_11001;
reg   [7:0] tmp_54_reg_1716;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_state26_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_11001;
reg   [7:0] tmp_23_reg_1721;
reg   [7:0] tmp_55_reg_1726;
wire    ap_block_state4_pp0_stage2_iter0;
reg    ap_sig_ioackin_gmem0_ARREADY;
reg    ap_predicate_op195_readreq_state4;
reg    ap_predicate_op196_readreq_state4;
reg    ap_block_state4_io;
wire    ap_block_state29_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_11001;
reg   [7:0] tmp_24_reg_1731;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state30_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg   [7:0] tmp_56_reg_1736;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_state32_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
reg   [7:0] tmp_27_reg_1741;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_state33_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
wire   [10:0] x_weight_1_1_1_fu_996_p2;
reg   [10:0] x_weight_1_1_1_reg_1746;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_state34_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
wire   [8:0] tmp13_fu_1002_p2;
reg   [8:0] tmp13_reg_1751;
wire   [7:0] tmp_58_fu_1084_p1;
reg   [7:0] tmp_58_reg_1756;
wire   [10:0] y_weight_1_2_2_fu_1094_p2;
reg   [10:0] y_weight_1_2_2_reg_1761;
wire   [0:0] tmp_32_fu_1100_p2;
reg   [0:0] tmp_32_reg_1766;
wire   [7:0] tmp_64_fu_1106_p1;
reg   [7:0] tmp_64_reg_1771;
wire   [10:0] x_weight_127_1_fu_1137_p2;
reg   [10:0] x_weight_127_1_reg_1777;
wire   [8:0] tmp8_fu_1143_p2;
reg   [8:0] tmp8_reg_1782;
wire   [7:0] edge_val_1_i_fu_1222_p3;
reg   [7:0] edge_val_1_i_reg_1787;
wire   [7:0] tmp_36_fu_1306_p1;
reg   [7:0] tmp_36_reg_1792;
wire   [10:0] y_weight_2_2_fu_1316_p2;
reg   [10:0] y_weight_2_2_reg_1797;
wire   [0:0] tmp_22_fu_1322_p2;
reg   [0:0] tmp_22_reg_1802;
wire   [7:0] tmp_42_fu_1328_p1;
reg   [7:0] tmp_42_reg_1807;
wire   [7:0] edge_val_1_i1_fu_1409_p3;
reg   [7:0] edge_val_1_i1_reg_1813;
wire    ap_block_state12_pp0_stage10_iter0;
wire    ap_block_state37_pp0_stage10_iter1;
reg    ap_sig_ioackin_gmem1_WREADY;
reg    ap_predicate_op349_write_state37;
reg    ap_predicate_op363_writereq_state37;
reg    ap_block_state37_io;
reg    ap_block_pp0_stage10_11001;
wire   [0:0] tmp_10_fu_1421_p2;
wire    ap_block_state45_pp1_stage0_iter0;
wire    ap_block_state46_pp1_stage0_iter1;
reg    ap_block_state46_io;
reg    ap_block_pp1_stage0_11001;
wire   [10:0] i_1_fu_1427_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [30:0] out_pix4_sum8_fu_1433_p2;
reg   [30:0] out_pix4_sum8_reg_1827;
wire    ap_CS_fsm_state50;
wire   [0:0] exitcond2_fu_1448_p2;
wire    ap_block_state52_pp2_stage0_iter0;
wire    ap_block_state53_pp2_stage0_iter1;
reg    ap_block_state53_io;
reg    ap_block_pp2_stage0_11001;
wire   [15:0] i_2_fu_1454_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] tmp_20_fu_1460_p2;
wire    ap_block_state59_pp3_stage0_iter0;
wire    ap_block_state60_pp3_stage0_iter1;
reg    ap_block_state60_io;
wire    ap_block_state61_pp3_stage0_iter2;
reg    ap_block_state61_io;
wire    ap_block_state62_pp3_stage0_iter3;
wire    ap_block_state63_pp3_stage0_iter4;
wire    ap_block_state64_pp3_stage0_iter5;
wire    ap_block_state65_pp3_stage0_iter6;
reg    ap_block_state66_pp3_stage0_iter7;
reg    ap_block_pp3_stage0_11001;
reg   [0:0] tmp_20_reg_1847_pp3_iter2_reg;
reg   [0:0] tmp_20_reg_1847_pp3_iter3_reg;
reg   [0:0] tmp_20_reg_1847_pp3_iter4_reg;
reg   [0:0] tmp_20_reg_1847_pp3_iter5_reg;
wire   [30:0] out_pix4_sum1_fu_1470_p2;
reg   [30:0] out_pix4_sum1_reg_1851;
wire   [20:0] i_3_fu_1475_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] tmp_31_fu_1491_p2;
wire    ap_block_state68_pp4_stage0_iter0;
wire    ap_block_state69_pp4_stage0_iter1;
reg    ap_block_state69_io;
wire    ap_block_state70_pp4_stage0_iter2;
reg    ap_block_state70_io;
wire    ap_block_state71_pp4_stage0_iter3;
wire    ap_block_state72_pp4_stage0_iter4;
wire    ap_block_state73_pp4_stage0_iter5;
wire    ap_block_state74_pp4_stage0_iter6;
reg    ap_block_state75_pp4_stage0_iter7;
reg    ap_block_pp4_stage0_11001;
reg   [0:0] tmp_31_reg_1867_pp4_iter2_reg;
reg   [0:0] tmp_31_reg_1867_pp4_iter3_reg;
reg   [0:0] tmp_31_reg_1867_pp4_iter4_reg;
reg   [0:0] tmp_31_reg_1867_pp4_iter5_reg;
wire   [30:0] out_pix4_sum2_fu_1501_p2;
reg   [30:0] out_pix4_sum2_reg_1871;
wire   [20:0] i_4_fu_1506_p2;
reg    ap_enable_reg_pp4_iter0;
reg   [31:0] gmem1_addr_6_reg_1887;
reg    ap_sig_ioackin_gmem1_ARREADY;
wire   [0:0] exitcond1_fu_1532_p2;
wire    ap_block_state83_pp5_stage0_iter0;
reg    ap_block_state84_pp5_stage0_iter1;
wire    ap_block_state85_pp5_stage0_iter2;
reg    ap_block_state85_io;
reg    ap_block_pp5_stage0_11001;
wire   [20:0] i_5_fu_1538_p2;
reg    ap_enable_reg_pp5_iter0;
wire   [7:0] val_fu_1544_p1;
reg   [7:0] val_reg_1903;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage24_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state45;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state52;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state59;
reg    ap_enable_reg_pp3_iter3;
reg    ap_enable_reg_pp3_iter4;
reg    ap_enable_reg_pp3_iter5;
reg    ap_enable_reg_pp3_iter6;
wire    ap_CS_fsm_state67;
reg    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state68;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter4;
reg    ap_enable_reg_pp4_iter5;
reg    ap_enable_reg_pp4_iter6;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state83;
reg   [12:0] superCache_address0;
reg    superCache_ce0;
reg    superCache_we0;
reg   [7:0] superCache_d0;
wire   [7:0] superCache_q0;
wire    grp_getVal_fu_444_ap_start;
wire    grp_getVal_fu_444_ap_done;
wire    grp_getVal_fu_444_ap_idle;
wire    grp_getVal_fu_444_ap_ready;
reg    grp_getVal_fu_444_ap_ce;
reg   [1:0] grp_getVal_fu_444_xDiff;
reg   [1:0] grp_getVal_fu_444_yDiff;
wire   [12:0] grp_getVal_fu_444_Y_address0;
wire    grp_getVal_fu_444_Y_ce0;
reg    ap_predicate_op222_call_state12;
reg    ap_predicate_op231_call_state13;
reg    ap_predicate_op233_call_state14;
reg    ap_predicate_op232_call_state13;
reg    ap_predicate_op234_call_state14;
reg    ap_predicate_op236_call_state15;
reg    ap_predicate_op235_call_state15;
reg    ap_predicate_op237_call_state16;
reg    ap_predicate_op239_call_state17;
reg    ap_predicate_op238_call_state16;
reg    ap_predicate_op240_call_state17;
reg    ap_predicate_op242_call_state18;
reg    ap_predicate_op241_call_state18;
reg    ap_predicate_op243_call_state19;
reg    ap_predicate_op245_call_state20;
reg    ap_predicate_op244_call_state19;
reg    ap_predicate_op246_call_state20;
reg    ap_predicate_op248_call_state21;
reg    ap_predicate_op247_call_state21;
reg    ap_predicate_op249_call_state22;
reg    ap_predicate_op251_call_state23;
reg    ap_predicate_op250_call_state22;
reg    ap_predicate_op252_call_state23;
reg    ap_predicate_op254_call_state24;
reg    ap_predicate_op253_call_state24;
reg    ap_predicate_op255_call_state25;
reg    ap_predicate_op257_call_state26;
reg    ap_predicate_op256_call_state25;
reg    ap_predicate_op258_call_state26;
reg    ap_predicate_op260_call_state27;
reg    ap_predicate_op259_call_state27;
reg    ap_predicate_op261_call_state28;
reg    ap_predicate_op263_call_state29;
reg    ap_predicate_op262_call_state28;
reg    ap_predicate_op264_call_state29;
reg    ap_predicate_op266_call_state30;
reg    ap_predicate_op265_call_state30;
reg    ap_predicate_op267_call_state31;
reg    ap_predicate_op269_call_state32;
reg    ap_predicate_op268_call_state31;
reg    ap_predicate_op270_call_state32;
reg    ap_predicate_op272_call_state33;
reg    ap_predicate_op271_call_state33;
reg    ap_predicate_op281_call_state34;
reg    ap_predicate_op297_call_state35;
reg    ap_predicate_op282_call_state34;
reg    ap_predicate_op312_call_state35;
reg    ap_predicate_op341_call_state36;
wire    ap_block_state13_pp0_stage11_iter0_ignore_call1;
wire    ap_block_state38_pp0_stage11_iter1_ignore_call1;
reg    ap_predicate_op366_write_state38;
reg    ap_block_state38_io;
reg    ap_block_pp0_stage11_11001;
wire    ap_block_state16_pp0_stage14_iter0_ignore_call3;
wire    ap_block_state41_pp0_stage14_iter1_ignore_call3;
wire    ap_block_pp0_stage14_11001;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state19_pp0_stage17_iter0_ignore_call6;
wire    ap_block_pp0_stage17_11001;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state22_pp0_stage20_iter0_ignore_call10;
wire    ap_block_pp0_stage20_11001;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_state25_pp0_stage23_iter0_ignore_call14;
wire    ap_block_pp0_stage23_11001;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_state6_pp0_stage4_iter0_ignore_call26;
wire    ap_block_state31_pp0_stage4_iter1_ignore_call26;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage4;
reg   [20:0] ap_phi_mux_indvar_flatten_phi_fu_360_p4;
wire    ap_block_pp0_stage0;
reg   [10:0] ap_phi_mux_i_phi_fu_371_p4;
reg   [10:0] ap_phi_mux_j_phi_fu_382_p4;
reg    grp_getVal_fu_444_ap_start_reg;
reg    ap_predicate_op222_call_state12_state11;
reg    ap_predicate_op232_call_state13_state12;
reg    ap_predicate_op235_call_state15_state14;
reg    ap_predicate_op238_call_state16_state15;
reg    ap_predicate_op241_call_state18_state17;
reg    ap_predicate_op244_call_state19_state18;
reg    ap_predicate_op247_call_state21_state20;
reg    ap_predicate_op250_call_state22_state21;
reg    ap_predicate_op253_call_state24_state23;
reg    ap_predicate_op256_call_state25_state24;
reg    ap_predicate_op259_call_state27_state26;
reg    ap_predicate_op262_call_state28_state27;
reg    ap_predicate_op265_call_state30_state29;
reg    ap_predicate_op268_call_state31_state30;
reg    ap_predicate_op271_call_state33_state32;
reg    ap_predicate_op282_call_state34_state33;
wire    ap_block_pp0_stage13;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage17;
wire    ap_block_pp0_stage19;
wire    ap_block_pp0_stage20;
wire    ap_block_pp0_stage22;
wire    ap_block_pp0_stage23;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage12;
wire    ap_block_pp0_stage18;
wire    ap_block_pp0_stage21;
wire    ap_block_pp0_stage24;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage8;
wire   [63:0] tmp_16_fu_959_p1;
wire   [63:0] tmp_12_fu_964_p1;
wire   [63:0] tmp_fu_489_p1;
wire   [63:0] out_pix4_sum_cast_fu_863_p1;
wire  signed [63:0] inter_pix2_sum_cast_fu_886_p1;
wire   [63:0] out_pix4_sum5_cast_fu_909_p1;
wire  signed [63:0] inter_pix2_sum6_cast_fu_932_p1;
wire   [63:0] out_pix4_sum8_cast_fu_1438_p1;
wire   [63:0] out_pix4_sum1_cast_fu_1481_p1;
wire   [63:0] out_pix4_sum2_cast_fu_1512_p1;
wire   [63:0] tmp_68_fu_1522_p1;
reg    ap_reg_ioackin_gmem0_ARREADY;
wire    ap_block_pp0_stage2_01001;
reg    ap_reg_ioackin_gmem1_AWREADY;
reg    ap_block_pp0_stage9_01001;
reg    ap_reg_ioackin_gmem1_WREADY;
wire    ap_block_pp0_stage10_01001;
wire   [31:0] tmp_60_fu_1332_p1;
wire    ap_block_state13_pp0_stage11_iter0;
wire    ap_block_state38_pp0_stage11_iter1;
wire    ap_block_pp0_stage11_01001;
wire   [31:0] tmp_47_fu_1417_p1;
wire    ap_block_pp1_stage0_01001;
wire    ap_block_pp2_stage0_01001;
reg    ap_block_pp3_stage0_01001;
reg    ap_block_pp4_stage0_01001;
reg    ap_reg_ioackin_gmem1_ARREADY;
reg    ap_block_pp5_stage0_01001;
wire   [31:0] fourWide_fu_1548_p5;
wire   [22:0] tmp_mid2_fu_839_p2;
wire   [22:0] j_cast1_fu_845_p1;
wire   [13:0] j_cast_fu_942_p1;
wire   [21:0] p_shl1_fu_521_p3;
wire   [17:0] p_shl2_fu_533_p3;
wire   [22:0] p_shl1_cast_fu_529_p1;
wire   [22:0] p_shl2_cast_fu_541_p1;
wire   [0:0] tmp_3_fu_551_p2;
wire   [0:0] tmp_4_fu_557_p2;
wire   [1:0] tmp_5_fu_511_p1;
wire   [12:0] p_shl3_fu_569_p3;
wire   [8:0] p_shl4_fu_581_p3;
wire   [13:0] p_shl3_cast_fu_577_p1;
wire   [13:0] p_shl4_cast_fu_589_p1;
wire   [1:0] tmp_7_cast_fu_599_p2;
wire   [12:0] p_shl_fu_605_p3;
wire   [8:0] p_shl5_fu_617_p3;
wire   [13:0] p_shl_cast_fu_613_p1;
wire   [13:0] p_shl5_cast_fu_625_p1;
wire   [0:0] tmp_s_fu_647_p2;
wire   [10:0] i_s_fu_661_p2;
wire   [0:0] tmp_1_mid1_fu_671_p2;
wire   [0:0] tmp_1_fu_515_p2;
wire   [21:0] p_shl1_mid1_fu_685_p3;
wire   [17:0] p_shl2_mid1_fu_697_p3;
wire   [22:0] p_shl1_cast_mid1_fu_693_p1;
wire   [22:0] p_shl2_cast_mid1_fu_705_p1;
wire   [22:0] tmp_2_mid1_fu_709_p2;
wire   [22:0] tmp_2_fu_545_p2;
wire   [0:0] tmp_3_mid1_fu_723_p2;
wire   [0:0] tmp_4_mid1_fu_729_p2;
wire   [0:0] or_cond_mid1_fu_735_p2;
wire   [0:0] or_cond_fu_563_p2;
wire   [1:0] tmp_7_fu_667_p1;
wire   [12:0] p_shl3_mid1_fu_749_p3;
wire   [8:0] p_shl4_mid1_fu_761_p3;
wire   [13:0] p_shl3_cast_mid1_fu_757_p1;
wire   [13:0] p_shl4_cast_mid1_fu_769_p1;
wire   [13:0] tmp_6_mid1_fu_773_p2;
wire   [13:0] tmp_6_fu_593_p2;
wire   [1:0] tmp_7_cast_mid1_fu_787_p2;
wire   [12:0] p_shl_mid1_fu_793_p3;
wire   [8:0] p_shl5_mid1_fu_805_p3;
wire   [13:0] p_shl_cast_mid1_fu_801_p1;
wire   [13:0] p_shl5_cast_mid1_fu_813_p1;
wire   [13:0] tmp_9_mid1_fu_817_p2;
wire   [13:0] tmp_9_fu_629_p2;
wire   [22:0] grp_fu_458_p2;
wire  signed [31:0] tmp_61_cast_fu_850_p1;
wire   [32:0] tmp_62_cast_fu_854_p1;
wire   [32:0] out_pix4_sum_fu_858_p2;
wire   [22:0] grp_fu_462_p2;
wire  signed [31:0] tmp_16_cast_fu_873_p1;
wire   [33:0] tmp_17_cast_fu_877_p1;
wire   [33:0] inter_pix2_sum_fu_881_p2;
wire  signed [31:0] tmp_48_cast_fu_896_p1;
wire   [32:0] tmp_49_cast_fu_900_p1;
wire   [32:0] out_pix4_sum5_fu_904_p2;
wire   [33:0] tmp_14_cast_fu_923_p1;
wire   [33:0] inter_pix2_sum6_fu_927_p2;
wire  signed [31:0] tmp_18_cast_fu_956_p1;
wire   [8:0] tmp_65_0_2_cast_fu_972_p1;
wire   [8:0] tmp_651_cast_fu_968_p1;
wire   [8:0] x_weight_1_0_2_fu_975_p2;
wire   [8:0] p_shl8_fu_985_p3;
wire  signed [10:0] x_weight_1_0_2_cast_fu_981_p1;
wire   [10:0] p_shl8_cast_fu_992_p1;
wire   [8:0] tmp_72_0_1_fu_1008_p3;
wire   [8:0] tmp_68_1_2_fu_1019_p3;
wire   [10:0] tmp_68_1_2_cast_fu_1026_p1;
wire   [9:0] tmp_72_0_1_cast_fu_1015_p1;
wire   [9:0] tmp13_cast_fu_1035_p1;
wire   [9:0] y_weight_1_1_2_fu_1038_p2;
wire   [10:0] x_weight_1_1_2_fu_1030_p2;
wire   [10:0] tmp_65_2_cast_fu_1048_p1;
wire   [10:0] y_weight_1_1_2_cast_fu_1044_p1;
wire   [8:0] p_shl9_fu_1063_p3;
wire   [10:0] y_weight_1_2_fu_1057_p2;
wire   [10:0] p_shl9_cast_fu_1070_p1;
wire   [10:0] x_weight_1_2_fu_1051_p2;
wire   [10:0] tmp_65_2_2_cast_fu_1080_p1;
wire   [10:0] y_weight_1_2_1_fu_1074_p2;
wire   [10:0] x_weight_1_2_2_fu_1088_p2;
wire   [8:0] tmp_52_0_2_cast_fu_1113_p1;
wire   [8:0] tmp_521_cast_fu_1110_p1;
wire   [8:0] x_weight_0_2_fu_1116_p2;
wire   [8:0] p_shl6_fu_1126_p3;
wire  signed [10:0] x_weight_0_2_cast_fu_1122_p1;
wire   [10:0] p_shl6_cast_fu_1133_p1;
wire   [7:0] tmp_59_fu_1149_p2;
wire   [7:0] tmp_62_fu_1154_p2;
wire   [0:0] tmp_35_fu_1167_p2;
wire   [7:0] tmp_65_fu_1172_p2;
wire   [7:0] tmp_63_fu_1160_p3;
wire   [7:0] tmp_66_fu_1177_p3;
wire   [7:0] tmp_38_fu_1184_p2;
wire   [0:0] tmp_39_fu_1196_p2;
wire   [0:0] tmp_44_fu_1202_p2;
wire   [0:0] tmp_67_fu_1216_p2;
wire   [7:0] p_i_fu_1208_p3;
wire   [7:0] edge_val_1_fu_1190_p2;
wire   [8:0] tmp_59_0_1_fu_1230_p3;
wire   [8:0] tmp_55_1_2_fu_1241_p3;
wire   [10:0] tmp_55_1_2_cast_fu_1248_p1;
wire   [9:0] tmp_59_0_1_cast_fu_1237_p1;
wire   [9:0] tmp12_cast_fu_1257_p1;
wire   [9:0] y_weight_130_2_fu_1260_p2;
wire   [10:0] x_weight_127_2_fu_1252_p2;
wire   [10:0] tmp_52_2_cast_fu_1270_p1;
wire   [10:0] y_weight_130_2_cast_fu_1266_p1;
wire   [8:0] p_shl7_fu_1285_p3;
wire   [10:0] y_weight_2_fu_1279_p2;
wire   [10:0] p_shl7_cast_fu_1292_p1;
wire   [10:0] x_weight_2_fu_1273_p2;
wire   [10:0] tmp_52_2_2_cast_fu_1302_p1;
wire   [10:0] y_weight_2_1_fu_1296_p2;
wire   [10:0] x_weight_2_2_fu_1310_p2;
wire   [7:0] tmp_37_fu_1336_p2;
wire   [7:0] tmp_40_fu_1341_p2;
wire   [0:0] tmp_25_fu_1354_p2;
wire   [7:0] tmp_45_fu_1359_p2;
wire   [7:0] tmp_41_fu_1347_p3;
wire   [7:0] tmp_46_fu_1364_p3;
wire   [7:0] tmp_28_fu_1371_p2;
wire   [0:0] tmp_29_fu_1383_p2;
wire   [0:0] tmp_43_fu_1389_p2;
wire   [0:0] tmp_49_fu_1403_p2;
wire   [7:0] p_i1_fu_1395_p3;
wire   [7:0] edge_val_fu_1377_p2;
wire   [30:0] tmp_21_cast_fu_1466_p1;
wire   [30:0] tmp_34_cast_fu_1497_p1;
reg   [54:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state31_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_state16_pp0_stage14_iter0;
wire    ap_block_state41_pp0_stage14_iter1;
wire    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
wire    ap_block_state19_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_state22_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_state25_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_condition_3080;
reg    ap_condition_1875;
reg    ap_condition_1898;
reg    ap_condition_1967;
reg    ap_condition_1993;
reg    ap_condition_3097;

// power-on initialization
initial begin
#0 ap_CS_fsm = 55'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp4_iter6 = 1'b0;
#0 grp_getVal_fu_444_ap_start_reg = 1'b0;
#0 ap_reg_ioackin_gmem0_ARREADY = 1'b0;
#0 ap_reg_ioackin_gmem1_AWREADY = 1'b0;
#0 ap_reg_ioackin_gmem1_WREADY = 1'b0;
#0 ap_reg_ioackin_gmem1_ARREADY = 1'b0;
end

sobel_filter_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
sobel_filter_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .inter_pix(inter_pix),
    .out_pix(out_pix)
);

sobel_filter_gmem0_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ))
sobel_filter_gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem0_ARVALID),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(gmem0_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(32'd1),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(gmem0_RREADY),
    .I_RDATA(gmem0_RDATA),
    .I_RID(gmem0_RID),
    .I_RUSER(gmem0_RUSER),
    .I_RRESP(gmem0_RRESP),
    .I_RLAST(gmem0_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(8'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(1'd0),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem0_BRESP),
    .I_BID(gmem0_BID),
    .I_BUSER(gmem0_BUSER)
);

sobel_filter_gmem1_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM1_CACHE_VALUE ))
sobel_filter_gmem1_m_axi_U(
    .AWVALID(m_axi_gmem1_AWVALID),
    .AWREADY(m_axi_gmem1_AWREADY),
    .AWADDR(m_axi_gmem1_AWADDR),
    .AWID(m_axi_gmem1_AWID),
    .AWLEN(m_axi_gmem1_AWLEN),
    .AWSIZE(m_axi_gmem1_AWSIZE),
    .AWBURST(m_axi_gmem1_AWBURST),
    .AWLOCK(m_axi_gmem1_AWLOCK),
    .AWCACHE(m_axi_gmem1_AWCACHE),
    .AWPROT(m_axi_gmem1_AWPROT),
    .AWQOS(m_axi_gmem1_AWQOS),
    .AWREGION(m_axi_gmem1_AWREGION),
    .AWUSER(m_axi_gmem1_AWUSER),
    .WVALID(m_axi_gmem1_WVALID),
    .WREADY(m_axi_gmem1_WREADY),
    .WDATA(m_axi_gmem1_WDATA),
    .WSTRB(m_axi_gmem1_WSTRB),
    .WLAST(m_axi_gmem1_WLAST),
    .WID(m_axi_gmem1_WID),
    .WUSER(m_axi_gmem1_WUSER),
    .ARVALID(m_axi_gmem1_ARVALID),
    .ARREADY(m_axi_gmem1_ARREADY),
    .ARADDR(m_axi_gmem1_ARADDR),
    .ARID(m_axi_gmem1_ARID),
    .ARLEN(m_axi_gmem1_ARLEN),
    .ARSIZE(m_axi_gmem1_ARSIZE),
    .ARBURST(m_axi_gmem1_ARBURST),
    .ARLOCK(m_axi_gmem1_ARLOCK),
    .ARCACHE(m_axi_gmem1_ARCACHE),
    .ARPROT(m_axi_gmem1_ARPROT),
    .ARQOS(m_axi_gmem1_ARQOS),
    .ARREGION(m_axi_gmem1_ARREGION),
    .ARUSER(m_axi_gmem1_ARUSER),
    .RVALID(m_axi_gmem1_RVALID),
    .RREADY(m_axi_gmem1_RREADY),
    .RDATA(m_axi_gmem1_RDATA),
    .RLAST(m_axi_gmem1_RLAST),
    .RID(m_axi_gmem1_RID),
    .RUSER(m_axi_gmem1_RUSER),
    .RRESP(m_axi_gmem1_RRESP),
    .BVALID(m_axi_gmem1_BVALID),
    .BREADY(m_axi_gmem1_BREADY),
    .BRESP(m_axi_gmem1_BRESP),
    .BID(m_axi_gmem1_BID),
    .BUSER(m_axi_gmem1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem1_ARVALID),
    .I_ARREADY(gmem1_ARREADY),
    .I_ARADDR(gmem1_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(32'd2073600),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem1_RVALID),
    .I_RREADY(gmem1_RREADY),
    .I_RDATA(gmem1_RDATA),
    .I_RID(gmem1_RID),
    .I_RUSER(gmem1_RUSER),
    .I_RRESP(gmem1_RRESP),
    .I_RLAST(gmem1_RLAST),
    .I_AWVALID(gmem1_AWVALID),
    .I_AWREADY(gmem1_AWREADY),
    .I_AWADDR(gmem1_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(gmem1_AWLEN),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem1_WVALID),
    .I_WREADY(gmem1_WREADY),
    .I_WDATA(gmem1_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(gmem1_BVALID),
    .I_BREADY(gmem1_BREADY),
    .I_BRESP(gmem1_BRESP),
    .I_BID(gmem1_BID),
    .I_BUSER(gmem1_BUSER)
);

sobel_filter_supebkb #(
    .DataWidth( 8 ),
    .AddressRange( 7680 ),
    .AddressWidth( 13 ))
superCache_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(superCache_address0),
    .ce0(superCache_ce0),
    .we0(superCache_we0),
    .d0(superCache_d0),
    .q0(superCache_q0)
);

getVal grp_getVal_fu_444(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_getVal_fu_444_ap_start),
    .ap_done(grp_getVal_fu_444_ap_done),
    .ap_idle(grp_getVal_fu_444_ap_idle),
    .ap_ready(grp_getVal_fu_444_ap_ready),
    .ap_ce(grp_getVal_fu_444_ap_ce),
    .index(reg_470),
    .xDiff(grp_getVal_fu_444_xDiff),
    .yDiff(grp_getVal_fu_444_yDiff),
    .Y_address0(grp_getVal_fu_444_Y_address0),
    .Y_ce0(grp_getVal_fu_444_Y_ce0),
    .Y_q0(superCache_q0),
    .ap_return(grp_getVal_fu_444_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_subdone))))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_subdone)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state45) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((ap_sig_ioackin_gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state45) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state45);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((ap_sig_ioackin_gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state52) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((~((ap_sig_ioackin_gmem1_AWREADY == 1'b0) | (gmem1_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state51))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state52) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state52);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((~((ap_sig_ioackin_gmem1_AWREADY == 1'b0) | (gmem1_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state51))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state59) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state59)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state59);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end else if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
            ap_enable_reg_pp3_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state68) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state67)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state68)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state68);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter6 <= ap_enable_reg_pp4_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter7 <= ap_enable_reg_pp4_iter6;
        end else if ((1'b1 == ap_CS_fsm_state67)) begin
            ap_enable_reg_pp4_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_condition_pp5_exit_iter0_state83) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((ap_sig_ioackin_gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state82))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state83)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state83);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if (((ap_sig_ioackin_gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state82))) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem0_ARREADY <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op196_readreq_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op195_readreq_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_reg_ioackin_gmem0_ARREADY <= 1'b0;
        end else if ((((ap_predicate_op196_readreq_state4 == 1'b1) & (gmem0_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_01001)) | ((ap_predicate_op195_readreq_state4 == 1'b1) & (gmem0_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_01001)))) begin
            ap_reg_ioackin_gmem0_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem1_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state76)) begin
            if ((ap_sig_ioackin_gmem1_ARREADY == 1'b1)) begin
                ap_reg_ioackin_gmem1_ARREADY <= 1'b0;
            end else if ((gmem1_ARREADY == 1'b1)) begin
                ap_reg_ioackin_gmem1_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem1_AWREADY <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (tmp_31_reg_1867 == 1'd1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_sig_ioackin_gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state82)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (tmp_20_reg_1847 == 1'd1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_predicate_op363_writereq_state37 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | (~((ap_sig_ioackin_gmem1_AWREADY == 1'b0) | (gmem1_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state51)) | ((ap_sig_ioackin_gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44)) | ((ap_predicate_op326_writereq_state36 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
            ap_reg_ioackin_gmem1_AWREADY <= 1'b0;
        end else if ((((gmem1_AWREADY == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (tmp_31_reg_1867 == 1'd1) & (1'b0 == ap_block_pp4_stage0_01001)) | ((gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state82)) | ((gmem1_AWREADY == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (tmp_20_reg_1847 == 1'd1) & (1'b0 == ap_block_pp3_stage0_01001)) | ((ap_predicate_op363_writereq_state37 == 1'b1) & (gmem1_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_01001)) | ((gmem1_BVALID == 1'b1) & (gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51)) | ((gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44)) | ((ap_predicate_op326_writereq_state36 == 1'b1) & (gmem1_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_01001)))) begin
            ap_reg_ioackin_gmem1_AWREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem1_WREADY <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp4_iter2 == 1'b1) & (tmp_31_reg_1867_pp4_iter1_reg == 1'd1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (exitcond1_reg_1894_pp5_iter1_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (tmp_20_reg_1847_pp3_iter1_reg == 1'd1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond2_reg_1838 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_predicate_op366_write_state38 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_predicate_op349_write_state37 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_10_reg_1818 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
            ap_reg_ioackin_gmem1_WREADY <= 1'b0;
        end else if ((((gmem1_WREADY == 1'b1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (tmp_31_reg_1867_pp4_iter1_reg == 1'd1) & (1'b0 == ap_block_pp4_stage0_01001)) | ((1'b0 == ap_block_pp5_stage0_01001) & (gmem1_WREADY == 1'b1) & (ap_enable_reg_pp5_iter2 == 1'b1) & (exitcond1_reg_1894_pp5_iter1_reg == 1'd0)) | ((gmem1_WREADY == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b1) & (tmp_20_reg_1847_pp3_iter1_reg == 1'd1) & (1'b0 == ap_block_pp3_stage0_01001)) | ((gmem1_WREADY == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond2_reg_1838 == 1'd0) & (1'b0 == ap_block_pp2_stage0_01001)) | ((ap_predicate_op366_write_state38 == 1'b1) & (gmem1_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage11_01001)) | ((ap_predicate_op349_write_state37 == 1'b1) & (gmem1_WREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_01001)) | ((gmem1_WREADY == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_10_reg_1818 == 1'd0) & (1'b0 == ap_block_pp1_stage0_01001)))) begin
            ap_reg_ioackin_gmem1_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_getVal_fu_444_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_predicate_op282_call_state34_state33 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_predicate_op271_call_state33_state32 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op268_call_state31_state30 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_predicate_op262_call_state28_state27 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage24_11001) & (ap_predicate_op259_call_state27_state26 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_predicate_op256_call_state25_state24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage21_11001) & (ap_predicate_op253_call_state24_state23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_predicate_op250_call_state22_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_predicate_op247_call_state21_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_predicate_op238_call_state16_state15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op235_call_state15_state14 == 1'b1) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_predicate_op241_call_state18_state17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_predicate_op244_call_state19_state18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op232_call_state13_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_predicate_op222_call_state12_state11 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op265_call_state30_state29 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            grp_getVal_fu_444_ap_start_reg <= 1'b1;
        end else if ((grp_getVal_fu_444_ap_ready == 1'b1)) begin
            grp_getVal_fu_444_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sig_ioackin_gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
        i1_reg_389 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_10_fu_1421_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i1_reg_389 <= i_1_fu_1427_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_sig_ioackin_gmem1_AWREADY == 1'b0) | (gmem1_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state51))) begin
        i2_reg_400 <= 16'd40064;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond2_fu_1448_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i2_reg_400 <= i_2_fu_1454_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
        i3_reg_411 <= 21'd0;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (tmp_20_fu_1460_p2 == 1'd1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        i3_reg_411 <= i_3_fu_1475_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        i4_reg_422 <= 21'd1919;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (tmp_31_fu_1491_p2 == 1'd1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        i4_reg_422 <= i_4_fu_1506_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sig_ioackin_gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state82))) begin
        i5_reg_433 <= 21'd0;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (exitcond1_fu_1532_p2 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        i5_reg_433 <= i_5_fu_1538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1587 == 1'd0))) begin
        i_reg_367 <= i_mid2_reg_1627;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_367 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1587 == 1'd0))) begin
        indvar_flatten_reg_356 <= indvar_flatten_next_reg_1591;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_356 <= 21'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1587 == 1'd0))) begin
        j_reg_378 <= j_1_reg_1676;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_378 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op363_writereq_state37 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        edge_val_1_i1_reg_1813 <= edge_val_1_i1_fu_1409_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op326_writereq_state36 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        edge_val_1_i_reg_1787 <= edge_val_1_i_fu_1222_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        exitcond1_reg_1894 <= exitcond1_fu_1532_p2;
        exitcond1_reg_1894_pp5_iter1_reg <= exitcond1_reg_1894;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        exitcond2_reg_1838 <= exitcond2_fu_1448_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_1587 <= exitcond_flatten_fu_635_p2;
        or_cond_mid2_reg_1613_pp0_iter1_reg <= or_cond_mid2_reg_1613;
        tmp_1_mid2_reg_1603_pp0_iter1_reg <= tmp_1_mid2_reg_1603;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op215_read_state11 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        gmem0_addr_1_read_reg_1661 <= gmem0_RDATA;
        tmp_15_reg_1666 <= tmp_15_fu_946_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0))) begin
        gmem0_addr_1_reg_1638 <= inter_pix2_sum_cast_fu_886_p1;
        gmem1_addr_2_reg_1644 <= out_pix4_sum5_cast_fu_909_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op218_read_state11 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        gmem0_addr_read_reg_1671 <= gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_1_mid2_reg_1603 == 1'd1) & (exitcond_flatten_reg_1587 == 1'd0))) begin
        gmem0_addr_reg_1655 <= inter_pix2_sum6_cast_fu_932_p1;
        tmp_13_cast_reg_1650 <= tmp_13_cast_fu_919_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        gmem1_addr_2_reg_1644_pp0_iter1_reg <= gmem1_addr_2_reg_1644;
        gmem1_addr_3_reg_1632_pp0_iter1_reg <= gmem1_addr_3_reg_1632;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0))) begin
        gmem1_addr_3_reg_1632 <= out_pix4_sum_cast_fu_863_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state76) & (ap_sig_ioackin_gmem1_ARREADY == 1'b1))) begin
        gmem1_addr_6_reg_1887[29 : 0] <= tmp_68_fu_1522_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        gmem1_addr_reg_1575[29 : 0] <= tmp_fu_489_p1[29 : 0];
        out_pix3_reg_1557 <= {{out_pix[31:2]}};
        tmp_5_cast_reg_1581 <= tmp_5_cast_fu_507_p1;
        tmp_cast1_reg_1562[29 : 0] <= tmp_cast1_fu_493_p1[29 : 0];
        tmp_cast_reg_1569[29 : 0] <= tmp_cast_fu_497_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_fu_635_p2 == 1'd0))) begin
        i_mid2_reg_1627 <= i_mid2_fu_831_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_next_reg_1591 <= indvar_flatten_next_fu_641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1587 == 1'd0))) begin
        j_1_reg_1676 <= j_1_fu_951_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_fu_635_p2 == 1'd0))) begin
        j_mid2_reg_1596 <= j_mid2_fu_653_p3;
        or_cond_mid2_reg_1613 <= or_cond_mid2_fu_741_p3;
        tmp_1_mid2_reg_1603 <= tmp_1_mid2_fu_677_p3;
        tmp_2_mid2_reg_1607[22 : 7] <= tmp_2_mid2_fu_715_p3[22 : 7];
        tmp_6_mid2_reg_1617[13 : 7] <= tmp_6_mid2_fu_779_p3[13 : 7];
        tmp_9_mid2_reg_1622[13 : 7] <= tmp_9_mid2_fu_823_p3[13 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (tmp_20_fu_1460_p2 == 1'd1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        out_pix4_sum1_reg_1851 <= out_pix4_sum1_fu_1470_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (tmp_31_fu_1491_p2 == 1'd1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        out_pix4_sum2_reg_1871 <= out_pix4_sum2_fu_1501_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        out_pix4_sum8_reg_1827 <= out_pix4_sum8_fu_1433_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_predicate_op215_read_state11 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0)))) begin
        reg_470 <= grp_fu_466_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0)))) begin
        reg_475 <= grp_getVal_fu_444_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0))) begin
        tmp13_reg_1751 <= tmp13_fu_1002_p2;
        x_weight_1_1_1_reg_1746 <= x_weight_1_1_1_fu_996_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0))) begin
        tmp8_reg_1782 <= tmp8_fu_1143_p2;
        x_weight_127_1_reg_1777 <= x_weight_127_1_fu_1137_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_10_reg_1818 <= tmp_10_fu_1421_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0))) begin
        tmp_17_reg_1681 <= grp_getVal_fu_444_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0))) begin
        tmp_18_reg_1691 <= grp_getVal_fu_444_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0))) begin
        tmp_19_reg_1701 <= grp_getVal_fu_444_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        tmp_20_reg_1847 <= tmp_20_fu_1460_p2;
        tmp_20_reg_1847_pp3_iter1_reg <= tmp_20_reg_1847;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        tmp_20_reg_1847_pp3_iter2_reg <= tmp_20_reg_1847_pp3_iter1_reg;
        tmp_20_reg_1847_pp3_iter3_reg <= tmp_20_reg_1847_pp3_iter2_reg;
        tmp_20_reg_1847_pp3_iter4_reg <= tmp_20_reg_1847_pp3_iter3_reg;
        tmp_20_reg_1847_pp3_iter5_reg <= tmp_20_reg_1847_pp3_iter4_reg;
        tmp_20_reg_1847_pp3_iter6_reg <= tmp_20_reg_1847_pp3_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0))) begin
        tmp_21_reg_1711 <= grp_getVal_fu_444_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0))) begin
        tmp_22_reg_1802 <= tmp_22_fu_1322_p2;
        tmp_36_reg_1792 <= tmp_36_fu_1306_p1;
        tmp_42_reg_1807 <= tmp_42_fu_1328_p1;
        y_weight_2_2_reg_1797 <= y_weight_2_2_fu_1316_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0))) begin
        tmp_23_reg_1721 <= grp_getVal_fu_444_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0))) begin
        tmp_24_reg_1731 <= grp_getVal_fu_444_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0))) begin
        tmp_27_reg_1741 <= grp_getVal_fu_444_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        tmp_31_reg_1867 <= tmp_31_fu_1491_p2;
        tmp_31_reg_1867_pp4_iter1_reg <= tmp_31_reg_1867;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        tmp_31_reg_1867_pp4_iter2_reg <= tmp_31_reg_1867_pp4_iter1_reg;
        tmp_31_reg_1867_pp4_iter3_reg <= tmp_31_reg_1867_pp4_iter2_reg;
        tmp_31_reg_1867_pp4_iter4_reg <= tmp_31_reg_1867_pp4_iter3_reg;
        tmp_31_reg_1867_pp4_iter5_reg <= tmp_31_reg_1867_pp4_iter4_reg;
        tmp_31_reg_1867_pp4_iter6_reg <= tmp_31_reg_1867_pp4_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0))) begin
        tmp_32_reg_1766 <= tmp_32_fu_1100_p2;
        tmp_58_reg_1756 <= tmp_58_fu_1084_p1;
        tmp_64_reg_1771 <= tmp_64_fu_1106_p1;
        y_weight_1_2_2_reg_1761 <= y_weight_1_2_2_fu_1094_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0))) begin
        tmp_51_reg_1686 <= grp_getVal_fu_444_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0))) begin
        tmp_52_reg_1696 <= grp_getVal_fu_444_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0))) begin
        tmp_53_reg_1706 <= grp_getVal_fu_444_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0))) begin
        tmp_54_reg_1716 <= grp_getVal_fu_444_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0))) begin
        tmp_55_reg_1726 <= grp_getVal_fu_444_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0))) begin
        tmp_56_reg_1736 <= grp_getVal_fu_444_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond1_reg_1894 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        val_reg_1903 <= val_fu_1544_p1;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_635_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_10_fu_1421_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state45 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state45 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_fu_1448_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state52 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state52 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_20_fu_1460_p2 == 1'd0)) begin
        ap_condition_pp3_exit_iter0_state59 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state59 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_31_fu_1491_p2 == 1'd0)) begin
        ap_condition_pp4_exit_iter0_state68 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state68 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1_fu_1532_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state83 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state83 = 1'b0;
    end
end

always @ (*) begin
    if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state90))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter7 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter7 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter6 == 1'b0) & (ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1587 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_371_p4 = i_mid2_reg_1627;
    end else begin
        ap_phi_mux_i_phi_fu_371_p4 = i_reg_367;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1587 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_360_p4 = indvar_flatten_next_reg_1591;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_360_p4 = indvar_flatten_reg_356;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1587 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_j_phi_fu_382_p4 = j_1_reg_1676;
    end else begin
        ap_phi_mux_j_phi_fu_382_p4 = j_reg_378;
    end
end

always @ (*) begin
    if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state90))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem0_ARREADY == 1'b0)) begin
        ap_sig_ioackin_gmem0_ARREADY = gmem0_ARREADY;
    end else begin
        ap_sig_ioackin_gmem0_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem1_ARREADY == 1'b0)) begin
        ap_sig_ioackin_gmem1_ARREADY = gmem1_ARREADY;
    end else begin
        ap_sig_ioackin_gmem1_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem1_AWREADY == 1'b0)) begin
        ap_sig_ioackin_gmem1_AWREADY = gmem1_AWREADY;
    end else begin
        ap_sig_ioackin_gmem1_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem1_WREADY == 1'b0)) begin
        ap_sig_ioackin_gmem1_WREADY = gmem1_WREADY;
    end else begin
        ap_sig_ioackin_gmem1_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3080)) begin
        if ((ap_predicate_op196_readreq_state4 == 1'b1)) begin
            gmem0_ARADDR = gmem0_addr_reg_1655;
        end else if ((ap_predicate_op195_readreq_state4 == 1'b1)) begin
            gmem0_ARADDR = gmem0_addr_1_reg_1638;
        end else begin
            gmem0_ARADDR = 'bx;
        end
    end else begin
        gmem0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op196_readreq_state4 == 1'b1) & (ap_reg_ioackin_gmem0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_01001)) | ((ap_predicate_op195_readreq_state4 == 1'b1) & (ap_reg_ioackin_gmem0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_01001)))) begin
        gmem0_ARVALID = 1'b1;
    end else begin
        gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op218_read_state11 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op215_read_state11 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        gmem0_RREADY = 1'b1;
    end else begin
        gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_1_mid2_reg_1603 == 1'd1) & (exitcond_flatten_reg_1587 == 1'd0) & (1'b0 == ap_block_pp0_stage2)))) begin
        gmem0_blk_n_AR = m_axi_gmem0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_1_mid2_reg_1603 == 1'd1) & (exitcond_flatten_reg_1587 == 1'd0)))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_gmem1_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state76))) begin
        gmem1_ARVALID = 1'b1;
    end else begin
        gmem1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem1_AWREADY == 1'b0)) begin
        if ((1'b1 == ap_CS_fsm_state82)) begin
            gmem1_AWADDR = gmem1_addr_6_reg_1887;
        end else if ((1'b1 == ap_condition_1993)) begin
            gmem1_AWADDR = out_pix4_sum2_cast_fu_1512_p1;
        end else if ((1'b1 == ap_condition_1967)) begin
            gmem1_AWADDR = out_pix4_sum1_cast_fu_1481_p1;
        end else if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
            gmem1_AWADDR = out_pix4_sum8_cast_fu_1438_p1;
        end else if ((1'b1 == ap_CS_fsm_state44)) begin
            gmem1_AWADDR = gmem1_addr_reg_1575;
        end else if ((1'b1 == ap_condition_1898)) begin
            gmem1_AWADDR = gmem1_addr_2_reg_1644_pp0_iter1_reg;
        end else if ((1'b1 == ap_condition_1875)) begin
            gmem1_AWADDR = gmem1_addr_3_reg_1632_pp0_iter1_reg;
        end else begin
            gmem1_AWADDR = 'bx;
        end
    end else begin
        gmem1_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_gmem1_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state82))) begin
        gmem1_AWLEN = 32'd2073600;
    end else if ((((gmem1_BVALID == 1'b1) & (ap_reg_ioackin_gmem1_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state51)) | ((ap_reg_ioackin_gmem1_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state44)))) begin
        gmem1_AWLEN = 32'd1920;
    end else if ((((ap_reg_ioackin_gmem1_AWREADY == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (tmp_31_reg_1867 == 1'd1) & (1'b0 == ap_block_pp4_stage0_01001)) | ((ap_reg_ioackin_gmem1_AWREADY == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (tmp_20_reg_1847 == 1'd1) & (1'b0 == ap_block_pp3_stage0_01001)) | ((ap_predicate_op363_writereq_state37 == 1'b1) & (ap_reg_ioackin_gmem1_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_01001)) | ((ap_predicate_op326_writereq_state36 == 1'b1) & (ap_reg_ioackin_gmem1_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_01001)))) begin
        gmem1_AWLEN = 32'd1;
    end else begin
        gmem1_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_gmem1_AWREADY == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (tmp_31_reg_1867 == 1'd1) & (1'b0 == ap_block_pp4_stage0_01001)) | ((ap_reg_ioackin_gmem1_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state82)) | ((ap_reg_ioackin_gmem1_AWREADY == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (tmp_20_reg_1847 == 1'd1) & (1'b0 == ap_block_pp3_stage0_01001)) | ((ap_predicate_op363_writereq_state37 == 1'b1) & (ap_reg_ioackin_gmem1_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_01001)) | ((gmem1_BVALID == 1'b1) & (ap_reg_ioackin_gmem1_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state51)) | ((ap_reg_ioackin_gmem1_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state44)) | ((ap_predicate_op326_writereq_state36 == 1'b1) & (ap_reg_ioackin_gmem1_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_01001)))) begin
        gmem1_AWVALID = 1'b1;
    end else begin
        gmem1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter7 == 1'b1) & (tmp_31_reg_1867_pp4_iter6_reg == 1'd1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state90)) | ((ap_enable_reg_pp3_iter7 == 1'b1) & (tmp_20_reg_1847_pp3_iter6_reg == 1'd1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state58)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_predicate_op373_writeresp_state42 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_predicate_op376_writeresp_state43 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((ap_sig_ioackin_gmem1_AWREADY == 1'b0) | (gmem1_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state51)))) begin
        gmem1_BREADY = 1'b1;
    end else begin
        gmem1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond1_reg_1894 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        gmem1_RREADY = 1'b1;
    end else begin
        gmem1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_gmem1_WREADY == 1'b0) & (1'b0 == ap_block_pp5_stage0_01001) & (ap_enable_reg_pp5_iter2 == 1'b1) & (exitcond1_reg_1894_pp5_iter1_reg == 1'd0))) begin
        gmem1_WDATA = fourWide_fu_1548_p5;
    end else if ((((ap_reg_ioackin_gmem1_WREADY == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (tmp_31_reg_1867_pp4_iter1_reg == 1'd1) & (1'b0 == ap_block_pp4_stage0_01001)) | ((ap_reg_ioackin_gmem1_WREADY == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (tmp_20_reg_1847_pp3_iter1_reg == 1'd1) & (1'b0 == ap_block_pp3_stage0_01001)) | ((ap_reg_ioackin_gmem1_WREADY == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond2_reg_1838 == 1'd0) & (1'b0 == ap_block_pp2_stage0_01001)) | ((ap_reg_ioackin_gmem1_WREADY == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_10_reg_1818 == 1'd0) & (1'b0 == ap_block_pp1_stage0_01001)))) begin
        gmem1_WDATA = 32'd0;
    end else if (((ap_predicate_op366_write_state38 == 1'b1) & (ap_reg_ioackin_gmem1_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage11_01001))) begin
        gmem1_WDATA = tmp_47_fu_1417_p1;
    end else if (((ap_predicate_op349_write_state37 == 1'b1) & (ap_reg_ioackin_gmem1_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_01001))) begin
        gmem1_WDATA = tmp_60_fu_1332_p1;
    end else begin
        gmem1_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_gmem1_WREADY == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (tmp_31_reg_1867_pp4_iter1_reg == 1'd1) & (1'b0 == ap_block_pp4_stage0_01001)) | ((ap_reg_ioackin_gmem1_WREADY == 1'b0) & (1'b0 == ap_block_pp5_stage0_01001) & (ap_enable_reg_pp5_iter2 == 1'b1) & (exitcond1_reg_1894_pp5_iter1_reg == 1'd0)) | ((ap_reg_ioackin_gmem1_WREADY == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (tmp_20_reg_1847_pp3_iter1_reg == 1'd1) & (1'b0 == ap_block_pp3_stage0_01001)) | ((ap_reg_ioackin_gmem1_WREADY == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond2_reg_1838 == 1'd0) & (1'b0 == ap_block_pp2_stage0_01001)) | ((ap_predicate_op366_write_state38 == 1'b1) & (ap_reg_ioackin_gmem1_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage11_01001)) | ((ap_predicate_op349_write_state37 == 1'b1) & (ap_reg_ioackin_gmem1_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_01001)) | ((ap_reg_ioackin_gmem1_WREADY == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_10_reg_1818 == 1'd0) & (1'b0 == ap_block_pp1_stage0_01001)))) begin
        gmem1_WVALID = 1'b1;
    end else begin
        gmem1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        gmem1_blk_n_AR = m_axi_gmem1_ARREADY;
    end else begin
        gmem1_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44) | ((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (tmp_31_reg_1867 == 1'd1)) | ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (tmp_20_reg_1847 == 1'd1)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0)))) begin
        gmem1_blk_n_AW = m_axi_gmem1_AWREADY;
    end else begin
        gmem1_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state51) | ((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter7 == 1'b1) & (tmp_31_reg_1867_pp4_iter6_reg == 1'd1)) | ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter7 == 1'b1) & (tmp_20_reg_1847_pp3_iter6_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0)))) begin
        gmem1_blk_n_B = m_axi_gmem1_BVALID;
    end else begin
        gmem1_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond1_reg_1894 == 1'd0))) begin
        gmem1_blk_n_R = m_axi_gmem1_RVALID;
    end else begin
        gmem1_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (tmp_31_reg_1867_pp4_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (exitcond1_reg_1894_pp5_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (tmp_20_reg_1847_pp3_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond2_reg_1838 == 1'd0)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_10_reg_1818 == 1'd0)))) begin
        gmem1_blk_n_W = m_axi_gmem1_WREADY;
    end else begin
        gmem1_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)))) begin
        grp_getVal_fu_444_ap_ce = 1'b1;
    end else begin
        grp_getVal_fu_444_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op282_call_state34 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7)) | ((ap_predicate_op271_call_state33 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6)) | ((ap_predicate_op265_call_state30 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3)) | ((ap_predicate_op262_call_state28 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_predicate_op259_call_state27 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_predicate_op268_call_state31 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)))) begin
        grp_getVal_fu_444_xDiff = 2'd1;
    end else if ((((ap_predicate_op253_call_state24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22)) | ((ap_predicate_op247_call_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19)) | ((ap_predicate_op256_call_state25 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)) | ((ap_predicate_op250_call_state22 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20)))) begin
        grp_getVal_fu_444_xDiff = 2'd0;
    end else if ((((ap_predicate_op235_call_state15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13)) | ((ap_predicate_op241_call_state18 == 1'b1) & (1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op232_call_state13 == 1'b1) & (1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op222_call_state12 == 1'b1) & (1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op244_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17)) | ((ap_predicate_op238_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14)))) begin
        grp_getVal_fu_444_xDiff = 2'd3;
    end else begin
        grp_getVal_fu_444_xDiff = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op282_call_state34 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7)) | ((ap_predicate_op271_call_state33 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6)) | ((ap_predicate_op253_call_state24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22)) | ((ap_predicate_op241_call_state18 == 1'b1) & (1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op256_call_state25 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)) | ((ap_predicate_op244_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17)))) begin
        grp_getVal_fu_444_yDiff = 2'd1;
    end else if ((((ap_predicate_op265_call_state30 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3)) | ((ap_predicate_op268_call_state31 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_predicate_op235_call_state15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13)) | ((ap_predicate_op238_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14)))) begin
        grp_getVal_fu_444_yDiff = 2'd0;
    end else if ((((ap_predicate_op262_call_state28 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_predicate_op259_call_state27 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_predicate_op247_call_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19)) | ((ap_predicate_op232_call_state13 == 1'b1) & (1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op222_call_state12 == 1'b1) & (1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op250_call_state22 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20)))) begin
        grp_getVal_fu_444_yDiff = 2'd3;
    end else begin
        grp_getVal_fu_444_yDiff = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_1_mid2_reg_1603 == 1'd1) & (exitcond_flatten_reg_1587 == 1'd0))) begin
        superCache_address0 = tmp_12_fu_964_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0))) begin
        superCache_address0 = tmp_16_fu_959_p1;
    end else if ((((ap_predicate_op281_call_state34 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7)) | ((ap_predicate_op272_call_state33 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6)) | ((ap_predicate_op270_call_state32 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5)) | ((ap_predicate_op269_call_state32 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5)) | ((ap_predicate_op266_call_state30 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3)) | ((ap_predicate_op261_call_state28 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_predicate_op260_call_state27 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_predicate_op312_call_state35 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((ap_predicate_op297_call_state35 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((ap_predicate_op267_call_state31 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_predicate_op341_call_state36 == 1'b1) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((ap_predicate_op258_call_state26 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24)) | ((ap_predicate_op257_call_state26 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24)) | ((ap_predicate_op254_call_state24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22)) | ((ap_predicate_op252_call_state23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((ap_predicate_op251_call_state23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((ap_predicate_op248_call_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19)) | ((ap_predicate_op246_call_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((ap_predicate_op245_call_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((ap_predicate_op236_call_state15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13)) | ((ap_predicate_op234_call_state14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12)) | ((ap_predicate_op233_call_state14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12)) | ((ap_predicate_op240_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op239_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op242_call_state18 == 1'b1) & (1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op231_call_state13 == 1'b1) & (1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op255_call_state25 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)) | ((ap_predicate_op249_call_state22 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20)) | ((ap_predicate_op243_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17)) | ((ap_predicate_op237_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14)) | ((ap_predicate_op264_call_state29 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_predicate_op263_call_state29 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)))) begin
        superCache_address0 = grp_getVal_fu_444_Y_address0;
    end else begin
        superCache_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_1_mid2_reg_1603 == 1'd1) & (exitcond_flatten_reg_1587 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001)))) begin
        superCache_ce0 = 1'b1;
    end else if ((((ap_predicate_op281_call_state34 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7)) | ((ap_predicate_op272_call_state33 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6)) | ((ap_predicate_op270_call_state32 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5)) | ((ap_predicate_op269_call_state32 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5)) | ((ap_predicate_op266_call_state30 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3)) | ((ap_predicate_op261_call_state28 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_predicate_op260_call_state27 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_predicate_op312_call_state35 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((ap_predicate_op297_call_state35 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8)) | ((ap_predicate_op267_call_state31 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_predicate_op341_call_state36 == 1'b1) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((ap_predicate_op258_call_state26 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24)) | ((ap_predicate_op257_call_state26 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24)) | ((ap_predicate_op254_call_state24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22)) | ((ap_predicate_op252_call_state23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((ap_predicate_op251_call_state23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((ap_predicate_op248_call_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19)) | ((ap_predicate_op246_call_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((ap_predicate_op245_call_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((ap_predicate_op236_call_state15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13)) | ((ap_predicate_op234_call_state14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12)) | ((ap_predicate_op233_call_state14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12)) | ((ap_predicate_op240_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op239_call_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op242_call_state18 == 1'b1) & (1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op231_call_state13 == 1'b1) & (1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op255_call_state25 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)) | ((ap_predicate_op249_call_state22 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20)) | ((ap_predicate_op243_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17)) | ((ap_predicate_op237_call_state16 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14)) | ((ap_predicate_op264_call_state29 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_predicate_op263_call_state29 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)))) begin
        superCache_ce0 = grp_getVal_fu_444_Y_ce0;
    end else begin
        superCache_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3097)) begin
        if ((tmp_1_mid2_reg_1603 == 1'd1)) begin
            superCache_d0 = gmem0_addr_read_reg_1671;
        end else if (((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0))) begin
            superCache_d0 = gmem0_addr_1_read_reg_1661;
        end else begin
            superCache_d0 = 'bx;
        end
    end else begin
        superCache_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_1_mid2_reg_1603 == 1'd1) & (exitcond_flatten_reg_1587 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001)))) begin
        superCache_we0 = 1'b1;
    end else begin
        superCache_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_fu_635_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_fu_635_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((~((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage16_subdone)) & (1'b0 == ap_block_pp0_stage16_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage16_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((ap_sig_ioackin_gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_10_fu_1421_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_10_fu_1421_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if ((~((ap_sig_ioackin_gmem1_AWREADY == 1'b0) | (gmem1_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond2_fu_1448_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond2_fu_1448_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (tmp_20_fu_1460_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter7 == 1'b1) & (ap_enable_reg_pp3_iter6 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter7 == 1'b1) & (ap_enable_reg_pp3_iter6 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (tmp_20_fu_1460_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (tmp_31_fu_1491_p2 == 1'd0) & (1'b0 == ap_block_pp4_stage0_subdone)) & ~((ap_enable_reg_pp4_iter7 == 1'b1) & (ap_enable_reg_pp4_iter6 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((ap_enable_reg_pp4_iter7 == 1'b1) & (ap_enable_reg_pp4_iter6 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)) | ((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (tmp_31_fu_1491_p2 == 1'd0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state76 : begin
            if (((1'b1 == ap_CS_fsm_state76) & (ap_sig_ioackin_gmem1_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((ap_sig_ioackin_gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state82))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (exitcond1_fu_1532_p2 == 1'd1) & (1'b0 == ap_block_pp5_stage0_subdone)) & ~((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) | ((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (exitcond1_fu_1532_p2 == 1'd1) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state90))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd54];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((1'b1 == ap_block_state37_io) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((1'b1 == ap_block_state37_io) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((1'b1 == ap_block_state38_io) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((1'b1 == ap_block_state38_io) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_predicate_op373_writeresp_state42 == 1'b1) & (gmem1_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_predicate_op373_writeresp_state42 == 1'b1) & (gmem1_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((ap_predicate_op376_writeresp_state43 == 1'b1) & (gmem1_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((ap_predicate_op376_writeresp_state43 == 1'b1) & (gmem1_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op218_read_state11 == 1'b1) & (gmem0_RVALID == 1'b0)) | ((ap_predicate_op215_read_state11 == 1'b1) & (gmem0_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = (((1'b1 == ap_block_state36_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op218_read_state11 == 1'b1) & (gmem0_RVALID == 1'b0)) | ((ap_predicate_op215_read_state11 == 1'b1) & (gmem0_RVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = (((1'b1 == ap_block_state36_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op218_read_state11 == 1'b1) & (gmem0_RVALID == 1'b0)) | ((ap_predicate_op215_read_state11 == 1'b1) & (gmem0_RVALID == 1'b0)))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((1'b1 == ap_block_state46_io) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((1'b1 == ap_block_state46_io) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((1'b1 == ap_block_state53_io) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((1'b1 == ap_block_state53_io) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((gmem1_BVALID == 1'b0) & (ap_enable_reg_pp3_iter7 == 1'b1) & (tmp_20_reg_1847_pp3_iter6_reg == 1'd1));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = (((gmem1_BVALID == 1'b0) & (ap_enable_reg_pp3_iter7 == 1'b1) & (tmp_20_reg_1847_pp3_iter6_reg == 1'd1)) | ((1'b1 == ap_block_state61_io) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b1 == ap_block_state60_io) & (ap_enable_reg_pp3_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = (((gmem1_BVALID == 1'b0) & (ap_enable_reg_pp3_iter7 == 1'b1) & (tmp_20_reg_1847_pp3_iter6_reg == 1'd1)) | ((1'b1 == ap_block_state61_io) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b1 == ap_block_state60_io) & (ap_enable_reg_pp3_iter1 == 1'b1)));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage0_01001 = ((gmem1_BVALID == 1'b0) & (ap_enable_reg_pp4_iter7 == 1'b1) & (tmp_31_reg_1867_pp4_iter6_reg == 1'd1));
end

always @ (*) begin
    ap_block_pp4_stage0_11001 = (((gmem1_BVALID == 1'b0) & (ap_enable_reg_pp4_iter7 == 1'b1) & (tmp_31_reg_1867_pp4_iter6_reg == 1'd1)) | ((1'b1 == ap_block_state70_io) & (ap_enable_reg_pp4_iter2 == 1'b1)) | ((1'b1 == ap_block_state69_io) & (ap_enable_reg_pp4_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp4_stage0_subdone = (((gmem1_BVALID == 1'b0) & (ap_enable_reg_pp4_iter7 == 1'b1) & (tmp_31_reg_1867_pp4_iter6_reg == 1'd1)) | ((1'b1 == ap_block_state70_io) & (ap_enable_reg_pp4_iter2 == 1'b1)) | ((1'b1 == ap_block_state69_io) & (ap_enable_reg_pp4_iter1 == 1'b1)));
end

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_01001 = ((gmem1_RVALID == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (exitcond1_reg_1894 == 1'd0));
end

always @ (*) begin
    ap_block_pp5_stage0_11001 = (((1'b1 == ap_block_state85_io) & (ap_enable_reg_pp5_iter2 == 1'b1)) | ((gmem1_RVALID == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (exitcond1_reg_1894 == 1'd0)));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = (((1'b1 == ap_block_state85_io) & (ap_enable_reg_pp5_iter2 == 1'b1)) | ((gmem1_RVALID == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (exitcond1_reg_1894 == 1'd0)));
end

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage9_iter0 = (((ap_predicate_op218_read_state11 == 1'b1) & (gmem0_RVALID == 1'b0)) | ((ap_predicate_op215_read_state11 == 1'b1) & (gmem0_RVALID == 1'b0)));
end

assign ap_block_state12_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage11_iter0_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage14_iter0_ignore_call3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage17_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage20_iter0_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage23_iter0_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage4_iter1_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state36_io = ((ap_predicate_op326_writereq_state36 == 1'b1) & (ap_sig_ioackin_gmem1_AWREADY == 1'b0));
end

assign ap_block_state36_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state37_io = (((ap_predicate_op363_writereq_state37 == 1'b1) & (ap_sig_ioackin_gmem1_AWREADY == 1'b0)) | ((ap_predicate_op349_write_state37 == 1'b1) & (ap_sig_ioackin_gmem1_WREADY == 1'b0)));
end

assign ap_block_state37_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state38_io = ((ap_predicate_op366_write_state38 == 1'b1) & (ap_sig_ioackin_gmem1_WREADY == 1'b0));
end

assign ap_block_state38_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage11_iter1_ignore_call1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage14_iter1_ignore_call3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state42_pp0_stage15_iter1 = ((ap_predicate_op373_writeresp_state42 == 1'b1) & (gmem1_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state43_pp0_stage16_iter1 = ((ap_predicate_op376_writeresp_state43 == 1'b1) & (gmem1_BVALID == 1'b0));
end

assign ap_block_state45_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state46_io = ((ap_sig_ioackin_gmem1_WREADY == 1'b0) & (tmp_10_reg_1818 == 1'd0));
end

assign ap_block_state46_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = (((ap_predicate_op196_readreq_state4 == 1'b1) & (ap_sig_ioackin_gmem0_ARREADY == 1'b0)) | ((ap_predicate_op195_readreq_state4 == 1'b1) & (ap_sig_ioackin_gmem0_ARREADY == 1'b0)));
end

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state53_io = ((ap_sig_ioackin_gmem1_WREADY == 1'b0) & (exitcond2_reg_1838 == 1'd0));
end

assign ap_block_state53_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state60_io = ((ap_sig_ioackin_gmem1_AWREADY == 1'b0) & (tmp_20_reg_1847 == 1'd1));
end

assign ap_block_state60_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state61_io = ((ap_sig_ioackin_gmem1_WREADY == 1'b0) & (tmp_20_reg_1847_pp3_iter1_reg == 1'd1));
end

assign ap_block_state61_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp3_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state66_pp3_stage0_iter7 = ((gmem1_BVALID == 1'b0) & (tmp_20_reg_1847_pp3_iter6_reg == 1'd1));
end

assign ap_block_state68_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state69_io = ((ap_sig_ioackin_gmem1_AWREADY == 1'b0) & (tmp_31_reg_1867 == 1'd1));
end

assign ap_block_state69_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0_ignore_call26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state70_io = ((ap_sig_ioackin_gmem1_WREADY == 1'b0) & (tmp_31_reg_1867_pp4_iter1_reg == 1'd1));
end

assign ap_block_state70_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp4_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state75_pp4_stage0_iter7 = ((gmem1_BVALID == 1'b0) & (tmp_31_reg_1867_pp4_iter6_reg == 1'd1));
end

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state84_pp5_stage0_iter1 = ((gmem1_RVALID == 1'b0) & (exitcond1_reg_1894 == 1'd0));
end

always @ (*) begin
    ap_block_state85_io = ((ap_sig_ioackin_gmem1_WREADY == 1'b0) & (exitcond1_reg_1894_pp5_iter1_reg == 1'd0));
end

assign ap_block_state85_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1875 = ((ap_predicate_op326_writereq_state36 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_01001));
end

always @ (*) begin
    ap_condition_1898 = ((ap_predicate_op363_writereq_state37 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_01001));
end

always @ (*) begin
    ap_condition_1967 = ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (tmp_20_reg_1847 == 1'd1) & (1'b0 == ap_block_pp3_stage0_01001));
end

always @ (*) begin
    ap_condition_1993 = ((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (tmp_31_reg_1867 == 1'd1) & (1'b0 == ap_block_pp4_stage0_01001));
end

always @ (*) begin
    ap_condition_3080 = ((ap_reg_ioackin_gmem0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_01001));
end

always @ (*) begin
    ap_condition_3097 = ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1587 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

always @ (*) begin
    ap_predicate_op195_readreq_state4 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op196_readreq_state4 = ((tmp_1_mid2_reg_1603 == 1'd1) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op215_read_state11 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op218_read_state11 = ((tmp_1_mid2_reg_1603 == 1'd1) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op222_call_state12 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op222_call_state12_state11 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op231_call_state13 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op232_call_state13 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op232_call_state13_state12 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op233_call_state14 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op234_call_state14 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op235_call_state15 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op235_call_state15_state14 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op236_call_state15 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op237_call_state16 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op238_call_state16 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op238_call_state16_state15 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op239_call_state17 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op240_call_state17 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op241_call_state18 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op241_call_state18_state17 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op242_call_state18 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op243_call_state19 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op244_call_state19 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op244_call_state19_state18 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op245_call_state20 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op246_call_state20 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op247_call_state21 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op247_call_state21_state20 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op248_call_state21 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op249_call_state22 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op250_call_state22 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op250_call_state22_state21 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op251_call_state23 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op252_call_state23 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op253_call_state24 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op253_call_state24_state23 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op254_call_state24 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op255_call_state25 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op256_call_state25 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op256_call_state25_state24 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op257_call_state26 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op258_call_state26 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0) & (exitcond_flatten_reg_1587 == 1'd0));
end

always @ (*) begin
    ap_predicate_op259_call_state27 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0));
end

always @ (*) begin
    ap_predicate_op259_call_state27_state26 = ((or_cond_mid2_reg_1613 == 1'd0) & (tmp_1_mid2_reg_1603 == 1'd0));
end

always @ (*) begin
    ap_predicate_op260_call_state27 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0));
end

always @ (*) begin
    ap_predicate_op261_call_state28 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op262_call_state28 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op262_call_state28_state27 = ((or_cond_mid2_reg_1613 == 1'd1) & (tmp_1_mid2_reg_1603 == 1'd0));
end

always @ (*) begin
    ap_predicate_op263_call_state29 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op264_call_state29 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op265_call_state30 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op265_call_state30_state29 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op266_call_state30 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op267_call_state31 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op268_call_state31 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op268_call_state31_state30 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op269_call_state32 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op270_call_state32 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op271_call_state33 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op271_call_state33_state32 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op272_call_state33 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op281_call_state34 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op282_call_state34 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op282_call_state34_state33 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op297_call_state35 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op312_call_state35 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op326_writereq_state36 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op341_call_state36 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op349_write_state37 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op363_writereq_state37 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op366_write_state38 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op373_writeresp_state42 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd0) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op376_writeresp_state43 = ((or_cond_mid2_reg_1613_pp0_iter1_reg == 1'd1) & (tmp_1_mid2_reg_1603_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign edge_val_1_fu_1190_p2 = (tmp_38_fu_1184_p2 ^ 8'd255);

assign edge_val_1_i1_fu_1409_p3 = ((tmp_49_fu_1403_p2[0:0] === 1'b1) ? p_i1_fu_1395_p3 : edge_val_fu_1377_p2);

assign edge_val_1_i_fu_1222_p3 = ((tmp_67_fu_1216_p2[0:0] === 1'b1) ? p_i_fu_1208_p3 : edge_val_1_fu_1190_p2);

assign edge_val_fu_1377_p2 = (tmp_28_fu_1371_p2 ^ 8'd255);

assign exitcond1_fu_1532_p2 = ((i5_reg_433 == 21'd2073600) ? 1'b1 : 1'b0);

assign exitcond2_fu_1448_p2 = ((i2_reg_400 == 16'd41984) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_635_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_360_p4 == 21'd2075520) ? 1'b1 : 1'b0);

assign fourWide_fu_1548_p5 = {{{{val_reg_1903}, {val_reg_1903}}, {val_reg_1903}}, {val_reg_1903}};

assign gmem1_ARADDR = tmp_68_fu_1522_p1;

assign grp_fu_458_p2 = (tmp_mid2_fu_839_p2 + j_cast1_fu_845_p1);

assign grp_fu_462_p2 = (tmp_2_mid2_reg_1607 + j_cast1_fu_845_p1);

assign grp_fu_466_p2 = (tmp_9_mid2_reg_1622 + j_cast_fu_942_p1);

assign grp_getVal_fu_444_ap_start = grp_getVal_fu_444_ap_start_reg;

assign i_1_fu_1427_p2 = (i1_reg_389 + 11'd1);

assign i_2_fu_1454_p2 = (i2_reg_400 + 16'd1);

assign i_3_fu_1475_p2 = (i3_reg_411 + 21'd1920);

assign i_4_fu_1506_p2 = (i4_reg_422 + 21'd1920);

assign i_5_fu_1538_p2 = (i5_reg_433 + 21'd1);

assign i_mid2_fu_831_p3 = ((tmp_s_fu_647_p2[0:0] === 1'b1) ? i_s_fu_661_p2 : ap_phi_mux_i_phi_fu_371_p4);

assign i_s_fu_661_p2 = (11'd1 + ap_phi_mux_i_phi_fu_371_p4);

assign indvar_flatten_next_fu_641_p2 = (21'd1 + ap_phi_mux_indvar_flatten_phi_fu_360_p4);

assign inter_pix2_sum6_cast_fu_932_p1 = $signed(inter_pix2_sum6_fu_927_p2);

assign inter_pix2_sum6_fu_927_p2 = ($signed(tmp_14_cast_fu_923_p1) + $signed(tmp_5_cast_reg_1581));

assign inter_pix2_sum_cast_fu_886_p1 = $signed(inter_pix2_sum_fu_881_p2);

assign inter_pix2_sum_fu_881_p2 = ($signed(tmp_17_cast_fu_877_p1) + $signed(tmp_5_cast_reg_1581));

assign j_1_fu_951_p2 = (j_mid2_reg_1596 + 11'd1);

assign j_cast1_fu_845_p1 = j_mid2_reg_1596;

assign j_cast_fu_942_p1 = j_mid2_reg_1596;

assign j_mid2_fu_653_p3 = ((tmp_s_fu_647_p2[0:0] === 1'b1) ? 11'd0 : ap_phi_mux_j_phi_fu_382_p4);

assign or_cond_fu_563_p2 = (tmp_4_fu_557_p2 & tmp_3_fu_551_p2);

assign or_cond_mid1_fu_735_p2 = (tmp_4_mid1_fu_729_p2 & tmp_3_mid1_fu_723_p2);

assign or_cond_mid2_fu_741_p3 = ((tmp_s_fu_647_p2[0:0] === 1'b1) ? or_cond_mid1_fu_735_p2 : or_cond_fu_563_p2);

assign out_pix3_fu_479_p4 = {{out_pix[31:2]}};

assign out_pix4_sum1_cast_fu_1481_p1 = out_pix4_sum1_reg_1851;

assign out_pix4_sum1_fu_1470_p2 = (tmp_21_cast_fu_1466_p1 + tmp_cast1_reg_1562);

assign out_pix4_sum2_cast_fu_1512_p1 = out_pix4_sum2_reg_1871;

assign out_pix4_sum2_fu_1501_p2 = (tmp_34_cast_fu_1497_p1 + tmp_cast1_reg_1562);

assign out_pix4_sum5_cast_fu_909_p1 = out_pix4_sum5_fu_904_p2;

assign out_pix4_sum5_fu_904_p2 = (tmp_49_cast_fu_900_p1 + tmp_cast_reg_1569);

assign out_pix4_sum8_cast_fu_1438_p1 = out_pix4_sum8_reg_1827;

assign out_pix4_sum8_fu_1433_p2 = (tmp_cast1_reg_1562 + 31'd2071680);

assign out_pix4_sum_cast_fu_863_p1 = out_pix4_sum_fu_858_p2;

assign out_pix4_sum_fu_858_p2 = (tmp_62_cast_fu_854_p1 + tmp_cast_reg_1569);

assign p_i1_fu_1395_p3 = ((tmp_29_fu_1383_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_i_fu_1208_p3 = ((tmp_39_fu_1196_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_shl1_cast_fu_529_p1 = p_shl1_fu_521_p3;

assign p_shl1_cast_mid1_fu_693_p1 = p_shl1_mid1_fu_685_p3;

assign p_shl1_fu_521_p3 = {{ap_phi_mux_i_phi_fu_371_p4}, {11'd0}};

assign p_shl1_mid1_fu_685_p3 = {{i_s_fu_661_p2}, {11'd0}};

assign p_shl2_cast_fu_541_p1 = p_shl2_fu_533_p3;

assign p_shl2_cast_mid1_fu_705_p1 = p_shl2_mid1_fu_697_p3;

assign p_shl2_fu_533_p3 = {{ap_phi_mux_i_phi_fu_371_p4}, {7'd0}};

assign p_shl2_mid1_fu_697_p3 = {{i_s_fu_661_p2}, {7'd0}};

assign p_shl3_cast_fu_577_p1 = p_shl3_fu_569_p3;

assign p_shl3_cast_mid1_fu_757_p1 = p_shl3_mid1_fu_749_p3;

assign p_shl3_fu_569_p3 = {{tmp_5_fu_511_p1}, {11'd0}};

assign p_shl3_mid1_fu_749_p3 = {{tmp_7_fu_667_p1}, {11'd0}};

assign p_shl4_cast_fu_589_p1 = p_shl4_fu_581_p3;

assign p_shl4_cast_mid1_fu_769_p1 = p_shl4_mid1_fu_761_p3;

assign p_shl4_fu_581_p3 = {{tmp_5_fu_511_p1}, {7'd0}};

assign p_shl4_mid1_fu_761_p3 = {{tmp_7_fu_667_p1}, {7'd0}};

assign p_shl5_cast_fu_625_p1 = p_shl5_fu_617_p3;

assign p_shl5_cast_mid1_fu_813_p1 = p_shl5_mid1_fu_805_p3;

assign p_shl5_fu_617_p3 = {{tmp_7_cast_fu_599_p2}, {7'd0}};

assign p_shl5_mid1_fu_805_p3 = {{tmp_7_cast_mid1_fu_787_p2}, {7'd0}};

assign p_shl6_cast_fu_1133_p1 = p_shl6_fu_1126_p3;

assign p_shl6_fu_1126_p3 = {{tmp_21_reg_1711}, {1'd0}};

assign p_shl7_cast_fu_1292_p1 = p_shl7_fu_1285_p3;

assign p_shl7_fu_1285_p3 = {{tmp_27_reg_1741}, {1'd0}};

assign p_shl8_cast_fu_992_p1 = p_shl8_fu_985_p3;

assign p_shl8_fu_985_p3 = {{tmp_53_reg_1706}, {1'd0}};

assign p_shl9_cast_fu_1070_p1 = p_shl9_fu_1063_p3;

assign p_shl9_fu_1063_p3 = {{tmp_56_reg_1736}, {1'd0}};

assign p_shl_cast_fu_613_p1 = p_shl_fu_605_p3;

assign p_shl_cast_mid1_fu_801_p1 = p_shl_mid1_fu_793_p3;

assign p_shl_fu_605_p3 = {{tmp_7_cast_fu_599_p2}, {11'd0}};

assign p_shl_mid1_fu_793_p3 = {{tmp_7_cast_mid1_fu_787_p2}, {11'd0}};

assign tmp12_cast_fu_1257_p1 = tmp8_reg_1782;

assign tmp13_cast_fu_1035_p1 = tmp13_reg_1751;

assign tmp13_fu_1002_p2 = (tmp_65_0_2_cast_fu_972_p1 + tmp_651_cast_fu_968_p1);

assign tmp8_fu_1143_p2 = (tmp_52_0_2_cast_fu_1113_p1 + tmp_521_cast_fu_1110_p1);

assign tmp_10_fu_1421_p2 = ((i1_reg_389 == 11'd1920) ? 1'b1 : 1'b0);

assign tmp_12_fu_964_p1 = $unsigned(tmp_13_cast_reg_1650);

assign tmp_13_cast_fu_919_p1 = $signed(grp_fu_462_p2);

assign tmp_14_cast_fu_923_p1 = $unsigned(tmp_13_cast_fu_919_p1);

assign tmp_15_fu_946_p2 = (tmp_6_mid2_reg_1617 + j_cast_fu_942_p1);

assign tmp_16_cast_fu_873_p1 = $signed(grp_fu_462_p2);

assign tmp_16_fu_959_p1 = $unsigned(tmp_18_cast_fu_956_p1);

assign tmp_17_cast_fu_877_p1 = $unsigned(tmp_16_cast_fu_873_p1);

assign tmp_18_cast_fu_956_p1 = $signed(tmp_15_reg_1666);

assign tmp_1_fu_515_p2 = ((ap_phi_mux_i_phi_fu_371_p4 < 11'd3) ? 1'b1 : 1'b0);

assign tmp_1_mid1_fu_671_p2 = ((i_s_fu_661_p2 < 11'd3) ? 1'b1 : 1'b0);

assign tmp_1_mid2_fu_677_p3 = ((tmp_s_fu_647_p2[0:0] === 1'b1) ? tmp_1_mid1_fu_671_p2 : tmp_1_fu_515_p2);

assign tmp_20_fu_1460_p2 = ((i3_reg_411 < 21'd2073600) ? 1'b1 : 1'b0);

assign tmp_21_cast_fu_1466_p1 = i3_reg_411;

assign tmp_22_fu_1322_p2 = (($signed(x_weight_2_2_fu_1310_p2) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign tmp_25_fu_1354_p2 = (($signed(y_weight_2_2_reg_1797) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign tmp_28_fu_1371_p2 = (tmp_41_fu_1347_p3 + tmp_46_fu_1364_p3);

assign tmp_29_fu_1383_p2 = ((tmp_28_fu_1371_p2 < 8'd55) ? 1'b1 : 1'b0);

assign tmp_2_fu_545_p2 = (p_shl1_cast_fu_529_p1 - p_shl2_cast_fu_541_p1);

assign tmp_2_mid1_fu_709_p2 = (p_shl1_cast_mid1_fu_693_p1 - p_shl2_cast_mid1_fu_705_p1);

assign tmp_2_mid2_fu_715_p3 = ((tmp_s_fu_647_p2[0:0] === 1'b1) ? tmp_2_mid1_fu_709_p2 : tmp_2_fu_545_p2);

assign tmp_31_fu_1491_p2 = ((i4_reg_422 < 21'd2073600) ? 1'b1 : 1'b0);

assign tmp_32_fu_1100_p2 = (($signed(x_weight_1_2_2_fu_1088_p2) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign tmp_34_cast_fu_1497_p1 = i4_reg_422;

assign tmp_35_fu_1167_p2 = (($signed(y_weight_1_2_2_reg_1761) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign tmp_36_fu_1306_p1 = x_weight_2_fu_1273_p2[7:0];

assign tmp_37_fu_1336_p2 = (tmp_36_reg_1792 + reg_475);

assign tmp_38_fu_1184_p2 = (tmp_63_fu_1160_p3 + tmp_66_fu_1177_p3);

assign tmp_39_fu_1196_p2 = ((tmp_38_fu_1184_p2 < 8'd55) ? 1'b1 : 1'b0);

assign tmp_3_fu_551_p2 = ((ap_phi_mux_i_phi_fu_371_p4 > 11'd2) ? 1'b1 : 1'b0);

assign tmp_3_mid1_fu_723_p2 = ((i_s_fu_661_p2 > 11'd2) ? 1'b1 : 1'b0);

assign tmp_40_fu_1341_p2 = (8'd0 - tmp_37_fu_1336_p2);

assign tmp_41_fu_1347_p3 = ((tmp_22_reg_1802[0:0] === 1'b1) ? tmp_37_fu_1336_p2 : tmp_40_fu_1341_p2);

assign tmp_42_fu_1328_p1 = y_weight_2_2_fu_1316_p2[7:0];

assign tmp_43_fu_1389_p2 = ((tmp_28_fu_1371_p2 > 8'd155) ? 1'b1 : 1'b0);

assign tmp_44_fu_1202_p2 = ((tmp_38_fu_1184_p2 > 8'd155) ? 1'b1 : 1'b0);

assign tmp_45_fu_1359_p2 = (8'd0 - tmp_42_reg_1807);

assign tmp_46_fu_1364_p3 = ((tmp_25_fu_1354_p2[0:0] === 1'b1) ? tmp_42_reg_1807 : tmp_45_fu_1359_p2);

assign tmp_47_fu_1417_p1 = edge_val_1_i1_reg_1813;

assign tmp_48_cast_fu_896_p1 = $signed(grp_fu_458_p2);

assign tmp_49_cast_fu_900_p1 = $unsigned(tmp_48_cast_fu_896_p1);

assign tmp_49_fu_1403_p2 = (tmp_43_fu_1389_p2 | tmp_29_fu_1383_p2);

assign tmp_4_fu_557_p2 = ((ap_phi_mux_i_phi_fu_371_p4 < 11'd1080) ? 1'b1 : 1'b0);

assign tmp_4_mid1_fu_729_p2 = ((i_s_fu_661_p2 < 11'd1080) ? 1'b1 : 1'b0);

assign tmp_521_cast_fu_1110_p1 = tmp_17_reg_1681;

assign tmp_52_0_2_cast_fu_1113_p1 = tmp_19_reg_1701;

assign tmp_52_2_2_cast_fu_1302_p1 = grp_getVal_fu_444_ap_return;

assign tmp_52_2_cast_fu_1270_p1 = tmp_24_reg_1731;

assign tmp_55_1_2_cast_fu_1248_p1 = tmp_55_1_2_fu_1241_p3;

assign tmp_55_1_2_fu_1241_p3 = {{tmp_23_reg_1721}, {1'd0}};

assign tmp_58_fu_1084_p1 = x_weight_1_2_fu_1051_p2[7:0];

assign tmp_59_0_1_cast_fu_1237_p1 = tmp_59_0_1_fu_1230_p3;

assign tmp_59_0_1_fu_1230_p3 = {{tmp_18_reg_1691}, {1'd0}};

assign tmp_59_fu_1149_p2 = (tmp_58_reg_1756 + reg_475);

assign tmp_5_cast_fu_507_p1 = $signed(inter_pix);

assign tmp_5_fu_511_p1 = ap_phi_mux_i_phi_fu_371_p4[1:0];

assign tmp_60_fu_1332_p1 = edge_val_1_i_reg_1787;

assign tmp_61_cast_fu_850_p1 = $signed(grp_fu_458_p2);

assign tmp_62_cast_fu_854_p1 = $unsigned(tmp_61_cast_fu_850_p1);

assign tmp_62_fu_1154_p2 = (8'd0 - tmp_59_fu_1149_p2);

assign tmp_63_fu_1160_p3 = ((tmp_32_reg_1766[0:0] === 1'b1) ? tmp_59_fu_1149_p2 : tmp_62_fu_1154_p2);

assign tmp_64_fu_1106_p1 = y_weight_1_2_2_fu_1094_p2[7:0];

assign tmp_651_cast_fu_968_p1 = reg_475;

assign tmp_65_0_2_cast_fu_972_p1 = tmp_52_reg_1696;

assign tmp_65_2_2_cast_fu_1080_p1 = grp_getVal_fu_444_ap_return;

assign tmp_65_2_cast_fu_1048_p1 = tmp_55_reg_1726;

assign tmp_65_fu_1172_p2 = (8'd0 - tmp_64_reg_1771);

assign tmp_66_fu_1177_p3 = ((tmp_35_fu_1167_p2[0:0] === 1'b1) ? tmp_64_reg_1771 : tmp_65_fu_1172_p2);

assign tmp_67_fu_1216_p2 = (tmp_44_fu_1202_p2 | tmp_39_fu_1196_p2);

assign tmp_68_1_2_cast_fu_1026_p1 = tmp_68_1_2_fu_1019_p3;

assign tmp_68_1_2_fu_1019_p3 = {{tmp_54_reg_1716}, {1'd0}};

assign tmp_68_fu_1522_p1 = out_pix3_reg_1557;

assign tmp_6_fu_593_p2 = (p_shl3_cast_fu_577_p1 - p_shl4_cast_fu_589_p1);

assign tmp_6_mid1_fu_773_p2 = (p_shl3_cast_mid1_fu_757_p1 - p_shl4_cast_mid1_fu_769_p1);

assign tmp_6_mid2_fu_779_p3 = ((tmp_s_fu_647_p2[0:0] === 1'b1) ? tmp_6_mid1_fu_773_p2 : tmp_6_fu_593_p2);

assign tmp_72_0_1_cast_fu_1015_p1 = tmp_72_0_1_fu_1008_p3;

assign tmp_72_0_1_fu_1008_p3 = {{tmp_51_reg_1686}, {1'd0}};

assign tmp_7_cast_fu_599_p2 = (tmp_5_fu_511_p1 ^ 2'd2);

assign tmp_7_cast_mid1_fu_787_p2 = (tmp_7_fu_667_p1 ^ 2'd2);

assign tmp_7_fu_667_p1 = i_s_fu_661_p2[1:0];

assign tmp_9_fu_629_p2 = (p_shl_cast_fu_613_p1 - p_shl5_cast_fu_625_p1);

assign tmp_9_mid1_fu_817_p2 = (p_shl_cast_mid1_fu_801_p1 - p_shl5_cast_mid1_fu_813_p1);

assign tmp_9_mid2_fu_823_p3 = ((tmp_s_fu_647_p2[0:0] === 1'b1) ? tmp_9_mid1_fu_817_p2 : tmp_9_fu_629_p2);

assign tmp_cast1_fu_493_p1 = out_pix3_fu_479_p4;

assign tmp_cast_fu_497_p1 = out_pix3_fu_479_p4;

assign tmp_fu_489_p1 = out_pix3_fu_479_p4;

assign tmp_mid2_fu_839_p2 = ($signed(23'd8384768) + $signed(tmp_2_mid2_reg_1607));

assign tmp_s_fu_647_p2 = ((ap_phi_mux_j_phi_fu_382_p4 == 11'd1920) ? 1'b1 : 1'b0);

assign val_fu_1544_p1 = gmem1_RDATA[7:0];

assign x_weight_0_2_cast_fu_1122_p1 = $signed(x_weight_0_2_fu_1116_p2);

assign x_weight_0_2_fu_1116_p2 = (tmp_52_0_2_cast_fu_1113_p1 - tmp_521_cast_fu_1110_p1);

assign x_weight_127_1_fu_1137_p2 = ($signed(x_weight_0_2_cast_fu_1122_p1) - $signed(p_shl6_cast_fu_1133_p1));

assign x_weight_127_2_fu_1252_p2 = (tmp_55_1_2_cast_fu_1248_p1 + x_weight_127_1_reg_1777);

assign x_weight_1_0_2_cast_fu_981_p1 = $signed(x_weight_1_0_2_fu_975_p2);

assign x_weight_1_0_2_fu_975_p2 = (tmp_65_0_2_cast_fu_972_p1 - tmp_651_cast_fu_968_p1);

assign x_weight_1_1_1_fu_996_p2 = ($signed(x_weight_1_0_2_cast_fu_981_p1) - $signed(p_shl8_cast_fu_992_p1));

assign x_weight_1_1_2_fu_1030_p2 = (tmp_68_1_2_cast_fu_1026_p1 + x_weight_1_1_1_reg_1746);

assign x_weight_1_2_2_fu_1088_p2 = (tmp_65_2_2_cast_fu_1080_p1 + x_weight_1_2_fu_1051_p2);

assign x_weight_1_2_fu_1051_p2 = (x_weight_1_1_2_fu_1030_p2 - tmp_65_2_cast_fu_1048_p1);

assign x_weight_2_2_fu_1310_p2 = (tmp_52_2_2_cast_fu_1302_p1 + x_weight_2_fu_1273_p2);

assign x_weight_2_fu_1273_p2 = (x_weight_127_2_fu_1252_p2 - tmp_52_2_cast_fu_1270_p1);

assign y_weight_130_2_cast_fu_1266_p1 = y_weight_130_2_fu_1260_p2;

assign y_weight_130_2_fu_1260_p2 = (tmp_59_0_1_cast_fu_1237_p1 + tmp12_cast_fu_1257_p1);

assign y_weight_1_1_2_cast_fu_1044_p1 = y_weight_1_1_2_fu_1038_p2;

assign y_weight_1_1_2_fu_1038_p2 = (tmp_72_0_1_cast_fu_1015_p1 + tmp13_cast_fu_1035_p1);

assign y_weight_1_2_1_fu_1074_p2 = (y_weight_1_2_fu_1057_p2 - p_shl9_cast_fu_1070_p1);

assign y_weight_1_2_2_fu_1094_p2 = (y_weight_1_2_1_fu_1074_p2 - tmp_65_2_2_cast_fu_1080_p1);

assign y_weight_1_2_fu_1057_p2 = (y_weight_1_1_2_cast_fu_1044_p1 - tmp_65_2_cast_fu_1048_p1);

assign y_weight_2_1_fu_1296_p2 = (y_weight_2_fu_1279_p2 - p_shl7_cast_fu_1292_p1);

assign y_weight_2_2_fu_1316_p2 = (y_weight_2_1_fu_1296_p2 - tmp_52_2_2_cast_fu_1302_p1);

assign y_weight_2_fu_1279_p2 = (y_weight_130_2_cast_fu_1266_p1 - tmp_52_2_cast_fu_1270_p1);

always @ (posedge ap_clk) begin
    tmp_cast1_reg_1562[30] <= 1'b0;
    tmp_cast_reg_1569[32:30] <= 3'b000;
    gmem1_addr_reg_1575[31:30] <= 2'b00;
    tmp_2_mid2_reg_1607[6:0] <= 7'b0000000;
    tmp_6_mid2_reg_1617[6:0] <= 7'b0000000;
    tmp_9_mid2_reg_1622[6:0] <= 7'b0000000;
    gmem1_addr_6_reg_1887[31:30] <= 2'b00;
end

endmodule //sobel_filter
